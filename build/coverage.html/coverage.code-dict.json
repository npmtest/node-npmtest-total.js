{"/home/travis/build/npmtest/node-npmtest-total.js/test.js":"/* istanbul instrument in package npmtest_total_js */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-total.js/lib.npmtest_total.js.js":"/* istanbul instrument in package npmtest_total_js */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_total_js = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_total_js = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-total.js/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-total.js && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_total_js */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_total_js\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_total_js.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        local.assetsDict['/assets.npmtest_total_js.rollup.js'] =\n            local.assetsDict['/assets.npmtest_total_js.rollup.js'] ||\n            local.fs.readFileSync(\n                // buildCustomOrg-hack\n                local.npmtest_total_js.__dirname +\n                    '/lib.npmtest_total_js.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-total.js/node_modules/total.js/index.js":"// Copyright 2012-2017 (c) Peter Širka <petersirka@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/**\n * @module Framework\n * @version 2.4.0\n */\n\n'use strict';\n\nconst Qs = require('querystring');\nconst Os = require('os');\nconst Fs = require('fs');\nconst Zlib = require('zlib');\nconst Path = require('path');\nconst Crypto = require('crypto');\nconst Parser = require('url');\nconst Child = require('child_process');\nconst Util = require('util');\nconst Events = require('events');\nconst http = require('http');\n\nconst ENCODING = 'utf8';\nconst RESPONSE_HEADER_CACHECONTROL = 'Cache-Control';\nconst RESPONSE_HEADER_CONTENTTYPE = 'Content-Type';\nconst RESPONSE_HEADER_CONTENTLENGTH = 'Content-Length';\nconst CONTENTTYPE_TEXTPLAIN = 'text/plain';\nconst CONTENTTYPE_TEXTHTML = 'text/html';\nconst REQUEST_COMPRESS_CONTENTTYPE = { 'text/plain': true, 'text/javascript': true, 'text/css': true, 'text/jsx': true, 'application/x-javascript': true, 'application/json': true, 'text/xml': true, 'image/svg+xml': true, 'text/x-markdown': true, 'text/html': true };\nconst TEMPORARY_KEY_REGEX = /\\//g;\nconst REG_MOBILE = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|Mobile|Tablet/i;\nconst REG_ROBOT = /search|agent|bot|crawler|spider/i;\nconst REG_VERSIONS = /(href|src)=\"[a-zA-Z0-9\\/\\:\\-\\.]+\\.(jpg|js|css|png|gif|svg|html|ico|json|less|sass|scss|swf|txt|webp|woff|woff2|xls|xlsx|xml|xsl|xslt|zip|rar|csv|doc|docx|eps|gzip|jpe|jpeg|manifest|mov|mp3|flac|mp4|ogg|package|pdf)\"/gi;\nconst REG_MULTIPART = /\\/form\\-data$/i;\nconst REG_COMPILECSS = /url\\(.*?\\)/g;\nconst REG_ROUTESTATIC = /^(\\/\\/|https\\:|http\\:)+/;\nconst REG_RANGE = /bytes=/;\nconst REG_EMPTY = /\\s/g;\nconst REG_ACCEPTCLEANER = /\\s|\\./g;\nconst REG_SANITIZE_BACKSLASH = /\\/\\//g;\nconst REG_WEBSOCKET_ERROR = /ECONNRESET|EHOSTUNREACH|EPIPE|is closed/i;\nconst REG_WINDOWSPATH = /\\\\/g;\nconst REG_SCRIPTCONTENT = /\\<|\\>|;/;\nconst REG_HTTPHTTPS = /^(\\/)?(http|https)\\:\\/\\//i;\nconst REG_NOCOMPRESS = /[\\.|-]+min\\.(css|js)$/i;\nconst REG_TEXTAPPLICATION = /text|application/;\nconst REG_ENCODINGCLEANER = /[\\;\\s]charset=utf\\-8/g;\nconst REQUEST_PROXY_FLAGS = ['post', 'json'];\nconst REQUEST_INSTALL_FLAGS = ['get'];\nconst REQUEST_DOWNLOAD_FLAGS = ['get', 'dnscache'];\nconst QUERYPARSEROPTIONS = { maxKeys: 69 };\nconst EMPTYARRAY = [];\nconst EMPTYOBJECT = {};\nconst EMPTYREQUEST = { uri: {} };\nconst SINGLETONS = {};\nconst REPOSITORY_HEAD = '$head';\nconst REPOSITORY_META = '$meta';\nconst REPOSITORY_COMPONENTS = '$components';\nconst REPOSITORY_META_TITLE = '$title';\nconst REPOSITORY_META_DESCRIPTION = '$description';\nconst REPOSITORY_META_KEYWORDS = '$keywords';\nconst REPOSITORY_META_AUTHOR = '$author';\nconst REPOSITORY_META_IMAGE = '$image';\nconst REPOSITORY_PLACE = '$place';\nconst REPOSITORY_SITEMAP = '$sitemap';\nconst ATTR_END = '\"';\nconst ETAG = '858';\n\nObject.freeze(EMPTYOBJECT);\nObject.freeze(EMPTYARRAY);\nObject.freeze(EMPTYREQUEST);\n\nglobal.EMPTYOBJECT = EMPTYOBJECT;\nglobal.EMPTYARRAY = EMPTYARRAY;\n\nvar RANGE = { start: 0, end: 0 };\nvar HEADERS = {};\nvar SUCCESSHELPER = { success: true };\n\n// Cached headers for repeated usage\nHEADERS['responseCode'] = {};\nHEADERS['responseCode'][RESPONSE_HEADER_CONTENTTYPE] = CONTENTTYPE_TEXTPLAIN;\nHEADERS['responseRedirect'] = {};\nHEADERS['responseRedirect'][RESPONSE_HEADER_CONTENTTYPE] = CONTENTTYPE_TEXTHTML + '; charset=utf-8';\nHEADERS['responseRedirect'][RESPONSE_HEADER_CONTENTLENGTH] = '0';\nHEADERS['sse'] = {};\nHEADERS['sse'][RESPONSE_HEADER_CACHECONTROL] = 'no-cache, no-store, must-revalidate';\nHEADERS['sse']['Pragma'] = 'no-cache';\nHEADERS['sse']['Expires'] = '0';\nHEADERS['sse'][RESPONSE_HEADER_CONTENTTYPE] = 'text/event-stream';\nHEADERS['sse']['X-Powered-By'] = 'Total.js';\nHEADERS['mmr'] = {};\nHEADERS['mmr'][RESPONSE_HEADER_CACHECONTROL] = 'no-cache, no-store, must-revalidate';\nHEADERS['mmr']['Pragma'] = 'no-cache';\nHEADERS['mmr']['Expires'] = '0';\nHEADERS['mmr']['X-Powered-By'] = 'Total.js';\nHEADERS['proxy'] = {};\nHEADERS['proxy']['X-Proxy'] = 'total.js';\nHEADERS['responseFile.lastmodified'] = {};;\nHEADERS['responseFile.lastmodified']['Access-Control-Allow-Origin'] = '*';\nHEADERS['responseFile.lastmodified'][RESPONSE_HEADER_CACHECONTROL] = 'public, max-age=11111111';\nHEADERS['responseFile.lastmodified']['X-Powered-By'] = 'Total.js';\nHEADERS['responseFile.release.compress'] = {};\nHEADERS['responseFile.release.compress'][RESPONSE_HEADER_CACHECONTROL] = 'public, max-age=11111111';\nHEADERS['responseFile.release.compress']['Vary'] = 'Accept-Encoding';\nHEADERS['responseFile.release.compress']['Access-Control-Allow-Origin'] = '*';\nHEADERS['responseFile.release.compress']['Last-Modified'] = 'Mon, 01 Jan 2001 08:00:00 GMT';\nHEADERS['responseFile.release.compress']['Content-Encoding'] = 'gzip';\nHEADERS['responseFile.release.compress']['X-Powered-By'] = 'Total.js';\nHEADERS['responseFile.release.compress.range'] = {};\nHEADERS['responseFile.release.compress.range']['Accept-Ranges'] = 'bytes';\nHEADERS['responseFile.release.compress.range'][RESPONSE_HEADER_CACHECONTROL] = 'public, max-age=11111111';\nHEADERS['responseFile.release.compress.range']['Vary'] = 'Accept-Encoding';\nHEADERS['responseFile.release.compress.range']['Access-Control-Allow-Origin'] = '*';\nHEADERS['responseFile.release.compress.range']['Last-Modified'] = 'Mon, 01 Jan 2001 08:00:00 GMT';\nHEADERS['responseFile.release.compress.range']['Content-Encoding'] = 'gzip';\nHEADERS['responseFile.release.compress.range'][RESPONSE_HEADER_CONTENTLENGTH] = '0';\nHEADERS['responseFile.release.compress.range']['Content-Range'] = '';\nHEADERS['responseFile.release.compress.range']['X-Powered-By'] = 'Total.js';\nHEADERS['responseFile.release'] = {};\nHEADERS['responseFile.release'][RESPONSE_HEADER_CACHECONTROL] = 'public, max-age=11111111';\nHEADERS['responseFile.release']['Vary'] = 'Accept-Encoding';\nHEADERS['responseFile.release']['Access-Control-Allow-Origin'] = '*';\nHEADERS['responseFile.release']['Last-Modified'] = 'Mon, 01 Jan 2001 08:00:00 GMT';\nHEADERS['responseFile.release']['X-Powered-By'] = 'Total.js';\nHEADERS['responseFile.release.range'] = {};\nHEADERS['responseFile.release.range']['Accept-Ranges'] = 'bytes';\nHEADERS['responseFile.release.range'][RESPONSE_HEADER_CACHECONTROL] = 'public, max-age=11111111';\nHEADERS['responseFile.release.range']['Vary'] = 'Accept-Encoding';\nHEADERS['responseFile.release.range']['Access-Control-Allow-Origin'] = '*';\nHEADERS['responseFile.release.range']['Last-Modified'] = 'Mon, 01 Jan 2001 08:00:00 GMT';\nHEADERS['responseFile.release.range'][RESPONSE_HEADER_CONTENTLENGTH] = '0';\nHEADERS['responseFile.release.range']['Content-Range'] = '';\nHEADERS['responseFile.release.range']['X-Powered-By'] = 'Total.js';\nHEADERS['responseFile.debug.compress'] = {};\nHEADERS['responseFile.debug.compress'][RESPONSE_HEADER_CACHECONTROL] = 'private, no-cache, no-store, must-revalidate';\nHEADERS['responseFile.debug.compress']['Vary'] = 'Accept-Encoding';\nHEADERS['responseFile.debug.compress']['Access-Control-Allow-Origin'] = '*';\nHEADERS['responseFile.debug.compress']['Pragma'] = 'no-cache';\nHEADERS['responseFile.debug.compress']['Expires'] = '0';\nHEADERS['responseFile.debug.compress']['Content-Encoding'] = 'gzip';\nHEADERS['responseFile.debug.compress']['X-Powered-By'] = 'Total.js';\nHEADERS['responseFile.debug.compress.range'] = {};\nHEADERS['responseFile.debug.compress.range']['Accept-Ranges'] = 'bytes';\nHEADERS['responseFile.debug.compress.range'][RESPONSE_HEADER_CACHECONTROL] = 'private, no-cache, no-store, must-revalidate';\nHEADERS['responseFile.debug.compress.range']['Vary'] = 'Accept-Encoding';\nHEADERS['responseFile.debug.compress.range']['Access-Control-Allow-Origin'] = '*';\nHEADERS['responseFile.debug.compress.range']['Content-Encoding'] = 'gzip';\nHEADERS['responseFile.debug.compress.range']['Pragma'] = 'no-cache';\nHEADERS['responseFile.debug.compress.range']['Expires'] = '0';\nHEADERS['responseFile.debug.compress.range'][RESPONSE_HEADER_CONTENTLENGTH] = '0';\nHEADERS['responseFile.debug.compress.range']['Content-Range'] = '';\nHEADERS['responseFile.debug.compress.range']['X-Powered-By'] = 'Total.js';\nHEADERS['responseFile.debug'] = {};\nHEADERS['responseFile.debug'][RESPONSE_HEADER_CACHECONTROL] = 'private, no-cache, no-store, must-revalidate';\nHEADERS['responseFile.debug']['Vary'] = 'Accept-Encoding';\nHEADERS['responseFile.debug']['Pragma'] = 'no-cache';\nHEADERS['responseFile.debug']['Expires'] = '0';\nHEADERS['responseFile.debug']['Access-Control-Allow-Origin'] = '*';\nHEADERS['responseFile.debug']['X-Powered-By'] = 'Total.js';\nHEADERS['responseFile.debug.range'] = {};\nHEADERS['responseFile.debug.range']['Accept-Ranges'] = 'bytes';\nHEADERS['responseFile.debug.range'][RESPONSE_HEADER_CACHECONTROL] = 'private, no-cache, no-store, must-revalidate';\nHEADERS['responseFile.debug.range']['Vary'] = 'Accept-Encoding';\nHEADERS['responseFile.debug.range']['Access-Control-Allow-Origin'] = '*';\nHEADERS['responseFile.debug.range']['Pragma'] = 'no-cache';\nHEADERS['responseFile.debug.range']['Expires'] = '0';\nHEADERS['responseFile.debug.range'][RESPONSE_HEADER_CONTENTLENGTH] = '0';\nHEADERS['responseFile.debug.range']['Content-Range'] = '';\nHEADERS['responseFile.debug.range']['X-Powered-By'] = 'Total.js';\nHEADERS['responseContent.mobile.compress'] = {};\nHEADERS['responseContent.mobile.compress']['Vary'] = 'Accept-Encoding, User-Agent';\nHEADERS['responseContent.mobile.compress']['Content-Encoding'] = 'gzip';\nHEADERS['responseContent.mobile'] = {};\nHEADERS['responseContent.mobile']['Vary'] = 'Accept-Encoding, User-Agent';\nHEADERS['responseContent.mobile']['X-Powered-By'] = 'Total.js';\nHEADERS['responseContent.compress'] = {};\nHEADERS['responseContent.compress'][RESPONSE_HEADER_CACHECONTROL] = 'private';\nHEADERS['responseContent.compress']['Vary'] = 'Accept-Encoding';\nHEADERS['responseContent.compress']['Content-Encoding'] = 'gzip';\nHEADERS['responseContent.compress']['X-Powered-By'] = 'Total.js';\nHEADERS['responseContent'] = {};\nHEADERS['responseContent']['Vary'] = 'Accept-Encoding';\nHEADERS['responseContent']['X-Powered-By'] = 'Total.js';\nHEADERS['responseStream.release.compress'] = {};\nHEADERS['responseStream.release.compress'][RESPONSE_HEADER_CACHECONTROL] = 'public, max-age=11111111';\nHEADERS['responseStream.release.compress']['Access-Control-Allow-Origin'] = '*';\nHEADERS['responseStream.release.compress']['Content-Encoding'] = 'gzip';\nHEADERS['responseStream.release.compress']['X-Powered-By'] = 'Total.js';\nHEADERS['responseStream.release'] = {};\nHEADERS['responseStream.release'][RESPONSE_HEADER_CACHECONTROL] = 'public, max-age=11111111';\nHEADERS['responseStream.release']['Access-Control-Allow-Origin'] = '*';\nHEADERS['responseStream.release']['X-Powered-By'] = 'Total.js';\nHEADERS['responseStream.debug.compress'] = {};\nHEADERS['responseStream.debug.compress'][RESPONSE_HEADER_CACHECONTROL] = 'private, no-cache, no-store, must-revalidate';\nHEADERS['responseStream.debug.compress']['Pragma'] = 'no-cache';\nHEADERS['responseStream.debug.compress']['Expires'] = '0';\nHEADERS['responseStream.debug.compress']['Access-Control-Allow-Origin'] = '*';\nHEADERS['responseStream.debug.compress']['Content-Encoding'] = 'gzip';\nHEADERS['responseStream.debug.compress']['X-Powered-By'] = 'Total.js';\nHEADERS['responseStream.debug'] = {};\nHEADERS['responseStream.debug'][RESPONSE_HEADER_CACHECONTROL] = 'private, no-cache, no-store, must-revalidate';\nHEADERS['responseStream.debug']['Pragma'] = 'no-cache';\nHEADERS['responseStream.debug']['Expires'] = '0';\nHEADERS['responseStream.debug']['Access-Control-Allow-Origin'] = '*';\nHEADERS['responseStream.debug']['X-Powered-By'] = 'Total.js';\nHEADERS['responseBinary.compress'] = {};\nHEADERS['responseBinary.compress'][RESPONSE_HEADER_CACHECONTROL] = 'public';\nHEADERS['responseBinary.compress']['Content-Encoding'] = 'gzip';\nHEADERS['responseBinary.compress']['X-Powered-By'] = 'Total.js';\nHEADERS['responseBinary'] = {};\nHEADERS['responseBinary'][RESPONSE_HEADER_CACHECONTROL] = 'public';\nHEADERS['responseBinary']['X-Powered-By'] = 'Total.js';\nHEADERS.redirect = { 'Location': '' };\nHEADERS.authorization = { user: '', password: '', empty: true };\nHEADERS.fsStreamRead = { flags: 'r', mode: '0666', autoClose: true }\nHEADERS.fsStreamReadRange = { flags: 'r', mode: '0666', autoClose: true, start: 0, end: 0 };\nHEADERS.workers = { cwd: '' };\nHEADERS.mmrpipe = { end: false };\nHEADERS['responseLocalize'] = {};\nHEADERS['responseNotModified'] = {};\nHEADERS['responseNotModified'][RESPONSE_HEADER_CACHECONTROL] = 'public, max-age=11111111';\n\nObject.freeze(HEADERS.authorization);\n\nvar IMAGEMAGICK = false;\nvar _controller = '';\nvar _owner = '';\nvar _test;\nvar _flags;\n\n// GO ONLINE MODE\nif (!global.framework_internal)\n\tglobal.framework_internal = require('./internal');\n\nif (!global.framework_builders)\n\tglobal.framework_builders = require('./builders');\n\nif (!global.framework_utils)\n\tglobal.framework_utils = require('./utils');\n\nif (!global.framework_mail)\n\tglobal.framework_mail = require('./mail');\n\nif (!global.framework_image)\n\tglobal.framework_image = require('./image');\n\nif (!global.framework_nosql)\n\tglobal.framework_nosql = require('./nosql');\n\nglobal.Builders = framework_builders;\nvar utils = U = global.Utils = global.utils = global.U = global.framework_utils;\nglobal.Mail = framework_mail;\n\nglobal.WTF = function(message, name, uri) {\n\treturn F.problem(message, name, uri);\n};\n\nglobal.INCLUDE = global.SOURCE = function(name, options) {\n\treturn F.source(name, options);\n};\n\nglobal.MODULE = function(name) {\n\treturn F.module(name);\n};\n\nglobal.NOSQL = function(name) {\n\treturn F.nosql(name);\n};\n\nglobal.NOBIN = function(name) {\n\treturn F.nosql(name).binary;\n};\n\nglobal.NOCOUNTER = function(name) {\n\treturn F.nosql(name).counter;\n};\n\nglobal.NOMEM = global.NOSQLMEMORY = function(name, view) {\n\treturn global.framework_nosql.inmemory(name, view);\n};\n\nglobal.DB = global.DATABASE = function() {\n\treturn typeof(F.database) === 'object' ? F.database : F.database.apply(framework, arguments);\n};\n\nglobal.CONFIG = function(name) {\n\treturn F.config[name];\n};\n\nglobal.UPTODATE = function(type, url, options, interval, callback) {\n\treturn F.uptodate(type, url, options, interval, callback);\n};\n\nglobal.INSTALL = function(type, name, declaration, options, callback) {\n\treturn F.install(type, name, declaration, options, callback);\n};\n\nglobal.UNINSTALL = function(type, name, options) {\n\treturn F.uninstall(type, name, options);\n};\n\nglobal.RESOURCE = function(name, key) {\n\treturn F.resource(name, key);\n};\n\nglobal.TRANSLATE = function(name, key) {\n\treturn F.translate(name, key);\n};\n\nglobal.TRANSLATOR = function(name, text) {\n\treturn F.translator(name, text);\n};\n\nglobal.LOG = function() {\n\treturn F.log.apply(F, arguments);\n};\n\nglobal.TRACE = function(message, name, uri, ip) {\n\treturn F.trace(message, name, uri, ip);\n};\n\nglobal.LOGGER = function() {\n\treturn F.logger.apply(F, arguments);\n};\n\nglobal.MODEL = function(name) {\n\treturn F.model(name);\n};\n\nglobal.$$$ = global.GETSCHEMA = function(group, name, fn, timeout) {\n\treturn framework_builders.getschema(group, name, fn, timeout);\n};\n\nglobal.CREATE = function(group, name) {\n\treturn framework_builders.getschema(group, name).default();\n};\n\nglobal.SCRIPT = function(body, value, callback) {\n\treturn F.script(body, value, callback);\n};\n\nglobal.UID = function() {\n\tvar plus = UIDGENERATOR.index % 2 ? 1 : 0;\n\treturn UIDGENERATOR.date + (UIDGENERATOR.index++).padLeft(4, '0') + UIDGENERATOR.instance + plus;\n};\n\nglobal.MAKE = global.TRANSFORM = function(transform, fn) {\n\n\tif (typeof(transform) === 'function') {\n\t\tvar tmp = fn;\n\t\tfn = transform;\n\t\ttransform = tmp;\n\t}\n\n\tvar obj;\n\n\tif (typeof(fn) === 'function') {\n\t\tobj = {};\n\t\tfn.call(obj, obj);\n\t} else\n\t\tobj = fn;\n\n\treturn transform ? TransformBuilder.transform.apply(obj, arguments) : obj;\n};\n\nglobal.SINGLETON = function(name, def) {\n\treturn SINGLETONS[name] || (SINGLETONS[name] = (new Function('return ' + (def || '{}')))());\n};\n\nglobal.NEWTRANSFORM = function(name, fn, isDefault) {\n\treturn TransformBuilder.addTransform.apply(this, arguments);\n};\n\nglobal.NEWSCHEMA = function(group, name) {\n\tif (!name) {\n\t\tname = group;\n\t\tgroup = 'default';\n\t}\n\treturn framework_builders.newschema(group, name);\n};\n\nglobal.EACHSCHEMA = function(group, fn) {\n\treturn framework_builders.eachschema(group, fn);\n};\n\nglobal.FUNCTION = function(name) {\n\treturn F.functions[name];\n};\n\nglobal.ROUTING = function(name) {\n\treturn F.routing(name);\n};\n\nglobal.SCHEDULE = function(date, each, fn) {\n\treturn F.schedule(date, each, fn);\n};\n\nglobal.FINISHED = function(stream, callback) {\n\tframework_internal.onFinished(stream, callback);\n};\n\nglobal.DESTROY = function(stream) {\n\tframework_internal.destroyStream(stream);\n};\n\nglobal.CLEANUP = function(stream, callback) {\n\n\tvar fn = function() {\n\t\tFINISHED(stream, function() {\n\t\t\tDESTROY(stream);\n\t\t\tif (callback) {\n\t\t\t\tcallback();\n\t\t\t\tcallback = null;\n\t\t\t}\n\t\t});\n\t};\n\n\tstream.on('error', fn);\n\n\tif (stream.readable)\n\t\tstream.on('end', fn);\n\telse\n\t\tstream.on('finish', fn);\n};\n\nglobal.SUCCESS = function(success, value) {\n\n\tif (typeof(success) === 'function') {\n\t\treturn function(err, value) {\n\t\t\tsuccess(err, SUCCESS(err, value));\n\t\t};\n\t}\n\n\tvar err;\n\n\tif (success instanceof Error) {\n\t\terr = success;\n\t\tsuccess = false;\n\t} else if (success instanceof framework_builders.ErrorBuilder) {\n\t\tif (success.hasError()) {\n\t\t\terr = success.output();\n\t\t\tsuccess = false;\n\t\t} else\n\t\t\tsuccess = true;\n\t} else if (success == null)\n\t\tsuccess = true;\n\n\tSUCCESSHELPER.success = success ? true : false;\n\tSUCCESSHELPER.value = value == null ? undefined : value;\n\tSUCCESSHELPER.error = err ? err : undefined;\n\treturn SUCCESSHELPER;\n};\n\nglobal.TRY = function(fn, err) {\n\ttry {\n\t\tfn();\n\t\treturn true;\n\t} catch (e) {\n\t\terr && err(e);\n\t\treturn false;\n\t}\n};\n\nglobal.OBSOLETE = function(name, message) {\n\tconsole.log(F.datetime.format('yyyy-MM-dd HH:mm:ss') + ' :: OBSOLETE / IMPORTANT ---> \"' + name + '\"', message);\n\tif (global.F)\n\t\tF.stats.other.obsolete++;\n};\n\nglobal.DEBUG = false;\nglobal.TEST = false;\nglobal.RELEASE = false;\nglobal.is_client = false;\nglobal.is_server = true;\n\nvar directory = U.$normalize(require.main ? Path.dirname(require.main.filename) : process.cwd());\n\n// F._service() changes the values below:\nvar DATE_EXPIRES = new Date().add('y', 1).toUTCString();\n\nconst UIDGENERATOR = { date: new Date().format('yyMMddHHmm'), instance: 'abcdefghijklmnoprstuwxy'.split('').random().join('').substring(0, 3), index: 1 };\nconst EMPTYBUFFER = U.createBufferSize(0);\nglobal.EMPTYBUFFER = EMPTYBUFFER;\n\nconst controller_error_status = function(controller, status, problem) {\n\n\tif (status !== 500 && problem)\n\t\tcontroller.problem(problem);\n\n\tif (controller.res.success || controller.res.headersSent || !controller.isConnected)\n\t\treturn controller;\n\n\tcontroller.precache && controller.precache(null, null, null);\n\tcontroller.req.path = EMPTYARRAY;\n\tcontroller.subscribe.success();\n\tcontroller.subscribe.route = F.lookup(controller.req, '#' + status, EMPTYARRAY, 0);\n\tcontroller.subscribe.exception = problem;\n\tcontroller.subscribe.execute(status, true);\n\treturn controller;\n};\n\nfunction Framework() {\n\n\tthis.id = null;\n\tthis.version = 2400;\n\tthis.version_header = '2.4.0';\n\tthis.version_node = process.version.toString().replace('v', '').replace(/\\./g, '').parseFloat();\n\n\tthis.config = {\n\n\t\tdebug: false,\n\t\ttrace: true,\n\t\t'trace-console': true,\n\n\t\tname: 'Total.js',\n\t\tversion: '1.0.0',\n\t\tauthor: '',\n\t\tsecret: Os.hostname() + '-' + Os.platform() + '-' + Os.arch(),\n\n\t\t'default-xpoweredby': 'Total.js',\n\t\t'etag-version': '',\n\t\t'directory-controllers': '/controllers/',\n\t\t'directory-components': '/components/',\n\t\t'directory-views': '/views/',\n\t\t'directory-definitions': '/definitions/',\n\t\t'directory-temp': '/tmp/',\n\t\t'directory-models': '/models/',\n\t\t'directory-resources': '/resources/',\n\t\t'directory-public': '/public/',\n\t\t'directory-public-virtual': '/app/',\n\t\t'directory-modules': '/modules/',\n\t\t'directory-source': '/source/',\n\t\t'directory-logs': '/logs/',\n\t\t'directory-tests': '/tests/',\n\t\t'directory-databases': '/databases/',\n\t\t'directory-workers': '/workers/',\n\t\t'directory-packages': '/packages/',\n\t\t'directory-private': '/private/',\n\t\t'directory-isomorphic': '/isomorphic/',\n\t\t'directory-configs': '/configs/',\n\t\t'directory-services': '/services/',\n\t\t'directory-themes': '/themes/',\n\n\t\t// all HTTP static request are routed to directory-public\n\t\t'static-url': '',\n\t\t'static-url-script': '/js/',\n\t\t'static-url-style': '/css/',\n\t\t'static-url-image': '/img/',\n\t\t'static-url-video': '/video/',\n\t\t'static-url-font': '/fonts/',\n\t\t'static-url-download': '/download/',\n\t\t'static-url-components': '/components.',\n\t\t'static-accepts': { 'flac': true, 'jpg': true, 'png': true, 'gif': true, 'ico': true, 'js': true, 'css': true, 'txt': true, 'xml': true, 'woff': true, 'woff2': true, 'otf': true, 'ttf': true, 'eot': true, 'svg': true, 'zip': true, 'rar': true, 'pdf': true, 'docx': true, 'xlsx': true, 'doc': true, 'xls': true, 'html': true, 'htm': true, 'appcache': true, 'manifest': true, 'map': true, 'ogv': true, 'ogg': true, 'mp4': true, 'mp3': true, 'webp': true, 'webm': true, 'swf': true, 'package': true, 'json': true, 'md': true, 'm4v': true, 'jsx': true },\n\n\t\t// 'static-accepts-custom': [],\n\n\t\t'default-layout': 'layout',\n\t\t'default-theme': '',\n\n\t\t// default maximum request size / length\n\t\t// default 10 kB\n\t\t'default-request-length': 10,\n\t\t'default-websocket-request-length': 2,\n\t\t'default-websocket-encodedecode': true,\n\t\t'default-maximum-file-descriptors': 0,\n\t\t'default-timezone': '',\n\t\t'default-root': '',\n\t\t'default-response-maxage': '11111111',\n\n\t\t// Seconds (2 minutes)\n\t\t'default-cors-maxage': 120,\n\n\t\t// in milliseconds\n\t\t'default-request-timeout': 5000,\n\n\t\t// otherwise is used ImageMagick (Heroku supports ImageMagick)\n\t\t// gm = graphicsmagick or im = imagemagick\n\t\t'default-image-converter': 'gm',\n\t\t'default-image-quality': 93,\n\n\t\t'allow-handle-static-files': true,\n\t\t'allow-gzip': true,\n\t\t'allow-websocket': true,\n\t\t'allow-compile-script': true,\n\t\t'allow-compile-style': true,\n\t\t'allow-compile-html': true,\n\t\t'allow-performance': false,\n\t\t'allow-custom-titles': false,\n\t\t'allow-cache-snapshot': false,\n\t\t'disable-strict-server-certificate-validation': true,\n\t\t'disable-clear-temporary-directory': false,\n\n\t\t// Used in F._service()\n\t\t// All values are in minutes\n\t\t'default-interval-clear-resources': 20,\n\t\t'default-interval-clear-cache': 10,\n\t\t'default-interval-precompile-views': 61,\n\t\t'default-interval-websocket-ping': 3,\n\t\t'default-interval-clear-dnscache': 120,\n\t\t'default-interval-uptodate': 5\n\t};\n\n\tthis.global = {};\n\tthis.resources = {};\n\tthis.connections = {};\n\tthis.functions = {};\n\tthis.themes = {};\n\tthis.versions = null;\n\tthis.workflows = {};\n\tthis.uptodates = null;\n\tthis.schedules = [];\n\n\tthis.isDebug = true;\n\tthis.isTest = false;\n\tthis.isLoaded = false;\n\tthis.isWorker = true;\n\tthis.isCluster = require('cluster').isWorker;\n\n\tthis.routes = {\n\t\tsitemap: null,\n\t\tweb: [],\n\t\tfiles: [],\n\t\tcors: [],\n\t\twebsockets: [],\n\t\tmiddleware: {},\n\t\tredirects: {},\n\t\tresize: {},\n\t\trequest: [],\n\t\tviews: {},\n\t\tmerge: {},\n\t\tmapping: {},\n\t\tpackages: {},\n\t\tblocks: {},\n\t\tresources: {},\n\t\tmmr: {}\n\t};\n\n\tthis.owners = [];\n\tthis.modificators = null;\n\tthis.helpers = {};\n\tthis.modules = {};\n\tthis.models = {};\n\tthis.sources = {};\n\tthis.controllers = {};\n\tthis.dependencies = {};\n\tthis.isomorphic = {};\n\tthis.components = { has: false, css: false, js: false, views: {}, instances: {}, version: null };\n\tthis.convertors = [];\n\tthis.tests = [];\n\tthis.errors = [];\n\tthis.problems = [];\n\tthis.changes = [];\n\tthis.server = null;\n\tthis.port = 0;\n\tthis.ip = '';\n\n\tthis.validators = {\n\t\temail: new RegExp('^[a-zA-Z0-9-_.+]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}$'),\n\t\turl: /^(http|https):\\/\\/(?:(?:(?:[\\w\\.\\-\\+!$&'\\(\\)*\\+,;=]|%[0-9a-f]{2})+:)*(?:[\\w\\.\\-\\+%!$&'\\(\\)*\\+,;=]|%[0-9a-f]{2})+@)?(?:(?:[a-z0-9\\-\\.]|%[0-9a-f]{2})+|(?:\\[(?:[0-9a-f]{0,4}:)*(?:[0-9a-f]{0,4})\\]))(?::[0-9]+)?(?:[\\/|\\?](?:[\\w#!:\\.\\?\\+=&@!$'~*,;\\/\\(\\)\\[\\]\\-]|%[0-9a-f]{2})*)?$/i,\n\t\tphone: /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im,\n\t\tzip: /^\\d{5}(?:[-\\s]\\d{4})?$/,\n\t\tuid: /^\\d{14,}[a-z]{3}[01]{1}$/\n\t};\n\n\tthis.workers = {};\n\tthis.databases = {};\n\tthis.directory = HEADERS.workers.cwd = directory;\n\tthis.isLE = Os.endianness ? Os.endianness() === 'LE' : true;\n\tthis.isHTTPS = false;\n\tthis.datetime = new Date();\n\n\t// It's hidden\n\t// this.waits = {};\n\n\tthis.temporary = {\n\t\tpath: {},\n\t\tnotfound: {},\n\t\tprocessing: {},\n\t\trange: {},\n\t\tviews: {},\n\t\tversions: {},\n\t\tdependencies: {}, // temporary for module dependencies\n\t\tother: {},\n\t\tinternal: {} // controllers/modules names for the routing\n\t};\n\n\tthis.stats = {\n\n\t\tother: {\n\t\t\twebsocketPing: 0,\n\t\t\twebsocketCleaner: 0,\n\t\t\tobsolete: 0,\n\t\t\trestart: 0,\n\t\t\tmail: 0\n\t\t},\n\n\t\trequest: {\n\t\t\trequest: 0,\n\t\t\tpending: 0,\n\t\t\tweb: 0,\n\t\t\txhr: 0,\n\t\t\tfile: 0,\n\t\t\twebsocket: 0,\n\t\t\tget: 0,\n\t\t\toptions: 0,\n\t\t\thead: 0,\n\t\t\tpost: 0,\n\t\t\tput: 0,\n\t\t\tpath: 0,\n\t\t\tupload: 0,\n\t\t\tschema: 0,\n\t\t\tmmr: 0,\n\t\t\tblocked: 0,\n\t\t\t'delete': 0,\n\t\t\tmobile: 0,\n\t\t\tdesktop: 0\n\t\t},\n\t\tresponse: {\n\t\t\tview: 0,\n\t\t\tjson: 0,\n\t\t\twebsocket: 0,\n\t\t\ttimeout: 0,\n\t\t\tcustom: 0,\n\t\t\tbinary: 0,\n\t\t\tpipe: 0,\n\t\t\tfile: 0,\n\t\t\timage: 0,\n\t\t\tdestroy: 0,\n\t\t\tstream: 0,\n\t\t\tstreaming: 0,\n\t\t\tplain: 0,\n\t\t\tempty: 0,\n\t\t\tredirect: 0,\n\t\t\tforward: 0,\n\t\t\tnotModified: 0,\n\t\t\tsse: 0,\n\t\t\tmmr: 0,\n\t\t\terrorBuilder: 0,\n\t\t\terror400: 0,\n\t\t\terror401: 0,\n\t\t\terror403: 0,\n\t\t\terror404: 0,\n\t\t\terror408: 0,\n\t\t\terror431: 0,\n\t\t\terror500: 0,\n\t\t\terror501: 0\n\t\t}\n\t};\n\n\t// intialize cache\n\tthis.cache = new FrameworkCache();\n\tthis.path = new FrameworkPath();\n\n\tthis._request_check_redirect = false;\n\tthis._request_check_referer = false;\n\tthis._request_check_POST = false;\n\tthis._request_check_robot = false;\n\tthis._length_middleware = 0;\n\tthis._length_request_middleware = 0;\n\tthis._length_files = 0;\n\tthis._length_wait = 0;\n\tthis._length_themes = 0;\n\tthis._length_cors = 0;\n\tthis._length_subdomain_web = 0;\n\tthis._length_subdomain_websocket = 0;\n\tthis._length_convertors = 0;\n\n\tthis.isVirtualDirectory = false;\n\tthis.isTheme = false;\n\tthis.isWindows = Os.platform().substring(0, 3).toLowerCase() === 'win';\n}\n\n// ======================================================\n// PROTOTYPES\n// ======================================================\n\nFramework.prototype = {\n\tget onLocate() {\n\t\treturn this.onLocale;\n\t},\n\tset onLocate(value) {\n\t\tOBSOLETE('F.onLocate', 'Rename \"F.onLocate\" method for \"F.onLocale\".');\n\t\tthis.onLocale = value;\n\t}\n}\n\nFramework.prototype.__proto__ = Object.create(Events.EventEmitter.prototype, {\n\tconstructor: {\n\t\tvalue: WebSocket,\n\t\tenumberable: false\n\t}\n});\n\n/**\n * Internal function\n * @return {String} Returns current (dependency type and name) owner.\n */\nFramework.prototype.$owner = function() {\n\treturn _owner;\n};\n\nFramework.prototype.behaviour = function(url, flags) {\n\tOBSOLETE('F.behaviour()', 'This functionality has been removed.');\n\treturn F;\n};\n\nFramework.prototype.isSuccess = function(obj) {\n\treturn obj === SUCCESSHELPER;\n};\n\nFramework.prototype.convert = function(value, convertor) {\n\n\tif (convertor) {\n\t\tif (F.convertors.findIndex('name', value) !== -1)\n\t\t\treturn false;\n\n\t\tif (convertor === Number)\n\t\t\tconvertor = U.parseFloat;\n\t\telse if (convertor === Boolean)\n\t\t\tconvertor = U.parseBoolean;\n\t\telse if (typeof(convertor) === 'string') {\n\t\t\tswitch (convertor.toLowerCase()) {\n\t\t\t\tcase 'json':\n\t\t\t\t\tconvertor = U.parseJSON;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'float':\n\t\t\t\tcase 'number':\n\t\t\t\tcase 'double':\n\t\t\t\t\tconvertor = U.parseFloat;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'int':\n\t\t\t\tcase 'integer':\n\t\t\t\t\tconvertor = U.parseInt2;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn console.log('F.convert unknown convertor type:', convertor);\n\t\t\t}\n\t\t}\n\n\t\tF.convertors.push({ name: value, convertor: convertor });\n\t\tF._length_convertors = F.convertors.length;\n\t\treturn true;\n\t}\n\n\tfor (var i = 0, length = F.convertors.length; i < length; i++) {\n\t\tif (value[F.convertors[i].name])\n\t\t\tvalue[F.convertors[i].name] = F.convertors[i].convertor(value[F.convertors[i].name]);\n\t}\n\n\treturn value;\n};\n\n/**\n * Get a controller\n * @param {String} name\n * @return {Object}\n */\nFramework.prototype.controller = function(name) {\n\treturn F.controllers[name] || null;\n};\n\n/**\n * Use configuration\n * @param {String} filename\n * @return {Framework}\n */\nFramework.prototype.useConfig = function(name) {\n\treturn F._configure(name, true);\n};\n\n/**\n * Sort all routes\n * @return {Framework}\n */\nFramework.prototype.$routesSort = function(type) {\n\n\tF.routes.web.sort(function(a, b) {\n\t\treturn a.priority > b.priority ? -1 : a.priority < b.priority ? 1 : 0;\n\t});\n\n\tF.routes.websockets.sort(function(a, b) {\n\t\treturn a.priority > b.priority ? -1 : a.priority < b.priority ? 1 : 0;\n\t});\n\n\tvar cache = {};\n\tvar length = F.routes.web.length;\n\tvar url;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar route = F.routes.web[i];\n\t\tvar name = F.temporary.internal[route.controller];\n\t\tif (name)\n\t\t\troute.controller = name;\n\t\tif (!route.isMOBILE || route.isUPLOAD || route.isXHR || route.isJSON || route.isSYSTEM || route.isXML || route.flags.indexOf('get') === -1)\n\t\t\tcontinue;\n\t\turl = route.url.join('/');\n\t\tcache[url] = true;\n\t}\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar route = F.routes.web[i];\n\t\tif (route.isMOBILE || route.isUPLOAD || route.isXHR || route.isJSON || route.isSYSTEM || route.isXML || route.flags.indexOf('get') === -1)\n\t\t\tcontinue;\n\t\turl = route.url.join('/');\n\t\troute.isMOBILE_VARY = cache[url] === true;\n\t}\n\n\t(!type || type === 1) && F.routes.web.forEach(function(route) {\n\t\tvar tmp = F.routes.web.findItem(function(item) {\n\t\t\treturn item.hash === route.hash && item !== route;\n\t\t});\n\t\troute.isUNIQUE = tmp == null;\n\t});\n\n\t// Clears cache\n\tObject.keys(F.temporary.other).forEach(function(key) {\n\t\tif (key[0] === '#')\n\t\t\tF.temporary.other[key] = undefined;\n\t});\n\n\treturn F;\n};\n\nFramework.prototype.script = function(body, value, callback) {\n\n\tvar fn;\n\tvar compilation = value === undefined && callback === undefined;\n\n\ttry {\n\t\tfn = new Function('next', 'value', 'now', 'var model=value;var global,require,process,GLOBAL,root,clearImmediate,clearInterval,clearTimeout,setImmediate,setInterval,setTimeout,console,$STRING,$VIEWCACHE,framework_internal,TransformBuilder,Pagination,Page,URLBuilder,UrlBuilder,SchemaBuilder,framework_builders,framework_utils,framework_mail,Image,framework_image,framework_nosql,Builders,U,utils,Utils,Mail,WTF,SOURCE,INCLUDE,MODULE,NOSQL,NOBIN,NOCOUNTER,NOSQLMEMORY,NOMEM,DATABASE,DB,CONFIG,INSTALL,UNINSTALL,RESOURCE,TRANSLATOR,LOG,LOGGER,MODEL,GETSCHEMA,CREATE,UID,TRANSFORM,MAKE,SINGLETON,NEWTRANSFORM,NEWSCHEMA,EACHSCHEMA,FUNCTION,ROUTING,SCHEDULE,OBSOLETE,DEBUG,TEST,RELEASE,is_client,is_server,F,framework,Controller,setTimeout2,clearTimeout2,String,Number,Boolean,Object,Function,Date,isomorphic,I,eval;UPTODATE,NEWOPERATION,OPERATION,$$$;try{' + body + '}catch(e){next(e)}');\n\t} catch(e) {\n\t\tcallback && callback(e);\n\t\treturn compilation ? null : F;\n\t}\n\n\tif (compilation) {\n\t\treturn (function() {\n\t\t\treturn function(model, callback) {\n\t\t\t\treturn fn.call(EMPTYOBJECT, function(value) {\n\t\t\t\t\tif (value instanceof Error)\n\t\t\t\t\t\tcallback(value);\n\t\t\t\t\telse\n\t\t\t\t\t\tcallback(null, value);\n\t\t\t\t}, model, F.datetime);\n\t\t\t};\n\t\t})();\n\t}\n\n\tfn.call(EMPTYOBJECT, function(value) {\n\n\t\tif (!callback)\n\t\t\treturn;\n\n\t\tif (value instanceof Error)\n\t\t\tcallback(value);\n\t\telse\n\t\t\tcallback(null, value);\n\n\t}, value, F.datetime);\n\n\treturn F;\n};\n\nFramework.prototype.database = function(name) {\n\treturn F.nosql(name);\n};\n\nFramework.prototype.nosql = function(name) {\n\tvar db = F.databases[name];\n\tif (db)\n\t\treturn db;\n\tF.path.verify('databases');\n\tdb = framework_nosql.load(name, F.path.databases(name));\n\tF.databases[name] = db;\n\treturn db;\n};\n\nFramework.prototype.stop = Framework.prototype.kill = function(signal) {\n\n\tfor (var m in F.workers) {\n\t\tvar worker = F.workers[m];\n\t\tTRY(() => worker && worker.kill && worker.kill(signal || 'SIGTERM'));\n\t}\n\n\tF.emit('exit', signal);\n\n\tif (!F.isWorker && typeof(process.send) === 'function')\n\t\tTRY(() => process.send('stop'));\n\n\tF.cache.stop();\n\tF.server && F.server.close();\n\n\tsetTimeout(() => process.exit(signal || 'SIGTERM'), TEST ? 2000 : 100);\n\treturn F;\n};\n\n\nFramework.prototype.redirect = function(host, newHost, withPath, permanent) {\n\n\tvar external = host.startsWith('http://') || host.startsWith('https');\n\tif (external) {\n\n\t\tif (host[host.length - 1] === '/')\n\t\t\thost = host.substring(0, host.length - 1);\n\n\t\tif (newHost[newHost.length - 1] === '/')\n\t\t\tnewHost = newHost.substring(0, newHost.length - 1);\n\n\t\tF.routes.redirects[host] = { url: newHost, path: withPath, permanent: permanent };\n\t\tF._request_check_redirect = true;\n\t\tF.owners.push({ type: 'redirects', owner: _owner, id: host });\n\t\treturn F;\n\t}\n\n\tif (host[0] !== '/')\n\t\thost = '/' + host;\n\n\tvar flags;\n\n\tif (withPath instanceof Array) {\n\t\tflags = withPath;\n\t\twithPath = permanent === true;\n\t} else if (permanent instanceof Array) {\n\t\tflags = permanent;\n\t\twithPath = withPath === true;\n\t} else\n\t\twithPath = withPath === true;\n\n\tpermanent = withPath;\n\n\tif (U.isStaticFile(host)) {\n\t\tF.file(host, function(req, res) {\n\t\t\tif (newHost.startsWith('http://') || newHost.startsWith('https://'))\n\t\t\t\tres.redirect(newHost, permanent);\n\t\t\telse\n\t\t\t\tres.redirect(newHost[0] !== '/' ? '/' + newHost : newHost, permanent);\n\t\t});\n\t\treturn F;\n\t}\n\n\tF.route(host, function() {\n\n\t\tif (newHost.startsWith('http://') || newHost.startsWith('https://')) {\n\t\t\tthis.redirect(newHost + this.href(), permanent);\n\t\t\treturn;\n\t\t}\n\n\t\tif (newHost[0] !== '/')\n\t\t\tnewHost = '/' + newHost;\n\n\t\tthis.redirect(newHost + this.href(), permanent);\n\t}, flags);\n\n\treturn F;\n};\n\n/**\n * Schedule job\n * @param {Date or String} date\n * @param {Boolean} repeat Repeat schedule\n * @param {Function} fn\n * @return {Framework}\n */\nFramework.prototype.schedule = function(date, repeat, fn) {\n\n\tif (fn === undefined) {\n\t\tfn = repeat;\n\t\trepeat = false;\n\t}\n\n\tvar type = typeof(date);\n\n\tif (type === 'string')\n\t\tdate = date.parseDate();\n\telse if (type === 'number')\n\t\tdate = new Date(date);\n\n\tvar sum = date.getTime();\n\n\tif (repeat)\n\t\trepeat = repeat.replace('each', '1');\n\n\tF.schedules.push({ expire: sum, fn: fn, repeat: repeat, owner: _owner });\n\treturn F;\n};\n\n/**\n * Auto resize picture according the path\n * @param {String} url Relative path.\n * @param {Function(image)} fn Processing.\n * @param {String Array} flags Optional, can contains extensions `.jpg`, `.gif' or watching path `/img/gallery/`\n * @return {Framework}\n */\nFramework.prototype.resize = function(url, fn, flags) {\n\n\tvar extensions = {};\n\tvar cache = true;\n\n\tif (typeof(flags) === 'function') {\n\t\tvar tmp = flags;\n\t\tflags = fn;\n\t\tfn = tmp;\n\t}\n\n\tvar ext = url.match(/\\*.\\*$|\\*?\\.(jpg|png|gif|jpeg)$/gi);\n\tif (ext) {\n\t\turl = url.replace(ext, '');\n\t\tswitch (ext.toString().toLowerCase()) {\n\t\t\tcase '*.*':\n\t\t\t\textensions['*'] = true;\n\t\t\t\tbreak;\n\t\t\tcase '*.jpg':\n\t\t\tcase '*.gif':\n\t\t\tcase '*.png':\n\t\t\tcase '*.jpeg':\n\t\t\t\textensions[ext.toString().toLowerCase().replace(/\\*/g, '').substring(1)] = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tvar path = url;\n\n\tif (flags && flags.length) {\n\t\tfor (var i = 0, length = flags.length; i < length; i++) {\n\t\t\tvar flag = flags[i];\n\t\t\tif (flag[0] === '.')\n\t\t\t\textensions[flag.substring(1)] = true;\n\t\t\telse if (flag[0] === '~' || flag[0] === '/' || flag.match(/^http\\:|https\\:/gi))\n\t\t\t\tpath = flag;\n\t\t\telse if (flag === 'nocache')\n\t\t\t\tcache = false;\n\t\t}\n\t}\n\n\tif (!extensions.length) {\n\t\textensions['jpg'] = true;\n\t\textensions['jpeg'] = true;\n\t\textensions['png'] = true;\n\t\textensions['gif'] = true;\n\t}\n\n\tif (extensions['jpg'] && !extensions['jpeg'])\n\t\textensions['jpeg'] = true;\n\telse if (extensions['jpeg'] && !extensions['jpg'])\n\t\textensions['jpg'] = true;\n\n\tF.routes.resize[url] = { fn: fn, path: U.path(path || url), ishttp: path.match(/http\\:|https\\:/gi) ? true : false, extension: extensions, cache: cache };\n\tF.owners.push({ type: 'resize', owner: _owner, id: url });\n\treturn F;\n};\n\n/**\n * RESTful routing\n * @param {String} url A relative url.\n * @param {String Array} flags\n * @param {Function} onQuery\n * @param {Function(id)} onGet\n * @param {Function([id])} onSave\n * @param {Function(id)} onDelete\n * @return {Framework}\n */\nFramework.prototype.restful = function(url, flags, onQuery, onGet, onSave, onDelete) {\n\n\tvar tmp;\n\n\tif (onQuery) {\n\t\ttmp = [];\n\t\tflags && tmp.push.apply(tmp, flags);\n\t\tF.route(url, tmp, onQuery);\n\t}\n\n\tvar restful = U.path(url) + '{id}';\n\n\tif (onGet) {\n\t\ttmp = [];\n\t\tflags && tmp.push.apply(tmp, flags);\n\t\tF.route(restful, tmp, onGet);\n\t}\n\n\tif (onSave) {\n\t\ttmp = ['post'];\n\t\tflags && tmp.push.apply(tmp, flags);\n\t\tF.route(url, tmp, onSave);\n\t\ttmp = ['put'];\n\t\tflags && tmp.push.apply(tmp, flags);\n\t\tF.route(restful, tmp, onSave);\n\t}\n\n\tif (onDelete) {\n\t\ttmp = ['delete'];\n\t\tflags && tmp.push.apply(tmp, flags);\n\t\tF.route(restful, tmp, onDelete);\n\t}\n\n\treturn F;\n};\n\n/**\n * Register cors\n * @param {String} url\n * @param {String Array or String} origin\n * @param {String Array or String} methods\n * @param {String Array or String} headers\n * @param {Boolean} credentials\n * @return {Framework}\n */\nFramework.prototype.cors = function(url, flags, credentials) {\n\n\tvar route = {};\n\tvar origins = [];\n\tvar methods = [];\n\tvar headers = [];\n\tvar age;\n\n\tif (flags instanceof Array) {\n\t\tfor (var i = 0, length = flags.length; i < length; i++) {\n\t\t\tvar flag = flags[i];\n\t\t\tvar type = typeof(flag);\n\n\t\t\tif (type === 'string')\n\t\t\t\tflag = flag.toLowerCase();\n\t\t\telse if (type === 'number') {\n\t\t\t\tage = flag;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (type === 'boolean' || flag.startsWith('credential')) {\n\t\t\t\tcredentials = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (flag.startsWith('http://') || flag.startsWith('https://')) {\n\t\t\t\torigins.push(flag);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tswitch (flag) {\n\t\t\t\tcase 'post':\n\t\t\t\tcase 'put':\n\t\t\t\tcase 'delete':\n\t\t\t\tcase 'options':\n\t\t\t\tcase 'patch':\n\t\t\t\tcase 'head':\n\t\t\t\tcase 'get':\n\t\t\t\t\tmethods.push(flag.toUpperCase());\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\theaders.push(flags[i]);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\troute.isASTERIX = url.lastIndexOf('*') !== -1;\n\n\tif (route.isASTERIX)\n\t\turl = url.replace('*', '');\n\n\turl = framework_internal.preparePath(framework_internal.encodeUnicodeURL(url.trim()));\n\n\troute.hash = url.hash();\n\troute.owner = _owner;\n\troute.url = framework_internal.routeSplitCreate(url);\n\troute.origins = origins.length ? origins : null;\n\troute.methods = methods.length ? methods : null;\n\troute.headers = headers.length ? headers : null;\n\troute.credentials = credentials;\n\troute.age = age || F.config['default-cors-maxage'];\n\n\tF.routes.cors.push(route);\n\tF._length_cors = F.routes.cors.length;\n\n\tF.routes.cors.sort(function(a, b) {\n\t\tvar al = a.url.length;\n\t\tvar bl = b.url.length;\n\t\treturn al > bl ? - 1 : al < bl ? 1 : a.isASTERIX && b.isASTERIX ? 1 : 0;\n\t});\n\n\treturn F;\n};\n\nFramework.prototype.group = function(flags, fn) {\n\t_flags = flags;\n\tfn.call(this);\n\t_flags = undefined;\n\treturn this;\n};\n\n/**\n * Add a route\n * @param {String} url\n * @param {Function} funcExecute Action.\n * @param {String Array} flags\n * @param {Number} length Maximum length of request data.\n * @param {String Array} middleware Loads custom middleware.\n * @param {Number timeout Response timeout.\n * @return {Framework}\n */\nFramework.prototype.web = Framework.prototype.route = function(url, funcExecute, flags, length, language) {\n\n\tvar name;\n\tvar tmp;\n\tvar viewname;\n\tvar sitemap;\n\tvar sitemap_language = language !== undefined;\n\n\tif (url instanceof Array) {\n\t\turl.forEach(url => F.route(url, funcExecute, flags, length));\n\t\treturn F;\n\t}\n\n\tvar CUSTOM = typeof(url) === 'function' ? url : null;\n\tif (CUSTOM)\n\t\turl = '/';\n\n\tif (url[0] === '#') {\n\t\turl = url.substring(1);\n\t\tif (url !== '400' && url !== '401' && url !== '403' && url !== '404' && url !== '408' && url !== '431' && url !== '500' && url !== '501') {\n\n\t\t\tvar sitemapflags = funcExecute instanceof Array ? funcExecute : flags;\n\t\t\tif (!(sitemapflags instanceof Array))\n\t\t\t\tsitemapflags = EMPTYARRAY;\n\n\t\t\tsitemap = F.sitemap(url, true, language);\n\t\t\tif (sitemap) {\n\n\t\t\t\tname = url;\n\t\t\t\turl = sitemap.url;\n\t\t\t\tif (sitemap.wildcard)\n\t\t\t\t\turl += '*';\n\n\t\t\t\tif (sitemap.localizeUrl) {\n\t\t\t\t\tif (language === undefined) {\n\t\t\t\t\t\tsitemap_language = true;\n\t\t\t\t\t\tvar sitemaproutes = {};\n\t\t\t\t\t\tF.temporary.internal.resources.forEach(function(language) {\n\t\t\t\t\t\t\tvar item = F.sitemap(sitemap.id, true, language);\n\t\t\t\t\t\t\tif (item.url && item.url !== url)\n\t\t\t\t\t\t\t\tsitemaproutes[item.url] = { name: sitemap.id, language: language };\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tObject.keys(sitemaproutes).forEach(key => F.route('#' + sitemap.id, funcExecute, flags, length, sitemaproutes[key].language));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else\n\t\t\t\tthrow new Error('Sitemap item \"' + url + '\" not found.');\n\t\t} else\n\t\t\turl = '#' + url;\n\t}\n\n\tif (!url)\n\t\turl = '/';\n\n\tif (url[0] !== '[' && url[0] !== '/')\n\t\turl = '/' + url;\n\n\tif (url.endsWith('/'))\n\t\turl = url.substring(0, url.length - 1);\n\n\turl = framework_internal.encodeUnicodeURL(url);\n\n\tvar type = typeof(funcExecute);\n\tvar index = 0;\n\tvar urlcache = url;\n\n\tif (!name)\n\t\tname = url;\n\n\tif (type === 'object' || funcExecute instanceof Array) {\n\t\ttmp = funcExecute;\n\t\tfuncExecute = flags;\n\t\tflags = tmp;\n\t}\n\n\tvar priority = 0;\n\tvar subdomain = null;\n\n\tpriority = url.count('/');\n\n\tif (url[0] === '[') {\n\t\tindex = url.indexOf(']');\n\t\tif (index > 0) {\n\t\t\tsubdomain = url.substring(1, index).trim().toLowerCase().split(',');\n\t\t\turl = url.substring(index + 1);\n\t\t\tpriority += subdomain.indexOf('*') !== -1 ? 50 : 100;\n\t\t}\n\t}\n\n\tvar isASTERIX = url.indexOf('*') !== -1;\n\tif (isASTERIX) {\n\t\turl = url.replace('*', '').replace('//', '/');\n\t\tpriority = priority - 100;\n\t}\n\n\tvar isRaw = false;\n\tvar isNOXHR = false;\n\tvar method = '';\n\tvar schema;\n\tvar workflow;\n\tvar isMOBILE = false;\n\tvar isJSON = false;\n\tvar isDELAY = false;\n\tvar isROBOT = false;\n\tvar isBINARY = false;\n\tvar isCORS = false;\n\tvar isROLE = false;\n\tvar middleware = null;\n\tvar timeout;\n\tvar options;\n\tvar corsflags = [];\n\tvar membertype = 0;\n\tvar isGENERATOR = false;\n\tvar description;\n\n\tif (_flags) {\n\t\tif (!flags)\n\t\t\tflags = [];\n\t\t_flags.forEach(function(flag) {\n\t\t\tflags.indexOf(flag) === -1 && flags.push(flag);\n\t\t});\n\t}\n\n\tif (flags) {\n\n\t\ttmp = [];\n\t\tvar count = 0;\n\n\t\tfor (var i = 0; i < flags.length; i++) {\n\n\t\t\tvar tt = typeof(flags[i]);\n\n\t\t\tif (tt === 'number') {\n\t\t\t\ttimeout = flags[i];\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (tt === 'object') {\n\t\t\t\toptions = flags[i];\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar first = flags[i][0];\n\n\t\t\tif (first === '&') {\n\t\t\t\t// resource (sitemap localization)\n\t\t\t\t// doesn't used now\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// TODO: remove in future versions\n\t\t\tif (first === '%') {\n\t\t\t\tF.behaviour();\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (first === '#') {\n\t\t\t\tif (!middleware)\n\t\t\t\t\tmiddleware = [];\n\t\t\t\tmiddleware.push(flags[i].substring(1));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (first === '*') {\n\n\t\t\t\tworkflow = flags[i].trim().substring(1);\n\t\t\t\tindex = workflow.indexOf('-->');\n\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tschema = workflow.substring(0, index).trim();\n\t\t\t\t\tworkflow = workflow.substring(index + 3).trim();\n\t\t\t\t} else {\n\t\t\t\t\tschema = workflow;\n\t\t\t\t\tworkflow = null;\n\t\t\t\t}\n\t\t\t\tschema = schema.replace(/\\\\/g, '/').split('/');\n\n\t\t\t\tif (schema.length === 1) {\n\t\t\t\t\tschema[1] = schema[0];\n\t\t\t\t\tschema[0] = 'default';\n\t\t\t\t}\n\n\t\t\t\tindex = schema[1].indexOf('#');\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tschema[2] = schema[1].substring(index + 1).trim();\n\t\t\t\t\tschema[1] = schema[1].substring(0, index).trim();\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Comment\n\t\t\tif (flags[i].substring(0, 3) === '// ') {\n\t\t\t\tdescription = flags[i].substring(3).trim();\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar flag = flags[i].toString().toLowerCase();\n\n\t\t\tif (flag.startsWith('http://') || flag.startsWith('https://')) {\n\t\t\t\tcorsflags.push(flag);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcount++;\n\n\t\t\tswitch (flag) {\n\n\t\t\t\tcase 'json':\n\t\t\t\t\tisJSON = true;\n\t\t\t\t\tcontinue;\n\n\t\t\t\tcase 'delay':\n\t\t\t\t\tcount--;\n\t\t\t\t\tisDELAY = true;\n\t\t\t\t\tcontinue;\n\n\t\t\t\tcase 'binary':\n\t\t\t\t\tisBINARY = true;\n\t\t\t\t\tcontinue;\n\n\t\t\t\tcase 'cors':\n\t\t\t\t\tisCORS = true;\n\t\t\t\t\tcount--;\n\t\t\t\t\tcontinue;\n\n\t\t\t\tcase 'credential':\n\t\t\t\tcase 'credentials':\n\t\t\t\t\tcorsflags.push(flag);\n\t\t\t\t\tcount--;\n\t\t\t\t\tcontinue;\n\n\t\t\t\tcase 'sync':\n\t\t\t\tcase 'yield':\n\t\t\t\tcase 'synchronize':\n\t\t\t\t\tisGENERATOR = true;\n\t\t\t\t\tcount--;\n\t\t\t\t\tcontinue;\n\n\t\t\t\tcase 'noxhr':\n\t\t\t\tcase '-xhr':\n\t\t\t\t\tisNOXHR = true;\n\t\t\t\t\tcontinue;\n\t\t\t\tcase 'raw':\n\t\t\t\t\tisRaw = true;\n\t\t\t\t\ttmp.push(flag);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'mobile':\n\t\t\t\t\tisMOBILE = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'robot':\n\t\t\t\t\tisROBOT = true;\n\t\t\t\t\tF._request_check_robot = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'authorize':\n\t\t\t\tcase 'authorized':\n\t\t\t\tcase 'logged':\n\t\t\t\t\tmembertype = 1;\n\t\t\t\t\tpriority += 2;\n\t\t\t\t\ttmp.push('authorize');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'unauthorize':\n\t\t\t\tcase 'unauthorized':\n\t\t\t\tcase 'unlogged':\n\t\t\t\t\tmembertype = 2;\n\t\t\t\t\tpriority += 2;\n\t\t\t\t\ttmp.push('unauthorize');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'referer':\n\t\t\t\tcase 'referrer':\n\t\t\t\t\ttmp.push('referer');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'delete':\n\t\t\t\tcase 'get':\n\t\t\t\tcase 'head':\n\t\t\t\tcase 'options':\n\t\t\t\tcase 'patch':\n\t\t\t\tcase 'post':\n\t\t\t\tcase 'propfind':\n\t\t\t\tcase 'put':\n\t\t\t\tcase 'trace':\n\t\t\t\t\ttmp.push(flag);\n\t\t\t\t\tmethod += (method ? ',' : '') + flag;\n\t\t\t\t\tcorsflags.push(flag);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (flag[0] === '@')\n\t\t\t\t\t\tisROLE = true;\n\t\t\t\t\ttmp.push(flag);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tflags = tmp;\n\t\tpriority += (count * 2);\n\t} else {\n\t\tflags = ['get'];\n\t\tmethod = 'get';\n\t}\n\n\tif (type === 'string') {\n\t\tviewname = funcExecute;\n\t\tfuncExecute = (function(name, sitemap, language) {\n\t\t\tif (language && !this.language)\n\t\t\t\tthis.language = language;\n\t\t\tvar themeName = U.parseTheme(name);\n\t\t\tif (themeName)\n\t\t\t\tname = prepare_viewname(name);\n\t\t\treturn function() {\n\t\t\t\tsitemap && this.sitemap(sitemap.id, language);\n\t\t\t\tif (name[0] === '~')\n\t\t\t\t\tthis.themeName = '';\n\t\t\t\telse if (themeName)\n\t\t\t\t\tthis.themeName = themeName;\n\n\t\t\t\tif (!this.route.workflow)\n\t\t\t\t\treturn this.view(name);\n\t\t\t\tvar self = this;\n\t\t\t\tthis.$exec(this.route.workflow, this, function(err, response) {\n\t\t\t\t\tif (err)\n\t\t\t\t\t\tself.content(err);\n\t\t\t\t\telse\n\t\t\t\t\t\tself.view(name, response);\n\t\t\t\t});\n\t\t\t};\n\t\t})(viewname, sitemap, language);\n\t} else if (typeof(funcExecute) !== 'function') {\n\n\t\tviewname = (sitemap && sitemap.url !== '/' ? sitemap.id : workflow ? '' : url) || '';\n\n\t\tif (!workflow || (!viewname && !workflow)) {\n\t\t\tif (viewname.endsWith('/'))\n\t\t\t\tviewname = viewname.substring(0, viewname.length - 1);\n\n\t\t\tindex = viewname.lastIndexOf('/');\n\t\t\tif (index !== -1)\n\t\t\t\tviewname = viewname.substring(index + 1);\n\n\t\t\tif (!viewname || viewname === '/')\n\t\t\t\tviewname = 'index';\n\n\t\t\tfuncExecute = (function(name, sitemap, language) {\n\t\t\t\treturn function() {\n\t\t\t\t\tif (language && !this.language)\n\t\t\t\t\t\tthis.language = language;\n\t\t\t\t\tsitemap && this.sitemap(sitemap.id, language);\n\t\t\t\t\tname[0] === '~' && this.theme('');\n\t\t\t\t\tif (!this.route.workflow)\n\t\t\t\t\t\treturn this.view(name);\n\t\t\t\t\tvar self = this;\n\t\t\t\t\tthis.$exec(this.route.workflow, this, function(err, response) {\n\t\t\t\t\t\tif (err)\n\t\t\t\t\t\t\tself.content(err);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tself.view(name, response);\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t})(viewname, sitemap, language);\n\t\t} else if (workflow)\n\t\t\tfuncExecute = controller_json_workflow;\n\t}\n\n\tif (!isGENERATOR)\n\t\tisGENERATOR = (funcExecute.constructor.name === 'GeneratorFunction' || funcExecute.toString().indexOf('function*') === 0);\n\n\tvar url2 = framework_internal.preparePath(url.trim());\n\tvar urlraw = U.path(url2) + (isASTERIX ? '*' : '');\n\tvar hash = url2.hash();\n\tvar routeURL = framework_internal.routeSplitCreate(url2);\n\tvar arr = [];\n\tvar reg = null;\n\tvar regIndex = null;\n\n\tif (url.indexOf('{') !== -1) {\n\t\trouteURL.forEach(function(o, i) {\n\t\t\tif (o.substring(0, 1) !== '{')\n\t\t\t\treturn;\n\n\t\t\tarr.push(i);\n\n\t\t\tvar sub = o.substring(1, o.length - 1);\n\n\t\t\tif (sub[0] !== '/')\n\t\t\t\treturn;\n\n\t\t\tvar index = sub.lastIndexOf('/');\n\t\t\tif (index === -1)\n\t\t\t\treturn;\n\n\t\t\tif (!reg) {\n\t\t\t\treg = {};\n\t\t\t\tregIndex = [];\n\t\t\t}\n\n\t\t\treg[i] = new RegExp(sub.substring(1, index), sub.substring(index + 1));\n\t\t\tregIndex.push(i);\n\t\t});\n\n\t\tpriority -= arr.length;\n\t}\n\n\tif (url.indexOf('#') !== -1)\n\t\tpriority -= 100;\n\n\tif (flags.indexOf('proxy') !== -1) {\n\t\tisJSON = true;\n\t\tpriority++;\n\t}\n\n\tif ((isJSON || flags.indexOf('xml') !== -1 || isRaw) && (flags.indexOf('delete') === -1 && flags.indexOf('post') === -1 && flags.indexOf('put') === -1) && flags.indexOf('patch') === -1) {\n\t\tflags.push('post');\n\t\tmethod += (method ? ',' : '') + 'post';\n\t\tpriority++;\n\t}\n\n\tif (flags.indexOf('upload') !== -1) {\n\t\tif (flags.indexOf('post') === -1 && flags.indexOf('put') === -1) {\n\t\t\tflags.push('post');\n\t\t\tmethod += (method ? ',' : '') + 'post';\n\t\t}\n\t}\n\n\tif (flags.indexOf('get') === -1 &&\n\t\tflags.indexOf('options') === -1 &&\n\t\tflags.indexOf('post') === -1 &&\n\t\tflags.indexOf('delete') === -1 &&\n\t\tflags.indexOf('put') === -1 &&\n\t\tflags.indexOf('upload') === -1 &&\n\t\tflags.indexOf('head') === -1 &&\n\t\tflags.indexOf('trace') === -1 &&\n\t\tflags.indexOf('patch') === -1 &&\n\t\tflags.indexOf('propfind') === -1) {\n\t\t\tflags.push('get');\n\t\t\tmethod += (method ? ',' : '') + 'get';\n\t\t}\n\n\tif (flags.indexOf('referer') !== -1)\n\t\tF._request_check_referer = true;\n\n\tif (!F._request_check_POST && (flags.indexOf('delete') !== -1 || flags.indexOf('post') !== -1 || flags.indexOf('put') !== -1 || flags.indexOf('upload') !== -1 || flags.indexOf('json') !== -1 || flags.indexOf('patch') !== -1 || flags.indexOf('options') !== -1))\n\t\tF._request_check_POST = true;\n\n\tvar isMULTIPLE = false;\n\n\tif (method.indexOf(',') !== -1)\n\t\tisMULTIPLE = true;\n\n\tif (method.indexOf(',') !== -1 || method === '')\n\t\tmethod = undefined;\n\telse\n\t\tmethod = method.toUpperCase();\n\n\tif (name[1] === '#')\n\t\tname = name.substring(1);\n\n\tif (isBINARY && !isRaw) {\n\t\tisBINARY = false;\n\t\tconsole.warn('F.route() skips \"binary\" flag because the \"raw\" flag is not defined.');\n\t}\n\n\tif (subdomain)\n\t\tF._length_subdomain_web++;\n\n\tF.routes.web.push({\n\t\thash: hash,\n\t\tname: name,\n\t\tpriority: priority,\n\t\tsitemap: sitemap ? sitemap.id : '',\n\t\tschema: schema,\n\t\tworkflow: workflow,\n\t\tsubdomain: subdomain,\n\t\tdescription: description,\n\t\tcontroller: _controller ? _controller : 'unknown',\n\t\towner: _owner,\n\t\turlraw: urlraw,\n\t\turl: routeURL,\n\t\tparam: arr,\n\t\tflags: flags || EMPTYARRAY,\n\t\tflags2: flags_to_object(flags),\n\t\tmethod: method,\n\t\texecute: funcExecute,\n\t\tlength: (length || F.config['default-request-length']) * 1024,\n\t\tmiddleware: middleware,\n\t\ttimeout: timeout === undefined ? (isDELAY ? 0 : F.config['default-request-timeout']) : timeout,\n\t\tisGET: flags.indexOf('get') !== -1,\n\t\tisMULTIPLE: isMULTIPLE,\n\t\tisJSON: isJSON,\n\t\tisXML: flags.indexOf('xml') !== -1,\n\t\tisRAW: isRaw,\n\t\tisBINARY: isBINARY,\n\t\tisMOBILE: isMOBILE,\n\t\tisROBOT: isROBOT,\n\t\tisMOBILE_VARY: isMOBILE,\n\t\tisGENERATOR: isGENERATOR,\n\t\tMEMBER: membertype,\n\t\tisASTERIX: isASTERIX,\n\t\tisROLE: isROLE,\n\t\tisREFERER: flags.indexOf('referer') !== -1,\n\t\tisHTTPS: flags.indexOf('https') !== -1,\n\t\tisHTTP: flags.indexOf('http') !== -1,\n\t\tisDEBUG: flags.indexOf('debug') !== -1,\n\t\tisRELEASE: flags.indexOf('release') !== -1,\n\t\tisPROXY: flags.indexOf('proxy') !== -1,\n\t\tisBOTH: isNOXHR ? false : true,\n\t\tisXHR: flags.indexOf('xhr') !== -1,\n\t\tisUPLOAD: flags.indexOf('upload') !== -1,\n\t\tisSYSTEM: url.startsWith('/#'),\n\t\tisCACHE: !url.startsWith('/#') && !CUSTOM && !arr.length && !isASTERIX,\n\t\tisPARAM: arr.length > 0,\n\t\tisDELAY: isDELAY,\n\t\tCUSTOM: CUSTOM,\n\t\toptions: options,\n\t\tregexp: reg,\n\t\tregexpIndexer: regIndex\n\t});\n\n\tF.emit('route', 'web', F.routes.web[F.routes.web.length - 1]);\n\n\t// Appends cors route\n\tisCORS && F.cors(urlcache, corsflags);\n\t!_controller && F.$routesSort(1);\n\n\treturn F;\n};\n\nfunction flags_to_object(flags) {\n\tvar obj = {};\n\tflags.forEach(function(flag) {\n\t\tobj[flag] = true;\n\t});\n\treturn obj;\n}\n\nFramework.prototype.mmr = function(url, process) {\n\turl = framework_internal.preparePath(U.path(url));\n\tF.routes.mmr[url] = { exec: process };\n\tF._request_check_POST = true;\n\treturn F;\n};\n\n/**\n * Get routing by name\n * @param {String} name\n * @return {Object}\n */\nFramework.prototype.routing = function(name) {\n\tfor (var i = 0, length = F.routes.web.length; i < length; i++) {\n\t\tvar route = F.routes.web[i];\n\t\tif (route.name === name) {\n\t\t\tvar url = U.path(route.url.join('/'));\n\t\t\tif (url[0] !== '/')\n\t\t\t\turl = '/' + url;\n\t\t\treturn { controller: route.controller, url: url, id: route.id, flags: route.flags, middleware: route.middleware, execute: route.execute, timeout: route.timeout, options: route.options, length: route.length };\n\t\t}\n\t}\n};\n\n/**\n * Merge files\n * @param {String} url Relative URL.\n * @param {String/String Array} file1 Filename or URL.\n * @param {String/String Array} file2 Filename or URL.\n * @param {String/String Array} file3 Filename or URL.\n * @param {String/String Array} fileN Filename or URL.\n * @return {Framework}\n */\nFramework.prototype.merge = function(url) {\n\n\tvar arr = [];\n\n\tfor (var i = 1, length = arguments.length; i < length; i++) {\n\n\t\tvar items = arguments[i];\n\t\tif (!(items instanceof Array))\n\t\t\titems = [items];\n\n\t\tfor (var j = 0, lengthsub = items.length; j < lengthsub; j++) {\n\t\t\tvar fn = items[j];\n\t\t\tvar c = fn[0];\n\t\t\tif (c === '@')\n\t\t\t\tfn = '~' + F.path.package(fn.substring(1));\n\t\t\telse if (c === '=')\n\t\t\t\tfn = '~' + F.path.themes(fn.substring(1));\n\t\t\telse if (c === '#')\n\t\t\t\tfn = '~' + F.path.temp('isomorphic_' + fn.substring(1) + '.min.js');\n\t\t\tarr.push(fn);\n\t\t}\n\t}\n\n\turl = framework_internal.preparePath(F._version(url));\n\n\tif (url[0] !== '/')\n\t\turl = '/' + url;\n\n\tvar filename = F.path.temp((F.id ? 'i-' + F.id + '_' : '') + 'merged_' + createTemporaryKey(url));\n\tF.routes.merge[url] = { filename: filename.replace(/\\.(js|css)/g, ext => '.min' + ext), files: arr };\n\tFs.unlink(F.routes.merge[url].filename, NOOP);\n\tF.owners.push({ type: 'merge', owner: _owner, id: url });\n\treturn F;\n};\n\nFramework.prototype.mapping = function(url, path) {\n\treturn F.map.apply(F, arguments);\n};\n\n/**\n * Send message\n * @param  {Object} message\n * @param  {Object} handle\n * @return {Framework}\n */\nFramework.prototype.send = function(message, handle) {\n\tprocess.send(message, handle);\n\treturn F;\n}\n\n/**\n * Mapping of static file\n * @param {String} url\n * @param {String} filename\tFilename or Directory.\n * @param {Function(filename) or String Array} filter\n * @return {Framework}\n */\nFramework.prototype.map = function(url, filename, filter) {\n\n\tif (url[0] !== '/')\n\t\turl = '/' + url;\n\n\tvar isPackage = false;\n\n\tfilename = U.$normalize(filename);\n\turl = framework_internal.preparePath(F._version(url));\n\n\t// isomorphic\n\tif (filename[0] === '#') {\n\t\tF.owners.push({ type: 'mapping', owner: _owner, id: url });\n\t\tF.routes.mapping[url] = F.path.temp('isomorphic_' + filename.substring(1) + '.min.js');\n\t\treturn F;\n\t}\n\n\tvar index = filename.indexOf('#');\n\tvar block;\n\n\tif (index !== -1) {\n\t\tvar tmp = filename.split('#');\n\t\tfilename = tmp[0];\n\t\tblock = tmp[1];\n\t}\n\n\tvar c = filename[0];\n\n\t// package\n\tif (c === '@') {\n\t\tfilename = F.path.package(filename.substring(1));\n\t\tisPackage = true;\n\t} else if (c === '=') {\n\t\tif (F.isWindows)\n\t\t\tfilename = U.combine(F.config['directory-themes'], filename.substring(1));\n\t\telse\n\t\t\tfilename = F.path.themes(filename.substring(1));\n\t\tisPackage = true;\n\t}\n\n\tvar isFile = U.getExtension(filename).length > 0;\n\n\t// Checks if the directory exists\n\tif (!isPackage && !filename.startsWith(directory)) {\n\t\tvar tmp = filename[0] === '~' ? F.path.root(filename.substring(1)) : F.path.public(filename);\n\t\tif (existsSync(tmp))\n\t\t\tfilename = tmp;\n\t}\n\n\tif (isFile) {\n\t\tF.routes.mapping[url] = filename;\n\t\tF.owners.push({ type: 'mapping', owner: _owner, id: url });\n\t\tif (block) {\n\t\t\tF.owners.push({ type: 'blocks', owner: _owner, id: url });\n\t\t\tF.routes.blocks[url] = block;\n\t\t}\n\t\treturn F;\n\t}\n\n\turl = U.path(url);\n\tfilename = U.path(filename);\n\n\tvar replace = filename;\n\tvar plus = '';\n\tvar isRoot = false;\n\n\tif (replace[0] === '/')\n\t\tisRoot = true;\n\n\tif (replace[0] === '~') {\n\t\tplus += '~';\n\t\treplace = replace.substring(1);\n\t}\n\n\tif (replace[0] === '.') {\n\t\tplus += '.';\n\t\treplace = replace.substring(1);\n\t}\n\n\tif (!isRoot && replace[0] === '/') {\n\t\tplus += '/';\n\t\treplace = replace.substring(1);\n\t}\n\n\tif (filter instanceof Array) {\n\t\tfor (var i = 0, length = filter.length; i < length; i++) {\n\t\t\tif (filter[i][0] === '.')\n\t\t\t\tfilter[i] = filter[i].substring(1);\n\t\t\tfilter[i] = filter[i].toLowerCase();\n\t\t}\n\t}\n\n\tsetTimeout(function() {\n\t\tU.ls(F.isWindows ? filename.replace(/\\//g, '\\\\') : filename, function(files) {\n\t\t\tfor (var i = 0, length = files.length; i < length; i++) {\n\n\t\t\t\tif (F.isWindows)\n\t\t\t\t\tfiles[i] = files[i].replace(filename, '').replace(/\\\\/g, '/');\n\n\t\t\t\tvar file = files[i].replace(replace, '');\n\n\t\t\t\tif (filter) {\n\t\t\t\t\tif (typeof(filter) === 'function') {\n\t\t\t\t\t\tif (!filter(file))\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (filter.indexOf(U.getExtension(file).toLowerCase()) === -1)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (file[0] === '/')\n\t\t\t\t\tfile = file.substring(1);\n\n\t\t\t\tvar key = url + file;\n\t\t\t\tF.routes.mapping[key] = plus + files[i];\n\t\t\t\tF.owners.push({ type: 'mapping', owner: _owner, id: key });\n\n\t\t\t\tif (block) {\n\t\t\t\t\tF.owners.push({ type: 'blocks', owner: _owner, id: key });\n\t\t\t\t\tF.routes.blocks[key] = block;\n\t\t\t\t}\n\t\t\t}\n\n\t\t});\n\t}, isPackage ? 500 : 1);\n\n\treturn this;\n};\n\n/**\n * Add a middleware\n * @param {String} name\n * @param {Function(req, res, next, options)} funcExecute\n * @return {Framework}\n */\nFramework.prototype.middleware = function(name, funcExecute) {\n\tF.install('middleware', name, funcExecute);\n\t_owner && F.owners.push({ type: 'middleware', owner: _owner, id: name });\n\treturn F;\n};\n\n/**\n * Uses middleware\n * @name {String or String Array} name\n * @url {String} url A url address (optional)\n * @types {String Array} It can be `web`, `file` or `websocket`\n * @first {Boolean} Optional, add a middleware as first\n * @return {Framework}\n */\nFramework.prototype.use = function(name, url, types, first) {\n\tif (!url && !types) {\n\t\tif (name instanceof Array) {\n\t\t\tfor (var i = 0; i < name.length; i++)\n\t\t\t\tF.routes.request.push(name[i]);\n\t\t} else\n\t\t\tF.routes.request.push(name);\n\t\tF._length_request_middleware = F.routes.request.length;\n\t\treturn F;\n\t}\n\n\tif (url instanceof Array) {\n\t\ttypes = url;\n\t\turl = null;\n\t}\n\n\tif (url === '*')\n\t\turl = null;\n\n\tvar route;\n\n\tif (url)\n\t\turl = framework_internal.routeSplitCreate(framework_internal.preparePath(url.trim())).join('/');\n\n\tif (!types || types.indexOf('web') !== -1) {\n\t\tfor (var i = 0, length = F.routes.web.length; i < length; i++) {\n\t\t\troute = F.routes.web[i];\n\t\t\tif (url && !route.url.join('/').startsWith(url))\n\t\t\t\tcontinue;\n\t\t\tif (!route.middleware)\n\t\t\t\troute.middleware = [];\n\t\t\tmerge_middleware(route.middleware, name, first);\n\t\t}\n\t}\n\n\tif (!types || types.indexOf('file') !== -1 || types.indexOf('files') !== -1) {\n\t\tfor (var i = 0, length = F.routes.files.length; i < length; i++) {\n\t\t\troute = F.routes.files[i];\n\t\t\tif (url && !route.url.join('/').startsWith(url))\n\t\t\t\tcontinue;\n\t\t\tif (!route.middleware)\n\t\t\t\troute.middleware = [];\n\t\t\tmerge_middleware(route.middleware, name, first);\n\t\t}\n\t}\n\n\tif (!types || types.indexOf('websocket') !== -1 || types.indexOf('websockets') !== -1) {\n\t\tfor (var i = 0, length = F.routes.websockets.length; i < length; i++) {\n\t\t\troute = F.routes.websockets[i];\n\t\t\tif (url && !route.url.join('/').startsWith(url))\n\t\t\t\tcontinue;\n\t\t\tif (!route.middleware)\n\t\t\t\troute.middleware = [];\n\t\t\tmerge_middleware(route.middleware, name, first);\n\t\t}\n\t}\n\n\treturn F;\n};\n\nfunction merge_middleware(a, b, first) {\n\n\tif (typeof(b) === 'string')\n\t\tb = [b];\n\n\tfor (var i = 0, length = b.length; i < length; i++) {\n\t\tvar index = a.indexOf(b[i]);\n\t\tif (index === -1) {\n\t\t\tif (first)\n\t\t\t\ta.unshift(b[i]);\n\t\t\telse\n\t\t\t\ta.push(b[i]);\n\t\t}\n\t}\n\n\treturn a;\n}\n\n/**\n * Add a new websocket route\n * @param {String} url\n * @param {Function()} funcInitialize\n * @param {String Array} flags Optional.\n * @param {String Array} protocols Optional, framework compares this array with request protocol (http or https)\n * @param {String Array} allow Optional, framework compares this array with \"origin\" request header\n * @param {Number} length Optional, maximum message length.\n * @param {String Array} middleware Optional, middlewares.\n * @param {Object} options Optional, additional options for middleware.\n * @return {Framework}\n */\nFramework.prototype.websocket = function(url, funcInitialize, flags, length) {\n\n\tvar tmp;\n\n\tvar CUSTOM = typeof(url) === 'function' ? url : null;\n\tif (CUSTOM)\n\t\turl = '/';\n\n\tif (url[0] === '#') {\n\t\turl = url.substring(1);\n\t\tvar sitemap = F.sitemap(url, true);\n\t\tif (sitemap) {\n\t\t\turl = sitemap.url;\n\t\t\tif (sitemap.wildcard)\n\t\t\t\turl += '*';\n\t\t} else\n\t\t\tthrow new Error('Sitemap item \"' + url + '\" not found.');\n\t}\n\n\tif (url === '')\n\t\turl = '/';\n\n\t// Unicode encoding\n\turl = framework_internal.encodeUnicodeURL(url);\n\n\tvar priority = 0;\n\tvar index = url.indexOf(']');\n\tvar subdomain = null;\n\tvar middleware;\n\tvar allow;\n\tvar options;\n\tvar protocols;\n\n\tpriority = url.count('/');\n\n\tif (index > 0) {\n\t\tsubdomain = url.substring(1, index).trim().toLowerCase().split(',');\n\t\turl = url.substring(index + 1);\n\t\tpriority += subdomain.indexOf('*') !== -1 ? 50 : 100;\n\t}\n\n\tvar isASTERIX = url.indexOf('*') !== -1;\n\tif (isASTERIX) {\n\t\turl = url.replace('*', '').replace('//', '/');\n\t\tpriority = (-10) - priority;\n\t}\n\n\tvar url2 = framework_internal.preparePath(url.trim());\n\tvar routeURL = framework_internal.routeSplitCreate(url2);\n\tvar arr = [];\n\tvar reg = null;\n\tvar regIndex = null;\n\tvar hash = url2.hash();\n\n\tif (url.indexOf('{') !== -1) {\n\n\t\trouteURL.forEach(function(o, i) {\n\t\t\tif (o.substring(0, 1) !== '{')\n\t\t\t\treturn;\n\n\t\t\tarr.push(i);\n\n\t\t\tvar sub = o.substring(1, o.length - 1);\n\n\t\t\tif (sub[0] !== '/')\n\t\t\t\treturn;\n\n\t\t\tvar index = sub.lastIndexOf('/');\n\t\t\tif (index === -1)\n\t\t\t\treturn;\n\n\t\t\tif (!reg) {\n\t\t\t\treg = {};\n\t\t\t\tregIndex = [];\n\t\t\t}\n\n\t\t\treg[i] = new RegExp(sub.substring(1, index), sub.substring(index + 1));\n\t\t\tregIndex.push(i);\n\t\t});\n\n\t\tpriority -= arr.length;\n\t}\n\n\tif (typeof(allow) === 'string')\n\t\tallow = allow[allow];\n\n\tif (typeof(protocols) === 'string')\n\t\tprotocols = protocols[protocols];\n\n\ttmp = [];\n\n\tvar isJSON = false;\n\tvar isBINARY = false;\n\tvar isROLE = false;\n\tvar count = 0;\n\tvar membertype = 0;\n\n\tif (!flags)\n\t\tflags = [];\n\n\t_flags && _flags.forEach(function(flag) {\n\t\tif (flags.indexOf(flag) === -1)\n\t\t\tflags.push(flag);\n\t});\n\n\tfor (var i = 0; i < flags.length; i++) {\n\n\t\tvar flag = flags[i];\n\t\tvar type = typeof(flag);\n\n\t\t// Middleware options\n\t\tif (type === 'object') {\n\t\t\toptions = flags[i];\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Length\n\t\tif (type === 'number') {\n\t\t\tlength = flag;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Middleware\n\t\tif (flag[0] === '#') {\n\t\t\tif (!middleware)\n\t\t\t\tmiddleware = [];\n\t\t\tmiddleware.push(flags[i].substring(1));\n\t\t\tcontinue;\n\t\t}\n\n\t\tflag = flag.toString().toLowerCase();\n\n\t\t// Origins\n\t\tif (flag.startsWith('http://') || flag.startsWith('https://')) {\n\t\t\tif (!allow)\n\t\t\t\tallow = [];\n\t\t\tallow.push(flag);\n\t\t\tcontinue;\n\t\t}\n\n\t\tcount++;\n\n\t\tif (flag === 'json')\n\t\t\tisJSON = true;\n\n\t\tif (flag === 'binary')\n\t\t\tisBINARY = true;\n\n\t\tif (flag === 'raw') {\n\t\t\tisBINARY = false;\n\t\t\tisJSON = false;\n\t\t}\n\n\n\t\tif (flag[0] === '@') {\n\t\t\tisROLE = true;\n\t\t\ttmp.push(flag);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (flag === 'json' || flag === 'binary' || flag === 'raw')\n\t\t\tcontinue;\n\n\t\tswitch (flag) {\n\t\t\tcase 'authorize':\n\t\t\tcase 'authorized':\n\t\t\tcase 'logged':\n\t\t\t\tmembertype = 1;\n\t\t\t\tpriority++;\n\t\t\t\ttmp.push('authorize');\n\t\t\t\tbreak;\n\t\t\tcase 'unauthorize':\n\t\t\tcase 'unauthorized':\n\t\t\tcase 'unlogged':\n\t\t\t\tmembertype = 2;\n\t\t\t\tpriority++;\n\t\t\t\ttmp.push('unauthorize');\n\t\t\t\tbreak;\n\t\t\tcase 'get':\n\t\t\tcase 'http':\n\t\t\tcase 'https':\n\t\t\tcase 'debug':\n\t\t\tcase 'release':\n\t\t\t\ttmp.push(flag);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif (!protocols)\n\t\t\t\t\tprotocols = [];\n\t\t\t\tprotocols.push(flag);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tflags = tmp;\n\n\tflags.indexOf('get') === -1 && flags.unshift('get');\n\tpriority += (count * 2);\n\n\tif (subdomain)\n\t\tF._length_subdomain_websocket++;\n\n\tF.routes.websockets.push({\n\t\thash: hash,\n\t\tcontroller: _controller ? _controller : 'unknown',\n\t\towner: _owner,\n\t\turl: routeURL,\n\t\tparam: arr,\n\t\tsubdomain: subdomain,\n\t\tpriority: priority,\n\t\tflags: flags || EMPTYARRAY,\n\t\tflags2: flags_to_object(flags),\n\t\tonInitialize: funcInitialize,\n\t\tprotocols: protocols || EMPTYARRAY,\n\t\tallow: allow || [],\n\t\tlength: (length || F.config['default-websocket-request-length']) * 1024,\n\t\tisWEBSOCKET: true,\n\t\tMEMBER: membertype,\n\t\tisJSON: isJSON,\n\t\tisBINARY: isBINARY,\n\t\tisROLE: isROLE,\n\t\tisASTERIX: isASTERIX,\n\t\tisHTTPS: flags.indexOf('https'),\n\t\tisHTTP: flags.indexOf('http'),\n\t\tisDEBUG: flags.indexOf('debug'),\n\t\tisRELEASE: flags.indexOf('release'),\n\t\tCUSTOM: CUSTOM,\n\t\tmiddleware: middleware ? middleware : null,\n\t\toptions: options,\n\t\tisPARAM: arr.length > 0,\n\t\tregexp: reg,\n\t\tregexpIndexer: regIndex\n\t});\n\n\tF.emit('route', 'websocket', F.routes.websockets[F.routes.websockets.length - 1]);\n\t!_controller && F.$routesSort(2);\n\treturn F;\n};\n\n/**\n * Create a file route\n * @param {String} name\n * @param {Function} funcValidation\n * @param {Function} fnExecute\n * @param {String Array} middleware\n * @return {Framework}\n */\nFramework.prototype.file = function(fnValidation, fnExecute, flags) {\n\n\tvar a;\n\n\tif (fnValidation instanceof Array) {\n\t\ta = fnExecute;\n\t\tvar b = flags;\n\t\tflags = fnValidation;\n\t\tfnValidation = a;\n\t\tfnExecute = b;\n\t} else if (fnExecute instanceof Array) {\n\t\ta = fnExecute;\n\t\tfnExecute = flags;\n\t\tflags = a;\n\t}\n\n\tif (!fnExecute && fnValidation) {\n\t\tfnExecute = fnValidation;\n\t\tfnValidation = undefined;\n\t}\n\n\tvar extensions;\n\tvar middleware;\n\tvar options;\n\tvar url;\n\tvar wildcard = false;\n\tvar fixedfile = false;\n\n\tif (_flags) {\n\t\tif (!flags)\n\t\t\tflags = [];\n\t\t_flags.forEach(function(flag) {\n\t\t\tflags.indexOf(flag) === -1 && flags.push(flag);\n\t\t});\n\t}\n\n\tif (flags) {\n\t\tfor (var i = 0, length = flags.length; i < length; i++) {\n\t\t\tvar flag = flags[i];\n\n\t\t\tif (typeof(flag) === 'object') {\n\t\t\t\toptions = flag;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (flag[0] === '#') {\n\t\t\t\tif (!middleware)\n\t\t\t\t\tmiddleware = [];\n\t\t\t\tmiddleware.push(flag.substring(1));\n\t\t\t}\n\n\t\t\tif (flag[0] === '.') {\n\t\t\t\tflag = flag.substring(1).toLowerCase();\n\t\t\t\tif (!extensions)\n\t\t\t\t\textensions = {};\n\t\t\t\textensions[flag] = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (typeof(fnValidation) === 'string') {\n\n\t\tif (fnValidation === '/')\n\t\t\tfnValidation = '';\n\n\t\turl = fnValidation ? framework_internal.routeSplitCreate(fnValidation) : EMPTYARRAY;\n\t\tfnValidation = undefined;\n\t\ta = url.last();\n\t\tif (a === '*.*') {\n\t\t\twildcard = true;\n\t\t\turl.splice(url.length - 1, 1);\n\t\t} else if (a) {\n\t\t\tvar index = a.indexOf('*.');\n\t\t\tif (index !== -1) {\n\t\t\t\textensions = {};\n\t\t\t\textensions[a.substring(index + 2).trim()] = true;\n\t\t\t\twildcard = false;\n\t\t\t\turl.splice(url.length - 1, 1);\n\t\t\t} else if (a === '*') {\n\t\t\t\twildcard = true;\n\t\t\t\turl.splice(url.length - 1, 1);\n\t\t\t} else if (U.getExtension(a)) {\n\t\t\t\tfixedfile = true;\n\t\t\t\twildcard = false;\n\t\t\t}\n\t\t}\n\t} else if (!extensions && !fnValidation)\n\t\tfnValidation = fnExecute;\n\n\n\tF.routes.files.push({\n\t\tcontroller: _controller ? _controller : 'unknown',\n\t\towner: _owner,\n\t\turl: url,\n\t\tfixedfile: fixedfile,\n\t\twildcard: wildcard,\n\t\textensions: extensions,\n\t\tonValidate: fnValidation,\n\t\texecute: fnExecute,\n\t\tmiddleware: middleware,\n\t\toptions: options\n\t});\n\n\tF.routes.files.sort(function(a, b) {\n\t\treturn !a.url ? -1 : !b.url ? 1 : a.url.length > b.url.length ? -1 : 1;\n\t});\n\n\tF.emit('route', 'file', F.routes.files[F.routes.files.length - 1]);\n\tF._length_files++;\n\treturn F;\n};\n\nFramework.prototype.localize = function(url, flags, minify) {\n\n\turl = url.replace('*', '');\n\n\tif (flags === true) {\n\t\tflags = [];\n\t\tminify = true;\n\t} else if (!flags)\n\t\tflags = [];\n\n\tvar index;\n\n\tif (!minify) {\n\t\tindex = flags.indexOf('minify');\n\t\tif (index === -1)\n\t\t\tindex = flags.indexOf('compress');\n\t\tminify = index !== -1;\n\t\tindex !== -1 && flags.splice(index, 1);\n\t}\n\n\tvar index = url.lastIndexOf('.');\n\n\tif (index === -1)\n\t\tflags.push('.html', '.htm', '.md', '.txt');\n\telse {\n\t\tflags.push(url.substring(index).toLowerCase());\n\t\turl = url.substring(0, index);\n\t}\n\n\turl = framework_internal.preparePath(url);\n\tF.file(url, function(req, res, is) {\n\n\t\tvar key = 'locate_' + (req.$language ? req.$language : 'default') + '_' + req.url;\n\t\tvar output = F.temporary.other[key];\n\n\t\tif (output) {\n\t\t\tif (!F.$notModified(req, res, output.$mtime)) {\n\t\t\t\tHEADERS.responseLocalize['Last-Modified'] = output.$mtime;\n\t\t\t\tF.responseContent(req, res, 200, output, U.getContentType(req.extension), true);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tvar name = req.uri.pathname;\n\t\tvar filename = F.onMapping(name, name, true, true);\n\n\t\tFs.readFile(filename, function(err, content) {\n\n\t\t\tif (err)\n\t\t\t\treturn res.throw404();\n\n\t\t\tcontent = F.translator(req.$language, framework_internal.modificators(content.toString(ENCODING), filename, 'static'));\n\n\t\t\tFs.lstat(filename, function(err, stats) {\n\n\t\t\t\tvar mtime = stats.mtime.toUTCString();\n\n\t\t\t\tif (minify && (req.extension === 'html' || req.extension === 'htm'))\n\t\t\t\t\tcontent = framework_internal.compile_html(content, filename);\n\n\t\t\t\tif (RELEASE) {\n\t\t\t\t\tF.temporary.other[key] = U.createBuffer(content);\n\t\t\t\t\tF.temporary.other[key].$mtime = mtime;\n\t\t\t\t\tif (F.$notModified(req, res, mtime))\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tHEADERS.responseLocalize['Last-Modified'] = mtime;\n\t\t\t\tF.responseContent(req, res, 200, content, U.getContentType(req.extension), true, HEADERS.responseLocalize);\n\t\t\t});\n\t\t});\n\n\t}, flags);\n\treturn F;\n};\n\nFramework.prototype.$notModified = function(req, res, date) {\n\tif (date === req.headers['if-modified-since']) {\n\t\tHEADERS.responseNotModified['Last-Modified'] = date;\n\t\tres.success = true;\n\t\tres.writeHead(304, HEADERS.responseNotModified);\n\t\tres.end();\n\t\tF.stats.response.notModified++;\n\t\tF._request_stats(false, req.isStaticFile);\n\t\treturn true;\n\t}\n};\n\n/**\n * Error caller\n * @param {Error} err\n * @param {String} name Controller or Script name.\n * @param {Object} uri\n * @return {Framework}\n */\nFramework.prototype.error = function(err, name, uri) {\n\n\tif (!arguments.length) {\n\t\treturn function(err) {\n\t\t\terr && F.error(err, name, uri);\n\t\t};\n\t}\n\n\tif (!err)\n\t\treturn F;\n\n\tif (F.errors) {\n\t\tF.datetime = new Date();\n\t\tF.errors.push({ error: err.stack, name: name, url: uri ? typeof(uri) === 'string' ? uri : Parser.format(uri) : undefined, date: F.datetime });\n\t\tF.errors.length > 50 && F.errors.shift();\n\t}\n\n\tF.onError(err, name, uri);\n\treturn F;\n};\n\n/**\n * Registers a new problem\n * @param {String} message\n * @param {String} name A controller name.\n * @param {String} uri\n * @param {String} ip\n * @return {Framework}\n */\nFramework.prototype.problem = Framework.prototype.wtf = function(message, name, uri, ip) {\n\tF.emit('problem', message, name, uri, ip);\n\n\tif (message instanceof framework_builders.ErrorBuilder)\n\t\tmessage = message.plain();\n\telse if (typeof(message) === 'object')\n\t\tmessage = JSON.stringify(message);\n\n\tvar obj = { message: message, name: name, url: uri ? typeof(uri) === 'string' ? uri : Parser.format(uri) : undefined, ip: ip };\n\tF.logger('problems', obj.message, 'url: ' + obj.url, 'source: ' + obj.name, 'ip: ' + obj.ip);\n\n\tif (F.problems) {\n\t\tF.problems.push(obj);\n\t\tF.problems.length > 50 && F.problems.shift();\n\t}\n\n\treturn F;\n};\n\n/**\n * Registers a new change\n * @param {String} message\n * @param {String} name A controller name.\n * @param {String} uri\n * @param {String} ip\n * @return {Framework}\n */\nFramework.prototype.change = function(message, name, uri, ip) {\n\tF.emit('change', message, name, uri, ip);\n\n\tif (message instanceof framework_builders.ErrorBuilder)\n\t\tmessage = message.plain();\n\telse if (typeof(message) === 'object')\n\t\tmessage = JSON.stringify(message);\n\n\tvar obj = { message: message, name: name, url: uri ? typeof(uri) === 'string' ? uri : Parser.format(uri) : undefined, ip: ip };\n\tF.logger('changes', obj.message, 'url: ' + obj.url, 'source: ' + obj.name, 'ip: ' + obj.ip);\n\n\tif (F.changes) {\n\t\tF.changes.push(obj);\n\t\tF.changes.length > 50 && F.changes.shift();\n\t}\n\n\treturn F;\n};\n\n/**\n * Trace\n * @param {String} message\n * @param {String} name A controller name.\n * @param {String} uri\n * @param {String} ip\n * @return {Framework}\n */\nFramework.prototype.trace = function(message, name, uri, ip) {\n\n\tif (!F.config.trace)\n\t\treturn F;\n\n\tF.emit('trace', message, name, uri, ip);\n\n\tif (message instanceof framework_builders.ErrorBuilder)\n\t\tmessage = message.plain();\n\telse if (typeof(message) === 'object')\n\t\tmessage = JSON.stringify(message);\n\n\tF.datetime = new Date();\n\tvar obj = { message: message, name: name, url: uri ? typeof(uri) === 'string' ? uri : Parser.format(uri) : undefined, ip: ip, date: F.datetime };\n\tF.logger('traces', obj.message, 'url: ' + obj.url, 'source: ' + obj.name, 'ip: ' + obj.ip);\n\n\tF.config['trace-console'] && console.log(F.datetime.format('yyyy-MM-dd HH:mm:ss'), '[trace]', message, '|', 'url: ' + obj.url, 'source: ' + obj.name, 'ip: ' + obj.ip);\n\n\tif (F.traces) {\n\t\tF.traces.push(obj);\n\t\tF.traces.length > 50 && F.traces.shift();\n\t}\n\n\treturn F;\n};\n\n/**\n * Get a module\n * @param {String} name\n * @return {Object}\n */\nFramework.prototype.module = function(name) {\n\treturn F.modules[name] || null;\n};\n\n/**\n * Add a new modificator\n * @param {Function(type, filename, content)} fn The `fn` must return modified value.\n * @return {String}\n */\nFramework.prototype.modify = function(fn) {\n\tif (!F.modificators)\n\t\tF.modificators = [];\n\tF.modificators.push(fn);\n\tfn.$owner = owner;\n\treturn F;\n};\n\n/**\n * Load framework\n * @return {Framework}\n */\nFramework.prototype.$load = function(types, targetdirectory) {\n\n\tvar arr = [];\n\tvar dir = '';\n\n\tif (!targetdirectory)\n\t\ttargetdirectory = directory;\n\n\ttargetdirectory = '~' + targetdirectory;\n\n\tfunction listing(directory, level, output, extension, isTheme) {\n\n\t\tif (!existsSync(dir))\n\t\t\treturn;\n\n\t\tif (!extension)\n\t\t\textension = '.js';\n\n\t\tFs.readdirSync(directory).forEach(function(o) {\n\t\t\tvar isDirectory = Fs.statSync(Path.join(directory, o)).isDirectory();\n\n\t\t\tif (isDirectory && isTheme) {\n\t\t\t\toutput.push({ name: o });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isDirectory) {\n\n\t\t\t\tif (extension === '.package' && o.endsWith(extension)) {\n\t\t\t\t\tvar name = o.substring(0, o.length - extension.length);\n\t\t\t\t\toutput.push({ name: name[0] === '/' ? name.substring(1) : name, filename: Path.join(dir, o), is: true });\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlevel++;\n\t\t\t\tlisting(Path.join(directory, o), level, output, extension);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar ext = U.getExtension(o).toLowerCase();\n\t\t\tif (ext)\n\t\t\t\text = '.' + ext;\n\t\t\tif (ext !== extension)\n\t\t\t\treturn;\n\t\t\tvar name = (level ? U.$normalize(directory).replace(dir, '') + '/' : '') + o.substring(0, o.length - ext.length);\n\t\t\toutput.push({ name: name[0] === '/' ? name.substring(1) : name, filename: Path.join(dir, name) + extension });\n\t\t});\n\t}\n\n\ttry {\n\t\t// Reads name of resources\n\t\tF.temporary.internal.resources = Fs.readdirSync(F.path.resources()).map(n => n.substring(0, n.lastIndexOf('.')));\n\t} catch (e) {\n\t\tF.temporary.internal.resources = [];\n\t}\n\n\tif (!types || types.indexOf('modules') !== -1) {\n\t\tdir = U.combine(targetdirectory, F.config['directory-modules']);\n\t\tarr = [];\n\t\tlisting(dir, 0, arr, '.js');\n\t\tarr.forEach((item) => F.install('module', item.name, item.filename, undefined, undefined, undefined, true));\n\t}\n\n\tif (!types || types.indexOf('isomorphic') !== -1) {\n\t\tdir = U.combine(targetdirectory, F.config['directory-isomorphic']);\n\t\tarr = [];\n\t\tlisting(dir, 0, arr, '.js');\n\t\tarr.forEach((item) => F.install('isomorphic', item.name, item.filename, undefined, undefined, undefined, true));\n\t}\n\n\tif (!types || types.indexOf('packages') !== -1) {\n\t\tdir = U.combine(targetdirectory, F.config['directory-packages']);\n\t\tarr = [];\n\t\tlisting(dir, 0, arr, '.package');\n\n\t\tvar dirtmp = U.$normalize(dir);\n\n\t\tarr.forEach(function(item) {\n\n\t\t\tif (item.is) {\n\t\t\t\tU.ls(item.filename, function(files, directories) {\n\n\t\t\t\t\tvar dir = F.path.temp(item.name) + '.package';\n\n\t\t\t\t\tif (!existsSync(dir))\n\t\t\t\t\t\tFs.mkdirSync(dir);\n\n\t\t\t\t\tfor (var i = 0, length = directories.length; i < length; i++) {\n\t\t\t\t\t\tvar target = F.path.temp(U.$normalize(directories[i]).replace(dirtmp, '') + '/');\n\t\t\t\t\t\tif (!existsSync(target))\n\t\t\t\t\t\t\tFs.mkdirSync(target);\n\t\t\t\t\t}\n\n\t\t\t\t\tfiles.wait(function(filename, next) {\n\t\t\t\t\t\tvar stream = Fs.createReadStream(filename);\n\t\t\t\t\t\tstream.pipe(Fs.createWriteStream(Path.join(dir, filename.replace(item.filename, '').replace(/\\.package$/i, ''))));\n\t\t\t\t\t\tstream.on('end', next);\n\t\t\t\t\t}, function() {\n\t\t\t\t\t\t// Windows sometimes doesn't load package and delay solves the problem.\n\t\t\t\t\t\tsetTimeout(() => F.install('package2', item.name, item.filename, undefined, undefined, undefined, true), 50);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tF.install('package', item.name, item.filename, undefined, undefined, undefined, true);\n\t\t});\n\t}\n\n\tif (!types || types.indexOf('models') !== -1) {\n\t\tdir = U.combine(targetdirectory, F.config['directory-models']);\n\t\tarr = [];\n\t\tlisting(dir, 0, arr);\n\t\tarr.forEach((item) => F.install('model', item.name, item.filename, undefined, undefined, undefined, true));\n\t}\n\n\tif (!types || types.indexOf('themes') !== -1) {\n\t\tarr = [];\n\t\tdir = U.combine(targetdirectory, F.config['directory-themes']);\n\t\tlisting(dir, 0, arr, undefined, true);\n\t\tarr.forEach(function(item) {\n\t\t\tvar themeName = item.name;\n\t\t\tvar themeDirectory = Path.join(dir, themeName);\n\t\t\tvar filename = Path.join(themeDirectory, 'index.js');\n\t\t\tF.themes[item.name] = U.path(themeDirectory);\n\t\t\tF._length_themes++;\n\t\t\texistsSync(filename) && F.install('theme', item.name, filename, undefined, undefined, undefined, true);\n\t\t\t/*\n\t\t\t@TODO: FOR FUTURE VERSION\n\t\t\tvar components = [];\n\t\t\tvar components_dir = U.combine(targetdirectory, F.config['directory-themes'], themeName, F.config['directory-components']);\n\t\t\texistsSync(components_dir) && listing(components_dir, 0, components, '.html', true);\n\t\t\tcomponents_dir && components.forEach((item) => F.install('component', themeName + '/' + item.name, item.filename, undefined, undefined, undefined));\n\t\t\t*/\n\t\t});\n\t}\n\n\tif (!types || types.indexOf('definitions') !== -1) {\n\t\tdir = U.combine(targetdirectory, F.config['directory-definitions']);\n\t\tarr = [];\n\t\tlisting(dir, 0, arr);\n\t\tarr.forEach((item) => F.install('definition', item.name, item.filename, undefined, undefined, undefined, true));\n\t}\n\n\tif (!types || types.indexOf('controllers') !== -1) {\n\t\tarr = [];\n\t\tdir = U.combine(targetdirectory, F.config['directory-controllers']);\n\t\tlisting(dir, 0, arr);\n\t\tarr.forEach((item) => F.install('controller', item.name, item.filename, undefined, undefined, undefined, true));\n\t}\n\n\tif (!types || types.indexOf('components') !== -1) {\n\t\tarr = [];\n\t\tdir = U.combine(targetdirectory, F.config['directory-components']);\n\t\tlisting(dir, 0, arr, '.html');\n\t\tarr.forEach((item) => F.install('component', item.name, item.filename, undefined, undefined, undefined));\n\t}\n\n\tF.$routesSort();\n\n\tif (!types || types.indexOf('dependencies') !== -1)\n\t\tF._configure_dependencies();\n\n\treturn F;\n};\n\nFramework.prototype.$startup = function(callback) {\n\n\tvar dir = Path.join(directory, '/startup/');\n\n\tif (!existsSync(dir))\n\t\treturn callback();\n\n\tvar run = [];\n\n\tFs.readdirSync(dir).forEach(function(o) {\n\t\tvar extension = U.getExtension(o).toLowerCase();\n\t\tif (extension === 'js')\n\t\t\trun.push(o);\n\t});\n\n\tif (!run.length)\n\t\treturn callback();\n\n\trun.wait(function(filename, next) {\n\t\tvar fn = dir + filename + new Date().format('yyMMdd_HHmmss');\n\t\tFs.renameSync(dir + filename, fn);\n\t\tvar fork = Child.fork(fn, [], { cwd: directory });\n\t\tfork.on('exit', function() {\n\t\t\tfork = null;\n\t\t\tnext();\n\t\t});\n\t}, callback);\n\n\treturn this;\n};\n\nFramework.prototype.uptodate = function(type, url, options, interval, callback) {\n\n\tif (typeof(options) === 'string' && typeof(interval) !== 'string') {\n\t\tinterval = options;\n\t\toptions = null;\n\t}\n\n\tvar obj = { type: type, name: '', url: url, interval: interval, options: options, count: 0, updated: F.datetime, errors: [], callback: callback };\n\n\tif (!F.uptodates)\n\t\tF.uptodates = [];\n\n\tF.uptodates.push(obj);\n\tF.install(type, url, options, function(err, name) {\n\t\terr && obj.errors.push(err);\n\t\tobj.name = name;\n\t\tobj.callback && obj.callback(err, name);\n\t});\n\treturn F;\n};\n\n/**\n * Install type with its declaration\n * @param {String} type Available types: model, module, controller, source.\n * @param {String} name Default name (optional).\n * @param {String or Function} declaration\n * @param {Object} options Custom options, optional.\n * @param {Object} internal Internal/Temporary options, optional.\n * @param {Boolean} useRequired Internal, optional.\n * @param {Boolean} skipEmit Internal, optional.\n * @param {String} uptodateName Internal, optional.\n * @return {Framework}\n */\nFramework.prototype.install = function(type, name, declaration, options, callback, internal, useRequired, skipEmit, uptodateName) {\n\n\tvar obj = null;\n\n\tif (type !== 'config' && type !== 'version' && typeof(name) === 'string') {\n\t\tif (name.startsWith('http://') || name.startsWith('https://')) {\n\t\t\tif (typeof(declaration) === 'object') {\n\t\t\t\tcallback = options;\n\t\t\t\toptions = declaration;\n\t\t\t\tdeclaration = name;\n\t\t\t\tname = '';\n\t\t\t}\n\t\t} else if (name[0] === '@') {\n\t\t\tdeclaration = F.path.package(name.substring(1));\n\t\t\tname = Path.basename(name).replace(/\\.js$/i, '');\n\t\t\tif (useRequired === undefined)\n\t\t\t\tuseRequired = true;\n\t\t}\n\t}\n\n\tvar t = typeof(declaration);\n\tvar key = '';\n\tvar tmp;\n\tvar content;\n\n\tF.datetime = new Date();\n\n\tif (t === 'object') {\n\t\tt = typeof(options);\n\t\tif (t === 'function')\n\t\t\tcallback = options;\n\t\toptions = declaration;\n\t\tdeclaration = undefined;\n\t}\n\n\tif (declaration === undefined) {\n\t\tdeclaration = name;\n\t\tname = '';\n\t}\n\n\tif (typeof(options) === 'function') {\n\t\tcallback = options;\n\t\toptions = undefined;\n\t}\n\n\t// Check if declaration is a valid URL address\n\tif (type !== 'eval' && typeof(declaration) === 'string') {\n\n\t\tif (declaration.startsWith('http://') || declaration.startsWith('https://')) {\n\t\t\tif (type === 'package') {\n\t\t\t\tU.download(declaration, REQUEST_INSTALL_FLAGS, function(err, response) {\n\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tF.error(err, 'F.install(\\'{0}\\', \\'{1}\\')'.format(type, declaration), null);\n\t\t\t\t\t\tcallback && callback(err);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar id = Path.basename(declaration, '.package');\n\t\t\t\t\tvar filename = F.path.temp(id + '.download');\n\t\t\t\t\tvar stream = Fs.createWriteStream(filename);\n\t\t\t\t\tvar md5 = Crypto.createHash('md5');\n\n\t\t\t\t\tresponse.on('data', (buffer) => md5.update(buffer));\n\t\t\t\t\tresponse.pipe(stream);\n\n\t\t\t\t\tstream.on('finish', function() {\n\t\t\t\t\t\tvar hash = md5.digest('hex');\n\n\t\t\t\t\t\tif (F.temporary.versions[declaration] === hash) {\n\t\t\t\t\t\t\tcallback && callback(null, uptodateName || name, true);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tF.temporary.versions[declaration] = hash;\n\t\t\t\t\t\tF.install(type, id, filename, options, callback, undefined, undefined, true, uptodateName);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn F;\n\t\t\t}\n\n\t\t\tU.request(declaration, REQUEST_INSTALL_FLAGS, function(err, data, code) {\n\n\t\t\t\tif (code !== 200 && !err)\n\t\t\t\t\terr = new Error(data);\n\n\t\t\t\tif (err) {\n\t\t\t\t\tF.error(err, 'F.install(\\'{0}\\', \\'{1}\\')'.format(type, declaration), null);\n\t\t\t\t\tcallback && callback(err);\n\t\t\t\t} else {\n\n\t\t\t\t\tvar hash = data.hash('md5');\n\n\t\t\t\t\tif (F.temporary.versions[declaration] === hash) {\n\t\t\t\t\t\tcallback && callback(null, uptodateName || name, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tF.temporary.versions[declaration] = hash;\n\t\t\t\t\tF.install(type, name, data, options, callback, declaration, undefined, undefined, uptodateName);\n\t\t\t\t}\n\n\t\t\t});\n\t\t\treturn F;\n\t\t} else {\n\t\t\tif (declaration[0] === '~')\n\t\t\t\tdeclaration = declaration.substring(1);\n\t\t\tif (type !== 'config' && type !== 'resource' && type !== 'package' && type !== 'component' && !REG_SCRIPTCONTENT.test(declaration)) {\n\t\t\t\tif (!existsSync(declaration))\n\t\t\t\t\tthrow new Error('The ' + type + ': ' + declaration + ' doesn\\'t exist.');\n\t\t\t\tuseRequired = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (type === 'middleware') {\n\n\t\tF.routes.middleware[name] = typeof(declaration) === 'function' ? declaration : eval(declaration);\n\t\tF._length_middleware = Object.keys(F.routes.middleware).length;\n\n\t\tcallback && callback(null, name);\n\n\t\tkey = type + '.' + name;\n\n\t\tif (F.dependencies[key]) {\n\t\t\tF.dependencies[key].updated = F.datetime;\n\t\t} else {\n\t\t\tF.dependencies[key] = { name: name, type: type, installed: F.datetime, updated: null, count: 0 };\n\t\t\tif (internal)\n\t\t\t\tF.dependencies[key].url = internal;\n\t\t}\n\n\t\tF.dependencies[key].count++;\n\n\t\tsetTimeout(function() {\n\t\t\tF.emit(type + '#' + name);\n\t\t\tF.emit('install', type, name);\n\t\t}, 500);\n\n\t\treturn F;\n\t}\n\n\tif (type === 'config' || type === 'configuration' || type === 'settings') {\n\n\t\tF._configure(declaration instanceof Array ? declaration : declaration.toString().split('\\n'), true);\n\t\tsetTimeout(function() {\n\t\t\tdelete F.temporary['mail-settings'];\n\t\t\tF.emit(type + '#' + name, F.config);\n\t\t\tF.emit('install', type, name);\n\t\t}, 500);\n\n\t\tcallback && callback(null, name);\n\t\treturn F;\n\t}\n\n\tif (type === 'version' || type === 'versions') {\n\n\t\tF._configure_versions(declaration.toString().split('\\n'));\n\t\tsetTimeout(function() {\n\t\t\tF.emit(type + '#' + name);\n\t\t\tF.emit('install', type, name);\n\t\t}, 500);\n\n\t\tcallback && callback(null, name);\n\t\treturn F;\n\t}\n\n\tif (type === 'workflow' || type === 'workflows') {\n\n\t\tF._configure_workflows(declaration.toString().split('\\n'));\n\t\tsetTimeout(function() {\n\t\t\tF.emit(type + '#' + name);\n\t\t\tF.emit('install', type, name);\n\t\t}, 500);\n\n\t\tcallback && callback(null, name);\n\t\treturn F;\n\t}\n\n\tif (type === 'sitemap') {\n\n\t\tF._configure_sitemap(declaration.toString().split('\\n'));\n\t\tsetTimeout(function() {\n\t\t\tF.emit(type + '#' + name);\n\t\t\tF.emit('install', type, name);\n\t\t}, 500);\n\n\t\tcallback && callback(null, name);\n\t\treturn F;\n\t}\n\n\tif (type === 'component') {\n\n\t\tif (!name && internal)\n\t\t\tname = U.getName(internal).replace(/\\.html/gi, '').trim();\n\n\t\tF.uninstall(type, uptodateName || name, uptodateName ? 'uptodate' : undefined);\n\n\t\tvar hash = '\\n/*' + name.hash() + '*/\\n';\n\t\tvar temporary = (F.id ? 'i-' + F.id + '_' : '') + 'components';\n\t\tcontent = parseComponent(internal ? declaration : Fs.readFileSync(declaration).toString(ENCODING), name);\n\t\tcontent.js && Fs.appendFileSync(F.path.temp(temporary + '.js'), hash + (F.config.debug ? component_debug(name, content.js, 'js') : content.js) + hash.substring(0, hash.length - 1));\n\t\tcontent.css && Fs.appendFileSync(F.path.temp(temporary + '.css'), hash + (F.config.debug ? component_debug(name, content.css, 'css') : content.css) + hash.substring(0, hash.length - 1));\n\n\t\tif (content.js)\n\t\t\tF.components.js = true;\n\n\t\tif (content.css)\n\t\t\tF.components.css = true;\n\n\t\tF.components.views[name] = '.' + F.path.temp('component_' + name);\n\t\tF.components.has = true;\n\n\t\tFs.writeFile(F.components.views[name].substring(1) + '.html', U.minifyHTML(content.body), NOOP);\n\n\t\tvar link = F.config['static-url-components'];\n\t\tF.components.version = F.datetime.getTime();\n\t\tF.components.links = (F.components.js ? '<script src=\"{0}js?version={1}\"></script>'.format(link, F.components.version) : '') + (F.components.css ? '<link type=\"text/css\" rel=\"stylesheet\" href=\"{0}css?version={1}\" />'.format(link, F.components.version) : '');\n\n\t\tif (content.install) {\n\t\t\ttry {\n\t\t\t\t_owner = type + '#' + name;\n\t\t\t\tvar obj = (new Function('var exports={};' + content.install + ';return exports;'))();\n\t\t\t\tobj.$owner = _owner;\n\t\t\t\t_controller = '';\n\t\t\t\tF.components.instances[name] = obj;\n\t\t\t\tobj = typeof(obj.install) === 'function' && obj.install(options || F.config[_owner], name);\n\t\t\t} catch(e) {\n\t\t\t\tF.error(e, 'F.install(\\'component\\', \\'{0}\\')'.format(name));\n\t\t\t}\n\t\t} else if (!internal) {\n\t\t\tvar js = declaration.replace(/\\.html$/i, '.js');\n\t\t\tif (existsSync(js)) {\n\t\t\t\t_owner = type + '#' + name;\n\t\t\t\tobj = require(js);\n\t\t\t\tobj.$owner = _owner;\n\t\t\t\t_controller = '';\n\t\t\t\tF.components.instances[name] = obj;\n\t\t\t\ttypeof(obj.install) === 'function' && obj.install(options || F.config[_owner], name);\n\t\t\t\t(function(name, filename) {\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tdelete require.cache[name];\n\t\t\t\t\t}, 1000);\n\t\t\t\t})(require.resolve(declaration), declaration);\n\t\t\t}\n\t\t}\n\n\t\t!skipEmit && setTimeout(function() {\n\t\t\tF.emit(type + '#' + name);\n\t\t\tF.emit('install', type, name);\n\t\t}, 500);\n\n\t\tcallback && callback(null, name);\n\t\treturn F;\n\t}\n\n\tif (type === 'package') {\n\n\t\tvar backup = new Backup();\n\t\tvar id = Path.basename(declaration, '.' + U.getExtension(declaration));\n\t\tvar dir = F.config['directory-temp'][0] === '~' ? Path.join(F.config['directory-temp'].substring(1), id + '.package') : Path.join(F.path.root(), F.config['directory-temp'], id + '.package');\n\n\t\tF.routes.packages[id] = dir;\n\t\tbackup.restore(declaration, dir, function() {\n\n\t\t\tvar filename = Path.join(dir, 'index.js');\n\t\t\tif (!existsSync(filename)) {\n\t\t\t\tcallback && callback(null, name);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tF.install('module', id, filename, options, function(err) {\n\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tF.emit(type + '#' + name);\n\t\t\t\t\tF.emit('install', type, name);\n\t\t\t\t}, 500);\n\n\t\t\t\tcallback && callback(err, name);\n\t\t\t}, internal, useRequired, true);\n\t\t});\n\n\t\treturn F;\n\t}\n\n\tif (type === 'theme') {\n\n\t\t_owner = type + '#' + name;\n\t\tobj = require(declaration);\n\t\tobj.$owner = _owner;\n\n\t\ttypeof(obj.install) === 'function' && obj.install(options || F.config[_owner], name);\n\n\t\t!skipEmit && setTimeout(function() {\n\t\t\tF.emit(type + '#' + name);\n\t\t\tF.emit('install', type, name);\n\t\t}, 500);\n\n\t\tcallback && callback(null, name);\n\n\t\t(function(name, filename) {\n\t\t\tsetTimeout(function() {\n\t\t\t\tdelete require.cache[name];\n\t\t\t}, 1000);\n\t\t})(require.resolve(declaration), declaration);\n\t\treturn F;\n\t}\n\n\tif (type === 'package2') {\n\t\tvar id = U.getName(declaration, '.package');\n\t\tvar dir = F.config['directory-temp'][0] === '~' ? Path.join(F.config['directory-temp'].substring(1), id) : Path.join(F.path.root(), F.config['directory-temp'], id);\n\t\tvar filename = Path.join(dir, 'index.js');\n\t\tF.install('module', id, filename, options, function(err) {\n\t\t\tsetTimeout(function() {\n\t\t\t\tF.emit(type + '#' + name);\n\t\t\t\tF.emit('install', type, name);\n\t\t\t}, 500);\n\t\t\tcallback && callback(err, name);\n\t\t}, internal, useRequired, true);\n\t\treturn F;\n\t}\n\n\tvar plus = F.id ? 'i-' + F.id + '_' : '';\n\n\tif (type === 'view') {\n\n\t\tvar item = F.routes.views[name];\n\t\tkey = type + '.' + name;\n\n\t\tif (item === undefined) {\n\t\t\titem = {};\n\t\t\titem.filename = F.path.temporary(plus + 'installed-view-' + U.GUID(10) + '.tmp');\n\t\t\titem.url = internal;\n\t\t\titem.count = 0;\n\t\t\tF.routes.views[name] = item;\n\t\t}\n\n\t\titem.count++;\n\t\tFs.writeFileSync(item.filename, framework_internal.modificators(declaration, name));\n\n\t\tsetTimeout(function() {\n\t\t\tF.emit(type + '#' + name);\n\t\t\tF.emit('install', type, name);\n\t\t}, 500);\n\n\t\tcallback && callback(null, name);\n\t\treturn F;\n\t}\n\n\tif (type === 'definition' || type === 'eval') {\n\n\t\t_controller = '';\n\t\t_owner = type + '#' + name;\n\n\t\ttry {\n\n\t\t\tif (useRequired) {\n\t\t\t\tdelete require.cache[require.resolve(declaration)];\n\t\t\t\tobj = require(declaration);\n\n\t\t\t\t(function(name) {\n\t\t\t\t\tsetTimeout(() => delete require.cache[name], 1000);\n\t\t\t\t})(require.resolve(declaration));\n\t\t\t}\n\t\t\telse\n\t\t\t\tobj = typeof(declaration) === 'function' ? eval('(' + declaration.toString() + ')()') : eval(declaration);\n\n\t\t} catch (ex) {\n\t\t\tF.error(ex, 'F.install(\\'' + type + '\\')', null);\n\t\t\tcallback && callback(ex, name);\n\t\t\treturn F;\n\t\t}\n\n\t\tcallback && callback(null, name);\n\n\t\tsetTimeout(function() {\n\t\t\tF.emit(type + '#' + name);\n\t\t\tF.emit('install', type, name);\n\t\t}, 500);\n\n\t\treturn F;\n\t}\n\n\tif (type === 'isomorphic') {\n\n\t\tcontent = '';\n\n\t\ttry {\n\n\t\t\tif (!name && typeof(internal) === 'string') {\n\t\t\t\tvar tmp = internal.match(/[a-z0-9]+\\.js$/i);\n\t\t\t\tif (tmp)\n\t\t\t\t\tname = tmp.toString().replace(/\\.js/i, '');\n\t\t\t}\n\n\t\t\tif (useRequired) {\n\t\t\t\tdelete require.cache[require.resolve(declaration)];\n\t\t\t\tobj = require(declaration);\n\t\t\t\tcontent = Fs.readFileSync(declaration).toString(ENCODING);\n\t\t\t\t(function(name) {\n\t\t\t\t\tsetTimeout(() => delete require.cache[name], 1000);\n\t\t\t\t})(require.resolve(declaration));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tobj = typeof(declaration) === 'function' ? eval('(' + declaration.toString() + ')()') : eval(declaration);\n\t\t\t\tcontent = declaration.toString();\n\t\t\t}\n\n\t\t} catch (ex) {\n\t\t\tF.error(ex, 'F.install(\\'' + type + '\\')', null);\n\t\t\tcallback && callback(ex, name);\n\t\t\treturn F;\n\t\t}\n\n\t\tif (typeof(obj.id) === 'string')\n\t\t\tname = obj.id;\n\t\telse if (typeof(obj.name) === 'string')\n\t\t\tname = obj.name;\n\n\t\tif (obj.url) {\n\t\t\tif (obj.url[0] !== '/')\n\t\t\t\tobj.url = '/' + obj.url;\n\t\t} else\n\t\t\tobj.url = '/' + name + '.js';\n\n\t\ttmp = F.path.temp('isomorphic_' + name + '.min.js');\n\t\tF.map(framework_internal.preparePath(obj.url), tmp);\n\t\tF.isomorphic[name] = obj;\n\t\tFs.writeFileSync(tmp, prepare_isomorphic(name, framework_internal.compile_javascript(content, '#' + name)));\n\t\tcallback && callback(null, name);\n\n\t\tsetTimeout(function() {\n\t\t\tF.emit(type + '#' + name, obj);\n\t\t\tF.emit('install', type, name, obj);\n\t\t}, 500);\n\n\t\treturn F;\n\t}\n\n\tif (type === 'model' || type === 'source') {\n\n\t\t_controller = '';\n\t\t_owner = type + '#' + name;\n\n\t\ttry {\n\n\t\t\tif (useRequired) {\n\t\t\t\tobj = require(declaration);\n\t\t\t\t(function(name) {\n\t\t\t\t\tsetTimeout(() => delete require.cache[name], 1000);\n\t\t\t\t})(require.resolve(declaration));\n\t\t\t}\n\t\t\telse {\n\n\t\t\t\tif (typeof(declaration) !== 'string')\n\t\t\t\t\tdeclaration = declaration.toString();\n\n\t\t\t\tif (!name && typeof(internal) === 'string') {\n\t\t\t\t\tvar tmp = internal.match(/[a-z0-9]+\\.js$/i);\n\t\t\t\t\tif (tmp)\n\t\t\t\t\t\tname = tmp.toString().replace(/\\.js/i, '');\n\t\t\t\t}\n\n\t\t\t\tvar filename = F.path.temporary(plus + 'installed-' + type + '-' + U.GUID(10) + '.js');\n\t\t\t\tFs.writeFileSync(filename, declaration);\n\t\t\t\tobj = require(filename);\n\n\t\t\t\t(function(name, filename) {\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tFs.unlinkSync(filename);\n\t\t\t\t\t\tdelete require.cache[name];\n\t\t\t\t\t}, 1000);\n\t\t\t\t})(require.resolve(filename), filename);\n\t\t\t}\n\n\t\t} catch (ex) {\n\t\t\tF.error(ex, 'F.install(\\'' + type + '\\', \\'' + name + '\\')', null);\n\t\t\tcallback && callback(ex, name);\n\t\t\treturn F;\n\t\t}\n\n\t\tif (typeof(obj.id) === 'string')\n\t\t\tname = obj.id;\n\t\telse if (typeof(obj.name) === 'string')\n\t\t\tname = obj.name;\n\n\t\t_owner = type + '#' + name;\n\t\tobj.$owner = _owner;\n\n\t\tif (!name)\n\t\t\tname = (Math.random() * 10000) >> 0;\n\n\t\tkey = type + '.' + name;\n\t\ttmp = F.dependencies[key];\n\n\t\tF.uninstall(type, uptodateName || name, uptodateName ? 'uptodate' : undefined);\n\n\t\tif (tmp) {\n\t\t\tF.dependencies[key] = tmp;\n\t\t\tF.dependencies[key].updated = F.datetime;\n\t\t}\n\t\telse {\n\t\t\tF.dependencies[key] = { name: name, type: type, installed: F.datetime, updated: null, count: 0 };\n\t\t\tif (internal)\n\t\t\t\tF.dependencies[key].url = internal;\n\t\t}\n\n\t\tF.dependencies[key].count++;\n\n\t\tif (obj.reinstall)\n\t\t\tF.dependencies[key].reinstall = obj.reinstall.toString().parseDateExpiration();\n\t\telse\n\t\t\tdelete F.dependencies[key];\n\n\t\tif (type === 'model')\n\t\t\tF.models[name] = obj;\n\t\telse\n\t\t\tF.sources[name] = obj;\n\n\t\ttypeof(obj.install) === 'function' && obj.install(options || F.config[_owner], name);\n\n\t\t!skipEmit && setTimeout(function() {\n\t\t\tF.emit(type + '#' + name, obj);\n\t\t\tF.emit('install', type, name, obj);\n\t\t}, 500);\n\n\t\tcallback && callback(null, name);\n\t\treturn F;\n\t}\n\n\tif (type === 'module' || type === 'controller') {\n\n\t\t// for inline routes\n\t\tvar _ID = _controller = 'TMP' + U.random(10000);\n\t\t_owner = type + '#' + name;\n\n\t\ttry {\n\t\t\tif (useRequired) {\n\t\t\t\tobj = require(declaration);\n\t\t\t\t(function(name) {\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tdelete require.cache[name];\n\t\t\t\t\t}, 1000);\n\t\t\t\t})(require.resolve(declaration));\n\t\t\t} else {\n\n\t\t\t\tif (typeof(declaration) !== 'string')\n\t\t\t\t\tdeclaration = declaration.toString();\n\n\t\t\t\tif (!name && typeof(internal) === 'string') {\n\t\t\t\t\tvar tmp = internal.match(/[a-z0-9]+\\.js$/i);\n\t\t\t\t\tif (tmp)\n\t\t\t\t\t\tname = tmp.toString().replace(/\\.js/i, '');\n\t\t\t\t}\n\t\t\t\tfilename = F.path.temporary(plus + 'installed-' + type + '-' + U.GUID(10) + '.js');\n\t\t\t\tFs.writeFileSync(filename, declaration);\n\t\t\t\tobj = require(filename);\n\t\t\t\t(function(name, filename) {\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tFs.unlinkSync(filename);\n\t\t\t\t\t\tdelete require.cache[name];\n\t\t\t\t\t}, 1000);\n\t\t\t\t})(require.resolve(filename), filename);\n\t\t\t}\n\n\t\t} catch (ex) {\n\t\t\tF.error(ex, 'F.install(\\'' + type + '\\', \\'' + (name ? '' : internal) + '\\')', null);\n\t\t\tcallback && callback(ex, name);\n\t\t\treturn F;\n\t\t}\n\n\t\tif (typeof(obj.id) === 'string')\n\t\t\tname = obj.id;\n\t\telse if (typeof(obj.name) === 'string')\n\t\t\tname = obj.name;\n\n\t\tif (!name)\n\t\t\tname = (Math.random() * 10000) >> 0;\n\n\t\t_owner = type + '#' + name;\n\t\tobj.$owner = _owner;\n\n\t\tobj.booting && setTimeout(function() {\n\n\t\t\tvar tmpdir = F.path.temp(name + '.package/');\n\t\t\tif (obj.booting === 'root') {\n\t\t\t\tF.directory = directory = tmpdir;\n\t\t\t\tF.temporary.path = {};\n\t\t\t\tF.temporary.notfound = {};\n\t\t\t\tF._configure();\n\t\t\t\tF._configure_versions();\n\t\t\t\tF._configure_dependencies();\n\t\t\t\tF._configure_sitemap();\n\t\t\t\tF._configure_workflows();\n\t\t\t} else {\n\n\t\t\t\tF._configure('@' + name + '/config');\n\n\t\t\t\tif (F.config.debug)\n\t\t\t\t\tF._configure('@' + name + '/config-debug');\n\t\t\t\telse\n\t\t\t\t\tF._configure('@' + name + '/config-release');\n\n\t\t\t\tF.isTest && F._configure('@' + name + '/config-test');\n\t\t\t\tF._configure_versions('@' + name + '/versions');\n\t\t\t\tF._configure_dependencies('@' + name + '/dependencies');\n\t\t\t\tF._configure_sitemap('@' + name + '/sitemap');\n\t\t\t\tF._configure_workflows('@' + name + '/workflows');\n\t\t\t}\n\n\t\t\tF.$load(undefined, tmpdir);\n\t\t}, 100);\n\n\t\tkey = type + '.' + name;\n\t\ttmp = F.dependencies[key];\n\n\t\tF.uninstall(type, uptodateName || name, uptodateName ? 'uptodate' : undefined);\n\n\t\tif (tmp) {\n\t\t\tF.dependencies[key] = tmp;\n\t\t\tF.dependencies[key].updated = F.datetime;\n\t\t}\n\t\telse {\n\t\t\tF.dependencies[key] = { name: name, type: type, installed: F.datetime, updated: null, count: 0, _id: _ID };\n\t\t\tif (internal)\n\t\t\t\tF.dependencies[key].url = internal;\n\t\t}\n\n\t\tF.dependencies[key].dependencies = obj.dependencies;\n\t\tF.dependencies[key].count++;\n\t\tF.dependencies[key].processed = false;\n\n\t\tif (obj.reinstall)\n\t\t\tF.dependencies[key].reinstall = obj.reinstall.toString().parseDateExpiration();\n\t\telse\n\t\t\tdelete F.dependencies[key].reinstall;\n\n\t\t_controller = _ID;\n\n\t\tif (obj.dependencies instanceof Array) {\n\t\t\tfor (var i = 0, length = obj.dependencies.length; i < length; i++) {\n\t\t\t\tif (!F.dependencies[type + '.' + obj.dependencies[i]]) {\n\t\t\t\t\tF.temporary.dependencies[key] = { obj: obj, options: options, callback: callback, skipEmit: skipEmit };\n\t\t\t\t\treturn F;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tF.install_make(key, name, obj, options, callback, skipEmit, type);\n\n\t\tif (type === 'module')\n\t\t\tF.modules[name] = obj;\n\t\telse\n\t\t\tF.controllers[name] = obj;\n\n\t\tF.install_prepare();\n\t}\n\n\treturn F;\n};\n\nFramework.prototype.restart = function() {\n\tif (!F.isRestarted) {\n\t\tF.isRestarted = true;\n\t\tF.emit('restart');\n\t\tsetTimeout(() => F.$restart(), 1000);\n\t}\n\treturn F;\n};\n\nFramework.prototype.$restart = function() {\n\n\tconsole.log('----------------------------------------------------> RESTART ' + new Date().format('yyyy-MM-dd HH:mm:ss'));\n\n\tF.server.setTimeout(0);\n\tF.server.timeout = 0;\n\tF.server.close(function() {\n\n\t\tObject.keys(F.modules).forEach(function(key) {\n\t\t\tvar item = F.modules[key];\n\t\t\titem && item.uninstall && item.uninstall();\n\t\t});\n\n\t\tObject.keys(F.models).forEach(function(key) {\n\t\t\tvar item = F.models[key];\n\t\t\titem && item.uninstall && item.uninstall();\n\t\t});\n\n\t\tObject.keys(F.controllers).forEach(function(key) {\n\t\t\tvar item = F.controllers[key];\n\t\t\titem && item.uninstall && item.uninstall();\n\t\t});\n\n\t\tObject.keys(F.workers).forEach(function(key) {\n\t\t\tvar item = F.workers[key];\n\t\t\tif (item && item.kill) {\n\t\t\t\titem.removeAllListeners();\n\t\t\t\titem.kill('SIGTERM');\n\t\t\t}\n\t\t});\n\n\t\tObject.keys(F.connections).forEach(function(key) {\n\t\t\tvar item = F.connections[key];\n\t\t\tif (item) {\n\t\t\t\titem.removeAllListeners();\n\t\t\t\titem.close();\n\t\t\t}\n\t\t});\n\n\t\tframework_builders.restart();\n\t\tframework_image.restart();\n\t\tframework_mail.restart();\n\t\tU.restart();\n\t\tframework_internal.restart();\n\n\t\tF.cache.clear();\n\t\tF.cache.stop();\n\t\tF.global = {};\n\t\tF.resources = {};\n\t\tF.connections = {};\n\t\tF.functions = {};\n\t\tF.themes = {};\n\t\tF.uptodates = null;\n\t\tF.versions = null;\n\t\tF.schedules = [];\n\t\tF.isLoaded = false;\n\t\tF.isRestarted = false;\n\n\t\tF.routes = {\n\t\t\tsitemap: null,\n\t\t\tweb: [],\n\t\t\tfiles: [],\n\t\t\tcors: [],\n\t\t\twebsockets: [],\n\t\t\tmiddleware: {},\n\t\t\tredirects: {},\n\t\t\tresize: {},\n\t\t\trequest: [],\n\t\t\tviews: {},\n\t\t\tmerge: {},\n\t\t\tmapping: {},\n\t\t\tpackages: {},\n\t\t\tblocks: {},\n\t\t\tresources: {},\n\t\t\tmmr: {}\n\t\t};\n\n\t\tF.temporary = {\n\t\t\tpath: {},\n\t\t\tnotfound: {},\n\t\t\tprocessing: {},\n\t\t\trange: {},\n\t\t\tviews: {},\n\t\t\tversions: {},\n\t\t\tdependencies: {},\n\t\t\tother: {},\n\t\t\tinternal: {}\n\t\t};\n\n\t\tF.modificators = null;\n\t\tF.helpers = {};\n\t\tF.modules = {};\n\t\tF.models = {};\n\t\tF.sources = {};\n\t\tF.controllers = {};\n\t\tF.dependencies = {};\n\t\tF.isomorphic = {};\n\t\tF.tests = [];\n\t\tF.errors = [];\n\t\tF.problems = [];\n\t\tF.changes = [];\n\t\tF.traces = [];\n\t\tF.workers = {};\n\t\tF.convertors = [];\n\t\tF.databases = {};\n\n\t\tF._request_check_redirect = false;\n\t\tF._request_check_referer = false;\n\t\tF._request_check_POST = false;\n\t\tF._request_check_robot = false;\n\t\tF._length_middleware = 0;\n\t\tF._length_request_middleware = 0;\n\t\tF._length_files = 0;\n\t\tF._length_wait = 0;\n\t\tF._length_themes = 0;\n\t\tF._length_cors = 0;\n\t\tF._length_subdomain_web = 0;\n\t\tF._length_subdomain_websocket = 0;\n\t\tF.isVirtualDirectory = false;\n\t\tF.isTheme = false;\n\t\tF.stats.other.restart++;\n\n\t\tsetTimeout(() => F.removeAllListeners(), 2000);\n\t\tsetTimeout(function() {\n\t\t\tvar init = F.temporary.init;\n\t\t\tF.mode(init.isHTTPS ? require('https') : http, init.name, init.options);\n\t\t}, 1000);\n\t});\n\treturn F;\n};\n\nFramework.prototype.install_prepare = function(noRecursive) {\n\n\tvar keys = Object.keys(F.temporary.dependencies);\n\n\tif (!keys.length)\n\t\treturn;\n\n\t// check dependencies\n\tfor (var i = 0, length = keys.length; i < length; i++) {\n\n\t\tvar k = keys[i];\n\t\tvar a = F.temporary.dependencies[k];\n\t\tvar b = F.dependencies[k];\n\t\tvar skip = false;\n\n\t\tif (b.processed)\n\t\t\tcontinue;\n\n\t\tfor (var j = 0, jl = b.dependencies.length; j < jl; j++) {\n\t\t\tvar d = F.dependencies['module.' + b.dependencies[j]];\n\t\t\tif (!d || !d.processed) {\n\t\t\t\tskip = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (skip)\n\t\t\tcontinue;\n\n\t\tdelete F.temporary.dependencies[k];\n\n\t\tif (b.type === 'module')\n\t\t\tF.modules[b.name] = a.obj;\n\t\telse\n\t\t\tF.controllers[b.name] = a.obj;\n\n\t\tF.install_make(k, b.name, a.obj, a.options, a.callback, a.skipEmit, b.type);\n\t}\n\n\tkeys = Object.keys(F.temporary.dependencies);\n\n\tclearTimeout(F.temporary.other.dependencies);\n\tF.temporary.other.dependencies = setTimeout(function() {\n\t\tvar keys = Object.keys(F.temporary.dependencies);\n\t\tif (keys.length)\n\t\t\tthrow new Error('Dependency exception (module): missing dependencies for: ' + keys.join(', ').trim());\n\t\tdelete F.temporary.other.dependencies;\n\t}, 1500);\n\n\tif (!keys.length || noRecursive)\n\t\treturn F;\n\n\tF.install_prepare(true);\n\treturn F;\n};\n\nFramework.prototype.install_make = function(key, name, obj, options, callback, skipEmit, type) {\n\n\tvar me = F.dependencies[key];\n\tvar routeID = me._id;\n\tvar type = me.type;\n\n\tF.temporary.internal[me._id] = name;\n\t_controller = routeID;\n\t_owner = type + '#' + name.replace(/\\.package$/gi, '');\n\n\ttypeof(obj.install) === 'function' && obj.install(options || F.config[_owner], name);\n\tme.processed = true;\n\n\tvar id = (type === 'module' ? '#' : '') + name;\n\tvar length = F.routes.web.length;\n\tfor (var i = 0; i < length; i++) {\n\t\tif (F.routes.web[i].controller === routeID)\n\t\t\tF.routes.web[i].controller = id;\n\t}\n\n\tlength = F.routes.websockets.length;\n\tfor (var i = 0; i < length; i++) {\n\t\tif (F.routes.websockets[i].controller === routeID)\n\t\t\tF.routes.websockets[i].controller = id;\n\t}\n\n\tlength = F.routes.files.length;\n\tfor (var i = 0; i < length; i++) {\n\t\tif (F.routes.files[i].controller === routeID)\n\t\t\tF.routes.files[i].controller = id;\n\t}\n\n\tF.$routesSort();\n\t_controller = '';\n\n\tif (!skipEmit) {\n\t\tsetTimeout(function() {\n\t\t\tF.emit(type + '#' + name, obj);\n\t\t\tF.emit('install', type, name, obj);\n\t\t}, 500);\n\t}\n\n\tcallback && callback(null, name);\n\treturn F;\n};\n\n/**\n * Uninstall type\n * @param {String} type Available types: model, module, controller, source.\n * @param {String} name\n * @param {Object} options Custom options, optional.\n * @param {Object} skipEmit Internal, optional.\n * @return {Framework}\n */\nFramework.prototype.uninstall = function(type, name, options, skipEmit) {\n\n\tvar obj = null;\n\tvar id = type + '#' + name;\n\n\tif (type === 'schema') {\n\t\tframework_builders.remove(name);\n\t} else if (type === 'mapping') {\n\t\tdelete F.routes.mapping[name];\n\t} else if (type === 'isomorphic') {\n\t\tvar obj = F.isomorphic[name];\n\t\tif (obj.url)\n\t\t\tdelete F.routes.mapping[F._version(obj.url)];\n\t\tdelete F.isomorphic[name];\n\t} else if (type === 'middleware') {\n\n\t\tif (!F.routes.middleware[name])\n\t\t\treturn F;\n\n\t\tdelete F.routes.middleware[name];\n\t\tdelete F.dependencies[type + '.' + name];\n\t\tF._length_middleware = Object.keys(F.routes.middleware).length;\n\n\t\tvar tmp;\n\n\t\tfor (var i = 0, length = F.routes.web.length; i < length; i++) {\n\t\t\ttmp = F.routes.web[i];\n\t\t\tif (tmp.middleware && tmp.middleware.length)\n\t\t\t\ttmp.middleware = tmp.middleware.remove(name);\n\t\t}\n\n\t\tfor (var i = 0, length = F.routes.websockets.length; i < length; i++) {\n\t\t\ttmp = F.routes.websocket[i];\n\t\t\tif (tmp.middleware && tmp.middleware.length)\n\t\t\t\ttmp.middleware = tmp.middleware.remove(name);\n\t\t}\n\n\t\tfor (var i = 0, length = F.routes.files.length; i < length; i++) {\n\t\t\ttmp = F.routes.files[i];\n\t\t\tif (tmp.middleware && tmp.middleware.length)\n\t\t\t\ttmp.middleware = tmp.middleware.remove(name);\n\t\t}\n\n\t} else if (type === 'package') {\n\t\tdelete F.routes.packages[name];\n\t\tF.uninstall('module', name, options, true);\n\t\treturn F;\n\t} else if (type === 'view' || type === 'precompile') {\n\n\t\tobj = F.routes.views[name];\n\n\t\tif (!obj)\n\t\t\treturn F;\n\n\t\tdelete F.routes.views[name];\n\t\tdelete F.dependencies[type + '.' + name];\n\n\t\tfsFileExists(obj.filename, function(e) {\n\t\t\te && Fs.unlink(obj.filename, NOOP);\n\t\t});\n\n\t} else if (type === 'model' || type === 'source') {\n\n\t\tobj = type === 'model' ? F.models[name] : F.sources[name];\n\n\t\tif (!obj)\n\t\t\treturn F;\n\n\t\tif (obj.id)\n\t\t\tdelete require.cache[require.resolve(obj.id)];\n\n\t\tF.$uninstall(id);\n\t\ttypeof(obj.uninstall) === 'function' && obj.uninstall(options, name);\n\n\t\tif (type === 'model')\n\t\t\tdelete F.models[name];\n\t\telse\n\t\t\tdelete F.sources[name];\n\n\t\tdelete F.dependencies[type + '.' + name];\n\n\t} else if (type === 'module' || type === 'controller') {\n\n\t\tvar isModule = type === 'module';\n\t\tobj = isModule ? F.modules[name] : F.controllers[name];\n\n\t\tif (!obj)\n\t\t\treturn F;\n\n\t\tif (obj.id)\n\t\t\tdelete require.cache[require.resolve(obj.id)];\n\n\t\tF.$uninstall(id, (isModule ? '#' : '') + name);\n\n\t\tif (obj) {\n\t\t\tobj.uninstall && obj.uninstall(options, name);\n\t\t\tif (isModule)\n\t\t\t\tdelete F.modules[name];\n\t\t\telse\n\t\t\t\tdelete F.controllers[name];\n\t\t}\n\n\t} else if (type === 'component') {\n\n\t\tif (!F.components.instances[name])\n\t\t\treturn F;\n\n\t\tobj = F.components.instances[name];\n\n\t\tif (obj) {\n\t\t\tF.$uninstall(id);\n\t\t\tobj.uninstall && obj.uninstall(options, name);\n\t\t\tdelete F.components.instances[name];\n\t\t}\n\n\t\tdelete F.components.instances[name];\n\t\tdelete F.components.views[name];\n\n\t\tvar temporary = (F.id ? 'i-' + F.id + '_' : '') + 'components';\n\t\tvar data;\n\t\tvar index;\n\t\tvar beg = '\\n/*' + name.hash() + '*/\\n';\n\t\tvar end = beg.substring(0, beg.length - 1);\n\t\tvar is = false;\n\n\t\tif (F.components.js) {\n\t\t\tdata = Fs.readFileSync(F.path.temp(temporary + '.js')).toString('utf-8');\n\t\t\tindex = data.indexOf(beg);\n\t\t\tif (index !== -1) {\n\t\t\t\tdata = data.substring(0, index) + data.substring(data.indexOf(end, index + end.length) + end.length);\n\t\t\t\tFs.writeFileSync(F.path.temp(temporary + '.js'), data);\n\t\t\t\tis = true;\n\t\t\t}\n\t\t}\n\n\t\tif (F.components.css) {\n\t\t\tdata = Fs.readFileSync(F.path.temp(temporary + '.css')).toString('utf-8');\n\t\t\tindex = data.indexOf(beg);\n\t\t\tif (index !== -1) {\n\t\t\t\tdata = data.substring(0, index) + data.substring(data.indexOf(end, index +end.length) + end.length);\n\t\t\t\tFs.writeFileSync(F.path.temp(temporary + '.css'), data);\n\t\t\t\tis = true;\n\t\t\t}\n\t\t}\n\n\t\tif (is)\n\t\t\tF.components.version = U.GUID(5);\n\t}\n\n\t!skipEmit && F.emit('uninstall', type, name);\n\treturn F;\n};\n\nFramework.prototype.$uninstall = function(owner, controller) {\n\n\tif (controller) {\n\t\tF.routes.web = F.routes.web.remove('controller', controller);\n\t\tF.routes.files = F.routes.files.remove('controller', controller);\n\t\tF.routes.websockets = F.routes.websockets.remove('controller', controller);\n\t}\n\n\tF.routes.web = F.routes.web.remove('owner', owner);\n\tF.routes.files = F.routes.files.remove('owner', owner);\n\tF.routes.websockets = F.routes.websockets.remove('owner', owner);\n\tF.routes.cors = F.routes.cors.remove('owner', owner);\n\tF.schedules = F.schedules.remove('owner', owner);\n\n\tif (F.modificators)\n\t\tF.modificators = F.modificators.remove('$owner', owner);\n\n\tframework_builders.uninstall(owner);\n\n\tvar owners = [];\n\tvar redirects = false;\n\n\tfor (var i = 0, length = F.owners.length; i < length; i++) {\n\n\t\tvar m = F.owners[i];\n\t\tif (m.owner !== owner) {\n\t\t\towners.push(m);\n\t\t\tcontinue;\n\t\t}\n\n\t\tswitch (m.type) {\n\t\t\tcase 'redirects':\n\t\t\t\tdelete F.routes.redirects[m.id];\n\t\t\t\tredirects = true;\n\t\t\t\tbreak;\n\t\t\tcase 'resize':\n\t\t\t\tdelete F.routes.resize[m.id];\n\t\t\t\tbreak;\n\t\t\tcase 'merge':\n\t\t\t\tdelete F.routes.merge[m.id];\n\t\t\t\tbreak;\n\t\t\tcase 'mapping':\n\t\t\t\tdelete F.routes.mapping[m.id];\n\t\t\t\tbreak;\n\t\t\tcase 'blocks':\n\t\t\t\tdelete F.routes.blocks[m.id];\n\t\t\t\tbreak;\n\t\t\tcase 'middleware':\n\t\t\t\tUNINSTALL('middleware', m.id);\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\tif (redirects)\n\t\tF._request_check_redirect = Object.keys(F.routes.redirects).length > 0;\n\n\tF.owners = owners;\n\tF.$routesSort();\n\treturn F;\n};\n\n/**\n * Register internal mapping (e.g. Resource)\n * @param {String} path\n * @return {Framework}\n */\nFramework.prototype.register = function(path) {\n\n\tvar key;\n\tvar extension = '.' + U.getExtension(path);\n\tvar name = U.getName(path);\n\tvar c = path[0];\n\n\tif (c === '@')\n\t\tpath = F.path.package(path.substring(1));\n\telse if (c === '=') {\n\t\tif (path[1] === '?')\n\t\t\tF.path.themes(F.config['default-theme'] + path.substring(2));\n\t\telse\n\t\t\tpath = F.path.themes(path.substring(1));\n\t}\n\n\tswitch (extension) {\n\t\tcase '.resource':\n\t\t\tkey = name.replace(extension, '');\n\t\t\tif (F.routes.resources[key])\n\t\t\t\tF.routes.resources[key].push(path);\n\t\t\telse\n\t\t\t\tF.routes.resources[key] = [path];\n\t\t\t// clears cache\n\t\t\tdelete F.resources[key];\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow new Error('Not supported registration type \"' + extension + '\".');\n\t}\n\n\treturn F;\n};\n\n/**\n * Run code\n * @param {String or Function} script Function to eval or Code or URL address.\n * @return {Framework}\n */\nFramework.prototype.eval = function(script) {\n\treturn F.install('eval', script);\n};\n\n/**\n * Error handler\n * @param {Error} err\n * @param {String} name\n * @param {Object} uri URI address, optional.\n * @return {Framework}\n */\nFramework.prototype.onError = function(err, name, uri) {\n\tF.datetime = new Date();\n\tconsole.log('======= ' + (F.datetime.format('yyyy-MM-dd HH:mm:ss')) + ': ' + (name ? name + ' ---> ' : '') + err.toString() + (uri ? ' (' + Parser.format(uri) + ')' : ''), err.stack);\n\treturn F;\n};\n\n/*\n\tAuthorization handler\n\t@req {Request}\n\t@res {Response} OR {WebSocketClient}\n\t@flags {String array}\n\t@callback {Function} - @callback(Boolean), true is [authorize]d and false is [unauthorize]d\n*/\nFramework.prototype.onAuthorize = null;\n\n/*\n\tSets the current language for the current request\n\t@req {Request}\n\t@res {Response} OR {WebSocketClient}\n\t@return {String}\n*/\nFramework.prototype.onLocale = null;\n// OLD: Framework.prototype.onLocate = null;\n\n/**\n * Sets theme to controlller\n * @controller {Controller}\n * @return {String}\n */\nFramework.prototype.onTheme = null;\n\n/*\n\tVersioning static files (this delegate call LESS CSS by the background property)\n\t@name {String} :: name of static file (style.css or script.js)\n\treturn {String} :: return new name of static file (style-new.css or script-new.js)\n*/\nFramework.prototype.onVersion = null;\n\n/**\n * On mapping static files\n * @param {String} url\n * @param {String} def Default value.\n * @return {String}\n */\nFramework.prototype.onMapping = function(url, def, ispublic, encode) {\n\n\tif (url[0] !== '/')\n\t\turl = '/' + url;\n\n\tif (F._length_themes) {\n\t\tvar index = url.indexOf('/', 1);\n\t\tif (index !== -1) {\n\t\t\tvar themeName = url.substring(1, index);\n\t\t\tif (F.themes[themeName])\n\t\t\t\treturn F.themes[themeName] + 'public' + url.substring(index);\n\t\t}\n\t}\n\n\tif (F.routes.mapping[url])\n\t\treturn F.routes.mapping[url];\n\n\tdef = framework_internal.preparePath(def, true);\n\n\tif (encode)\n\t\tdef = $decodeURIComponent(def);\n\n\tif (ispublic)\n\t\tdef = F.path.public_cache(def);\n\telse\n\t\tdef = def[0] === '~' ? def.substring(1) : def[0] === '.' ? def : F.path.public_cache(def);\n\n\treturn def;\n};\nFramework.prototype.download = Framework.prototype.snapshot = function(url, filename, callback) {\n\n\turl = framework_internal.preparePath(url);\n\tif (!url.match(/^http:|https:/gi)) {\n\t\tif (url[0] !== '/')\n\t\t\turl = '/' + url;\n\t\turl = 'http://' + (F.ip === 'auto' ? '0.0.0.0' : F.ip) + ':' + F.port + url;\n\t}\n\n\tU.download(url, REQUEST_INSTALL_FLAGS, function(err, response) {\n\n\t\tif (err) {\n\t\t\tcallback && callback(err);\n\t\t\tcallback = null;\n\t\t\treturn;\n\t\t}\n\n\t\tvar stream = Fs.createWriteStream(filename);\n\t\tresponse.pipe(stream);\n\n\t\tresponse.on('error', function(err) {\n\t\t\tcallback && callback(err);\n\t\t\tcallback = null;\n\t\t});\n\n\t\tCLEANUP(stream, function() {\n\t\t\tDESTROY(stream);\n\t\t\tcallback && callback(null, filename);\n\t\t\tcallback = null;\n\t\t});\n\t});\n\n\treturn F;\n};\n\n/**\n * Find WebSocket connection\n * @param {String/RegExp} path\n * @return {WebSocket}\n */\nFramework.prototype.findConnection = function(path) {\n\tvar arr = Object.keys(F.connections);\n\tvar is = U.isRegExp(path);\n\tfor (var i = 0, length = arr.length; i < length; i++) {\n\t\tvar key = arr[i];\n\t\tif (is) {\n\t\t\tif (path.test(key))\n\t\t\t\treturn F.connections[key];\n\t\t} else {\n\t\t\tif (key.indexOf(path) !== -1)\n\t\t\t\treturn F.connections[key];\n\t\t}\n\t}\n};\n\n/**\n * Find WebSocket connections\n * @param {String/RegExp} path\n * @return {WebSocket Array}\n */\nFramework.prototype.findConnections = function(path) {\n\tvar arr = Object.keys(F.connections);\n\tvar is = U.isRegExp(path);\n\tvar output = [];\n\tfor (var i = 0, length = arr.length; i < length; i++) {\n\t\tvar key = arr[i];\n\t\tif (!path)\n \t\t\toutput.push(F.connections[key]);\n\t\telse if (is)\n\t\t\tpath.test(key) && output.push(F.connections[key]);\n\t\telse\n\t\t\tkey.indexOf(path) !== -1 && output.push(F.connections[key]);\n\t}\n\treturn output;\n};\n\n/**\n * Global validation\n * @param {Function(name, value)} delegate\n * @type {Boolean or StringErrorMessage}\n */\nFramework.prototype.onValidate = null;\n\n/**\n * Global XML parsing\n * @param {String} value\n * @return {Object}\n */\nFramework.prototype.onParseXML = function(value) {\n\tvar val = U.parseXML(value);\n\tF._length_convertors && F.convert(val);\n\treturn val;\n};\n\n/**\n * Global JSON parsing\n * @param {String} value\n * @return {Object}\n */\nFramework.prototype.onParseJSON = function(value) {\n\treturn JSON.parse(value);\n};\n\n/**\n * Global JSON parsing\n * @param {String} value\n * @return {Object}\n */\nFramework.prototype.onParseQuery = function(value) {\n\tif (value) {\n\t\tvar val = Qs.parse(value, null, null, QUERYPARSEROPTIONS);\n\t\tF._length_convertors && F.convert(val);\n\t\treturn val;\n\t}\n\treturn {};\n};\n\n/**\n * Schema parser delegate\n * @param {Request} req\n * @param {String} group\n * @param {String} name\n * @param {Function(err, body)} callback\n */\nFramework.prototype.onSchema = function(req, group, name, callback, filter) {\n\tvar schema = GETSCHEMA(group, name);\n\tif (schema)\n\t\tschema.make(req.body, (err, res) => err ? callback(err) : callback(null, res), filter);\n\telse\n\t\tcallback(new Error('Schema \"' + group + '/' + name + '\" not found.'));\n};\n\n/**\n * Mail delegate\n * @param {String or Array String} address\n * @param {String} subject\n * @param {String} body\n * @param {Function(err)} callback\n * @param {String} replyTo\n * @return {MailMessage}\n */\nFramework.prototype.onMail = function(address, subject, body, callback, replyTo) {\n\n\tvar tmp;\n\n\tif (typeof(callback) === 'string') {\n\t\ttmp = replyTo;\n\t\treplyTo = callback;\n\t\tcallback = tmp;\n\t}\n\n\tvar message = Mail.create(subject, body);\n\n\tif (address instanceof Array) {\n\t\tfor (var i = 0, length = address.length; i < length; i++)\n\t\t\tmessage.to(address[i]);\n\t} else\n\t\tmessage.to(address);\n\n\tmessage.from(F.config['mail.address.from'] || '', F.config.name);\n\ttmp = F.config['mail.address.reply'];\n\n\tif (replyTo)\n\t\tmessage.reply(replyTo);\n\telse if (tmp && tmp.isEmail())\n\t\tmessage.reply(F.config['mail.address.reply']);\n\n\ttmp = F.config['mail.address.copy'];\n\n\tif (tmp && tmp.isEmail())\n\t\tmessage.bcc(tmp);\n\n\tvar opt = F.temporary['mail-settings'];\n\n\tif (!opt) {\n\t\tvar config = F.config['mail.smtp.options'];\n\t\tif (config) {\n\t\t\tvar type = typeof(config);\n\t\t\tif (type === 'string')\n\t\t\t\topt = config.parseJSON();\n\t\t\telse if (type === 'object')\n\t\t\t\topt = config;\n\t\t}\n\n\t\tif (!opt)\n\t\t\topt = {};\n\n\t\tF.temporary['mail-settings'] = opt;\n\t}\n\n\tmessage.$sending = setTimeout(() => message.send(F.config['mail.smtp'], opt, callback), 5);\n\treturn message;\n};\n\nFramework.prototype.onMeta = function() {\n\n\tvar builder = '';\n\tvar length = arguments.length;\n\tvar self = this;\n\n\tfor (var i = 0; i < length; i++) {\n\n\t\tvar arg = U.encode(arguments[i]);\n\t\tif (arg == null || !arg.length)\n\t\t\tcontinue;\n\n\t\tswitch (i) {\n\t\t\tcase 0:\n\t\t\t\tbuilder += '<title>' + (arg + (F.url !== '/' && !F.config['allow-custom-titles'] ? ' - ' + F.config.name : '')) + '</title>';\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tbuilder += '<meta name=\"description\" content=\"' + arg + '\" />';\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tbuilder += '<meta name=\"keywords\" content=\"' + arg + '\" />';\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tvar tmp = arg.substring(0, 6);\n\t\t\t\tvar img = tmp === 'http:/' || tmp === 'https:' || arg.substring(0, 2) === '//' ? arg : self.hostname(self.routeImage(arg));\n\t\t\t\tbuilder += '<meta property=\"og:image\" content=\"' + img + '\" /><meta name=\"twitter:image\" content=\"' + img + '\" />';\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn builder;\n};\n\n// @arguments {Object params}\nFramework.prototype.log = function() {\n\n\tF.datetime = new Date();\n\tvar filename = F.datetime.getFullYear() + '-' + (F.datetime.getMonth() + 1).toString().padLeft(2, '0') + '-' + F.datetime.getDate().toString().padLeft(2, '0');\n\tvar time = F.datetime.getHours().toString().padLeft(2, '0') + ':' + F.datetime.getMinutes().toString().padLeft(2, '0') + ':' + F.datetime.getSeconds().toString().padLeft(2, '0');\n\tvar str = '';\n\tvar length = arguments.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar val = arguments[i];\n\t\tif (val === undefined)\n\t\t\tval = 'undefined';\n\t\telse if (val === null)\n\t\t\tval = 'null';\n\t\telse if (typeof(val) === 'object')\n\t\t\tval = Util.inspect(val);\n\t\tstr += (str ? ' ' : '') + val;\n\t}\n\n\tF.path.verify('logs');\n\tU.queue('F.log', 5, (next) => Fs.appendFile(U.combine(F.config['directory-logs'], filename + '.log'), time + ' | ' + str + '\\n', next));\n\treturn F;\n};\n\nFramework.prototype.logger = function() {\n\tF.datetime = new Date();\n\tvar dt = F.datetime.getFullYear() + '-' + (F.datetime.getMonth() + 1).toString().padLeft(2, '0') + '-' + F.datetime.getDate().toString().padLeft(2, '0') + ' ' + F.datetime.getHours().toString().padLeft(2, '0') + ':' + F.datetime.getMinutes().toString().padLeft(2, '0') + ':' + F.datetime.getSeconds().toString().padLeft(2, '0');\n\tvar str = '';\n\tvar length = arguments.length;\n\n\tfor (var i = 1; i < length; i++) {\n\t\tvar val = arguments[i];\n\t\tif (val === undefined)\n\t\t\tval = 'undefined';\n\t\telse if (val === null)\n\t\t\tval = 'null';\n\t\telse if (typeof(val) === 'object')\n\t\t\tval = Util.inspect(val);\n\t\tstr += (str ? ' ' : '') + val;\n\t}\n\n\tF.path.verify('logs');\n\tU.queue('F.logger', 5, (next) => Fs.appendFile(U.combine(F.config['directory-logs'], arguments[0] + '.log'), dt + ' | ' + str + '\\n', next));\n\treturn F;\n};\n\nFramework.prototype.logmail = function(address, subject, body, callback) {\n\n\tif (typeof(body) === FUNCTION) {\n\t\tcallback = body;\n\t\tbody = subject;\n\t\tsubject = null;\n\t} else if (body === undefined) {\n\t\tbody = subject;\n\t\tsubject = null;\n\t}\n\n\tif (!subject)\n\t\tsubject = F.config.name + ' v' + F.config.version;\n\n\tvar body = '<!DOCTYPE html><html><head><title>' + subject + '</title><meta charset=\"utf-8\" /></head><body><pre style=\"max-width:600px;font-size:13px;line-height:16px\">' + (typeof(body) === 'object' ? JSON.stringify(body).escape() : body) + '</pre></body></html>';\n\treturn F.onMail(address, subject, body, callback);\n};\n\nFramework.prototype.usage = function(detailed) {\n\tvar memory = process.memoryUsage();\n\tvar cache = Object.keys(F.cache.items);\n\tvar resources = Object.keys(F.resources);\n\tvar controllers = Object.keys(F.controllers);\n\tvar connections = Object.keys(F.connections);\n\tvar workers = Object.keys(F.workers);\n\tvar modules = Object.keys(F.modules);\n\tvar isomorphic = Object.keys(F.isomorphic);\n\tvar models = Object.keys(F.models);\n\tvar helpers = Object.keys(F.helpers);\n\tvar staticFiles = Object.keys(F.temporary.path);\n\tvar staticNotfound = Object.keys(F.temporary.notfound);\n\tvar staticRange = Object.keys(F.temporary.range);\n\tvar redirects = Object.keys(F.routes.redirects);\n\tvar output = {};\n\n\toutput.framework = {\n\t\tpid: process.pid,\n\t\tnode: process.version,\n\t\tversion: 'v' + F.version_header,\n\t\tplatform: process.platform,\n\t\tprocessor: process.arch,\n\t\tuptime: Math.floor(process.uptime() / 60),\n\t\tmemoryTotal: (memory.heapTotal / 1024 / 1024).floor(2),\n\t\tmemoryUsage: (memory.heapUsed / 1024 / 1024).floor(2),\n\t\tmode: F.config.debug ? 'debug' : 'release',\n\t\tport: F.port,\n\t\tip: F.ip,\n\t\tdirectory: process.cwd()\n\t};\n\n\tvar keys = Object.keys(U.queuecache);\n\tvar pending = 0;\n\tfor (var i = 0, length = keys.length; i < length; i++)\n\t\tpending += U.queuecache[keys[i]].pending.length;\n\n\toutput.counter = {\n\t\tresource: resources.length,\n\t\tcontroller: controllers.length,\n\t\tmodule: modules.length,\n\t\tisomorphic: isomorphic.length,\n\t\tcache: cache.length,\n\t\tworker: workers.length,\n\t\tconnection: connections.length,\n\t\tschedule: F.schedules.length,\n\t\thelpers: helpers.length,\n\t\terror: F.errors.length,\n\t\tproblem: F.problems.length,\n\t\tqueue: pending,\n\t\tfiles: staticFiles.length,\n\t\tnotfound: staticNotfound.length,\n\t\tstreaming: staticRange.length,\n\t\tmodificator:  F.modificators ? F.modificators.length : 0,\n\t\tviewphrases: $VIEWCACHE.length,\n\t\tuptodates: F.uptodates ? F.uptodates.length : 0\n\t};\n\n\toutput.routing = {\n\t\twebpage: F.routes.web.length,\n\t\tsitemap: F.routes.sitemap ? Object.keys(F.routes.sitemap).length : 0,\n\t\twebsocket: F.routes.websockets.length,\n\t\tfile: F.routes.files.length,\n\t\tmiddleware: Object.keys(F.routes.middleware).length,\n\t\tredirect: redirects.length,\n\t\tmmr: Object.keys(F.routes.mmr).length\n\t};\n\n\toutput.stats = F.stats;\n\toutput.redirects = redirects;\n\n\tif (!detailed)\n\t\treturn output;\n\n\toutput.controllers = [];\n\n\tcontrollers.forEach(function(o) {\n\t\tvar item = F.controllers[o];\n\t\toutput.controllers.push({ name: o, usage: item.usage ? item.usage() : null });\n\t});\n\n\toutput.connections = [];\n\n\tconnections.forEach(function(o) {\n\t\toutput.connections.push({ name: o, online: F.connections[o].online });\n\t});\n\n\toutput.modules = [];\n\n\tmodules.forEach(function(o) {\n\t\tvar item = F.modules[o];\n\t\toutput.modules.push({ name: o, usage: item.usage ? item.usage() : null });\n\t});\n\n\toutput.models = [];\n\n\tmodels.forEach(function(o) {\n\t\tvar item = F.models[o];\n\t\toutput.models.push({ name: o, usage: item.usage ? item.usage() : null });\n\t});\n\n\toutput.uptodates = F.uptodates;\n\toutput.helpers = helpers;\n\toutput.cache = cache;\n\toutput.resources = resources;\n\toutput.errors = F.errors;\n\toutput.problems = F.problems;\n\toutput.changes = F.changes;\n\toutput.traces = F.traces;\n\toutput.files = staticFiles;\n\toutput.streaming = staticRange;\n\toutput.other = Object.keys(F.temporary.other);\n\treturn output;\n};\n\n/**\n * Compiles content in the view @{compile}...@{end}. The function has controller context, this === controler.\n * @param {String} name\n * @param {String} html HTML content to compile\n * @param {Object} model\n * @return {String}\n */\nFramework.prototype.onCompileView = function(name, html, model) {\n\treturn html;\n};\n\n/*\n\t3rd CSS compiler (Sync)\n\t@filename {String}\n\t@content {String} :: Content of CSS file\n\treturn {String}\n*/\nFramework.prototype.onCompileStyle = null;\n\n/*\n\t3rd JavaScript compiler (Sync)\n\t@filename {String}\n\t@content {String} :: Content of JavaScript file\n\treturn {String}\n*/\nFramework.prototype.onCompileScript = null;\n\n/**\n * Compile content (JS, CSS, HTML)\n * @param {String} extension File extension.\n * @param {String} content File content.\n * @param {String} filename\n * @return {String}\n */\nFramework.prototype.compileContent = function(extension, content, filename) {\n\n\tif (filename && REG_NOCOMPRESS.test(filename))\n\t\treturn content;\n\n\tswitch (extension) {\n\t\tcase 'js':\n\t\t\treturn F.config['allow-compile-script'] ? framework_internal.compile_javascript(content, filename) : content;\n\n\t\tcase 'css':\n\t\t\tcontent = F.config['allow-compile-style'] ? framework_internal.compile_css(content, filename) : content;\n\t\t\tvar matches = content.match(REG_COMPILECSS);\n\t\t\tif (matches) {\n\t\t\t\tfor (var i = 0, length = matches.length; i < length; i++) {\n\t\t\t\t\tvar key = matches[i];\n\t\t\t\t\tvar url = key.substring(4, key.length - 1);\n\t\t\t\t\tcontent = content.replace(key, 'url(' + F._version(url) + ')');\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn content;\n\t}\n\n\treturn content;\n};\n\n/**\n * Compile static file\n * @param {URI} uri\n * @param {String} key Temporary key.\n * @param {String} filename\n * @param {String} extension File extension.\n * @param {Function()} callback\n * @return {Framework}\n */\nFramework.prototype.compileFile = function(uri, key, filename, extension, callback) {\n\tfsFileRead(filename, function(err, buffer) {\n\n\t\tif (err) {\n\t\t\tF.error(err, filename, uri);\n\t\t\tF.temporary.notfound[key] = true;\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\n\t\tvar file = F.path.temp((F.id ? 'i-' + F.id + '_' : '') + createTemporaryKey(uri.pathname));\n\t\tF.path.verify('temp');\n\t\tFs.writeFileSync(file, F.compileContent(extension, framework_internal.parseBlock(F.routes.blocks[uri.pathname], buffer.toString(ENCODING)), filename), ENCODING);\n\t\tvar stats = Fs.statSync(file);\n\t\tF.temporary.path[key] = [file, stats.size, stats.mtime.toUTCString()];\n\t\tcallback();\n\t});\n\treturn F;\n};\n\n/**\n * Merge static files (JS, CSS, HTML, TXT, JSON)\n * @param {URI} uri\n * @param {String} key Temporary key.\n * @param {String} extension File extension.\n * @param {Function()} callback\n * @return {Framework}\n */\nFramework.prototype.compileMerge = function(uri, key, extension, callback) {\n\n\tvar merge = F.routes.merge[uri.pathname];\n\tvar filename = merge.filename;\n\n\tif (!F.config.debug && existsSync(filename)) {\n\t\tvar stats = Fs.statSync(filename);\n\t\tF.temporary.path[key] = [filename, stats.size, stats.mtime.toUTCString()];\n\t\tcallback();\n\t\treturn F;\n\t}\n\n\tvar writer = Fs.createWriteStream(filename);\n\n\twriter.on('finish', function() {\n\t\tvar stats = Fs.statSync(filename);\n\t\tF.temporary.path[key] = [filename, stats.size, stats.mtime.toUTCString()];\n\t\tcallback();\n\t});\n\n\tvar index = 0;\n\tvar remove;\n\n\tmerge.files.wait(function(filename, next) {\n\n\t\tvar block;\n\n\t\t// Skip isomorphic\n\t\tif (filename[0] !== '#') {\n\t\t\tvar blocks = filename.split('#');\n\t\t\tblock = blocks[1];\n\t\t\tif (block)\n\t\t\t\tfilename = blocks[0];\n\t\t}\n\n\t\tif (filename.startsWith('http://') || filename.startsWith('https://')) {\n\t\t\tU.request(filename, REQUEST_DOWNLOAD_FLAGS, function(err, data) {\n\n\t\t\t\tvar output = F.compileContent(extension, framework_internal.parseBlock(block, data), filename);\n\n\t\t\t\tif (extension === 'js') {\n\t\t\t\t\tif (output[output.length - 1] !== ';')\n\t\t\t\t\t\toutput += ';';\n\t\t\t\t} else if (extension === 'html') {\n\t\t\t\t\tif (output[output.length - 1] !== NEWLINE)\n\t\t\t\t\t\toutput += NEWLINE;\n\t\t\t\t}\n\n\t\t\t\tDEBUG && merge_debug_writer(writer, filename, extension, index++, block);\n\t\t\t\twriter.write(output);\n\t\t\t\tnext();\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (filename[0] !== '~') {\n\t\t\tvar tmp = F.path.public(filename);\n\t\t\tif (F.isVirtualDirectory && !existsSync(tmp))\n\t\t\t\ttmp = F.path.virtual(filename);\n\t\t\tfilename = tmp;\n\t\t}\n\t\telse\n\t\t\tfilename = filename.substring(1);\n\n\t\tvar indexer = filename.indexOf('*');\n\t\tif (indexer !== -1) {\n\n\t\t\tvar tmp = filename.substring(indexer + 1).toLowerCase();\n\t\t\tvar len = tmp.length;\n\n\t\t\tif (!remove)\n\t\t\t\tremove = [];\n\n\t\t\t// Remove directory for all future requests\n\t\t\tremove.push(arguments[0]);\n\n\t\t\tU.ls(filename.substring(0, indexer), function(files, directories) {\n\t\t\t\tfor (var j = 0, l = files.length; j < l; j++)\n\t\t\t\t\tmerge.files.push('~' + files[j]);\n\t\t\t\tnext();\n\t\t\t}, function(path, isDirectory) {\n\t\t\t\treturn isDirectory ? true : path.substring(path.length - len).toLowerCase() === tmp;\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tfsFileRead(filename, function(err, buffer) {\n\n\t\t\tif (err) {\n\t\t\t\tF.error(err, merge.filename, uri);\n\t\t\t\tnext();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar output = F.compileContent(extension, framework_internal.parseBlock(block, buffer.toString(ENCODING)), filename);\n\t\t\tif (extension === 'js') {\n\t\t\t\tif (output[output.length - 1] !== ';')\n\t\t\t\t\toutput += ';';\n\t\t\t} else if (extension === 'html') {\n\t\t\t\tif (output[output.length - 1] !== NEWLINE)\n\t\t\t\t\toutput += NEWLINE;\n\t\t\t}\n\n\t\t\tDEBUG && merge_debug_writer(writer, filename, extension, index++, block);\n\t\t\twriter.write(output);\n\t\t\tnext();\n\t\t});\n\n\t}, function() {\n\n\t\twriter.end();\n\n\t\t// Removes all directories from merge list (because the files are added into the queue)\n\t\tif (remove) {\n\t\t\tfor (var i = 0, length = remove.length; i < length; i++)\n\t\t\t\tmerge.files.splice(merge.files.indexOf(remove[i]), 1);\n\t\t}\n\t});\n\n\treturn F;\n};\n\nfunction merge_debug_writer(writer, filename, extension, index, block) {\n\tvar plus = '===========================================================================================';\n\tvar beg = extension === 'js' ? '/*\\n' : extension === 'css' ? '/*!\\n' : '<!--\\n';\n\tvar end = extension === 'js' || extension === 'css' ? '\\n */' : '\\n-->';\n\tvar mid = extension !== 'html' ? ' * ' : ' ';\n\twriter.write((index > 0 ? '\\n\\n' : '') + beg + mid + plus + '\\n' + mid + 'MERGED: ' + filename + '\\n' + (block ? mid + 'BLOCKS: ' + block + '\\n' : '') + mid + plus + end + '\\n\\n', ENCODING);\n}\n\nfunction component_debug(filename, value, extension) {\n\tvar plus = '===========================================================================================';\n\tvar beg = extension === 'js' ? '/*\\n' : extension === 'css' ? '/*!\\n' : '<!--\\n';\n\tvar end = extension === 'js' || extension === 'css' ? '\\n */' : '\\n-->';\n\tvar mid = extension !== 'html' ? ' * ' : ' ';\n\treturn beg + mid + plus + '\\n' + mid + 'COMPONENT: ' + filename + '\\n' + mid + plus + end + '\\n\\n' + value;\n}\n\n/**\n * Validating static file for compilation\n * @param {URI} uri\n * @param {String} key Temporary key.\n * @param {String} filename\n * @param {String} extension File extension.\n * @param {Function()} callback\n * @return {Framework}\n */\nFramework.prototype.compileValidation = function(uri, key, filename, extension, callback, noCompress) {\n\n\tif (F.routes.merge[uri.pathname]) {\n\t\tF.compileMerge(uri, key, extension, callback);\n\t\treturn F;\n\t}\n\n\tfsFileExists(filename, function(e, size, sfile, stats) {\n\t\tif (e) {\n\t\t\tif (!noCompress && (extension === 'js' || extension === 'css') && !REG_NOCOMPRESS.test(filename))\n\t\t\t\treturn F.compileFile(uri, key, filename, extension, callback);\n\t\t\tF.temporary.path[key] = [filename, size, stats.mtime.toUTCString()];\n\t\t\tcallback();\n\t\t} else if (F.isVirtualDirectory)\n\t\t\tF.compileValidationVirtual(uri, key, filename, extension, callback, noCompress);\n\t\telse {\n\t\t\tF.temporary.notfound[key] = true;\n\t\t\tcallback();\n\t\t}\n\t});\n\n\treturn F;\n};\n\nFramework.prototype.compileValidationVirtual = function(uri, key, filename, extension, callback, noCompress) {\n\n\tvar tmpname = filename.replace(F.config['directory-public'], F.config['directory-public-virtual']);\n\tif (tmpname === filename) {\n\t\tF.temporary.notfound[key] = true;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\tfilename = tmpname;\n\tfsFileExists(filename, function(e, size, sfile, stats) {\n\n\t\tif (!e) {\n\t\t\tF.temporary.notfound[key] = true;\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\n\t\tif (!noCompress && (extension === 'js' || extension === 'css') && !REG_NOCOMPRESS.test(filename))\n\t\t\treturn F.compileFile(uri, key, filename, extension, callback);\n\n\t\tF.temporary.path[key] = [filename, size, stats.mtime.toUTCString()];\n\t\tcallback();\n\t});\n\n\treturn;\n};\n\n/**\n * Server all static files\n * @param {Request} req\n * @param {Response} res\n * @return {Framework}\n */\nFramework.prototype.responseStatic = function(req, res, done) {\n\n\tif (res.success || res.headersSent) {\n\t\tdone && done();\n\t\treturn F;\n\t}\n\n\tif (!F.config['static-accepts'][req.extension]) {\n\t\tF.response404(req, res);\n\t\tdone && done();\n\t\treturn F;\n\t}\n\n\treq.$key = createTemporaryKey(req);\n\tif (F.temporary.notfound[req.$key]) {\n\t\tF.response404(req, res);\n\t\tdone && done();\n\t\treturn F;\n\t}\n\n\tvar name = req.uri.pathname;\n\tvar index = name.lastIndexOf('/');\n\tvar resizer = F.routes.resize[name.substring(0, index + 1)] || null;\n\tvar canResize;\n\tvar filename;\n\n\tif (resizer) {\n\t\tname = name.substring(index + 1);\n\t\tcanResize = resizer.extension['*'] || resizer.extension[req.extension];\n\t\tif (canResize) {\n\t\t\tname = resizer.path + $decodeURIComponent(name);\n\t\t\tfilename = F.onMapping(name, name, false, false);\n\t\t} else\n\t\t\tfilename = F.onMapping(name, name, true, true);\n\t} else\n\t\tfilename = F.onMapping(name, name, true, true);\n\n\tif (!canResize) {\n\t\tif (F.components.has && F.components[req.extension] && req.uri.pathname === F.config['static-url-components'] + req.extension) {\n\t\t\tres.noCompress = true;\n\t\t\tfilename = F.path.temp('components.' + req.extension);\n\t\t}\n\t\tF.responseFile(req, res, filename, undefined, undefined, done);\n\t\treturn F;\n\t}\n\n\tif (!resizer.ishttp) {\n\t\tvar method = resizer.cache ? F.responseImage : F.responseImageWithoutCache;\n\t\tmethod.call(F, req, res, filename, (image) => resizer.fn.call(image, image), undefined, done);\n\t\treturn;\n\t}\n\n\tif (F.temporary.processing[req.uri.pathname]) {\n\t\tsetTimeout(() => F.responseStatic(req, res, done), 500);\n\t\treturn;\n\t}\n\n\tvar tmp = F.path.temp(req.$key);\n\tif (F.temporary.path[req.$key]) {\n\t\tF.responseFile(req, res, req.uri.pathname, undefined, undefined, done);\n\t\treturn F;\n\t}\n\n\tF.temporary.processing[req.uri.pathname] = true;\n\n\tU.download(name, REQUEST_DOWNLOAD_FLAGS, function(err, response) {\n\t\tvar writer = Fs.createWriteStream(tmp);\n\t\tresponse.pipe(writer);\n\t\tCLEANUP(writer, function() {\n\n\t\t\tdelete F.temporary.processing[req.uri.pathname];\n\t\t\tvar contentType = response.headers['content-type'];\n\n\t\t\tif (response.statusCode !== 200 || !contentType || !contentType.startsWith('image/')) {\n\t\t\t\tF.response404(req, res);\n\t\t\t\tdone && done();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar method = resizer.cache ? F.responseImage : F.responseImageWithoutCache;\n\t\t\tmethod.call(F, req, res, tmp, (image) => resizer.fn.call(image, image), undefined, done);\n\t\t});\n\t});\n\n\treturn F;\n};\n\nFramework.prototype.restore = function(filename, target, callback, filter) {\n\tvar backup = new Backup();\n\tbackup.restore(filename, target, callback, filter);\n};\n\nFramework.prototype.backup = function(filename, path, callback, filter) {\n\n\tvar length = path.length;\n\tvar padding = 120;\n\n\tU.ls(path, function(files, directories) {\n\t\tdirectories.wait(function(item, next) {\n\t\t\tvar dir = item.substring(length).replace(/\\\\/g, '/') + '/';\n\t\t\tif (filter && !filter(dir))\n\t\t\t\treturn next();\n\t\t\tFs.appendFile(filename, dir.padRight(padding) + ':#\\n', next);\n\t\t}, function() {\n\t\t\tfiles.wait(function(item, next) {\n\t\t\t\tvar fil = item.substring(length).replace(/\\\\/g, '/');\n\t\t\t\tif (filter && !filter(fil))\n\t\t\t\t\treturn next();\n\t\t\t\tFs.readFile(item, function(err, data) {\n\t\t\t\t\tZlib.gzip(data, function(err, data) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tF.error(err, 'F.backup()', filename);\n\t\t\t\t\t\t\treturn next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tFs.appendFile(filename, fil.padRight(padding) + ':' + data.toString('base64') + '\\n', next);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}, callback);\n\t\t});\n\t});\n\n\treturn this;\n};\n\nFramework.prototype.exists = function(req, res, max, callback) {\n\n\tif (typeof(max) === 'function') {\n\t\tcallback = max;\n\t\tmax = 10;\n\t}\n\n\tvar name = createTemporaryKey(req);\n\tvar filename = F.path.temp(name);\n\tvar httpcachevalid = false;\n\n\tRELEASE && (req.headers['if-none-match'] === ETAG + F.config['etag-version']) && (httpcachevalid = true);\n\n\tif (F.isProcessed(name) || httpcachevalid) {\n\t\tF.responseFile(req, res, filename);\n\t\treturn F;\n\t}\n\n\tU.queue('F.exists', max, function(next) {\n\t\tfsFileExists(filename, function(e) {\n\t\t\tif (e)\n\t\t\t\tF.responseFile(req, res, filename, undefined, undefined, next);\n\t\t\telse\n\t\t\t\tcallback(next, filename);\n\t\t});\n\t});\n\n\treturn F;\n};\n\n/**\n * Is processed static file?\n * @param {String / Request} filename Filename or Request object.\n * @return {Boolean}\n */\nFramework.prototype.isProcessed = function(filename) {\n\n\tif (filename.url) {\n\t\tvar name = filename.url;\n\t\tvar index = name.indexOf('?');\n\t\tif (index !== -1)\n\t\t\tname = name.substring(0, index);\n\t\tfilename = F.path.public($decodeURIComponent(name));\n\t}\n\n\treturn !F.temporary.notfound[filename] && F.temporary.path[filename] !== undefined;\n};\n\n/**\n * Processing\n * @param {String / Request} filename Filename or Request object.\n * @return {Boolean}\n */\nFramework.prototype.isProcessing = function(filename) {\n\n\tif (!filename.url)\n\t\treturn F.temporary.processing[filename] ? true : false;\n\n\tvar name = filename.url;\n\tvar index = name.indexOf('?');\n\n\tif (index !== -1)\n\t\tname = name.substring(0, index);\n\n\tfilename = U.combine(F.config['directory-public'], $decodeURIComponent(name));\n\treturn F.temporary.processing[filename] ? true : false;\n};\n\n/**\n * Disable HTTP cache for current request/response\n * @param  {Request}  req Request\n * @param  {Response} res (optional) Response\n * @return {Framework}\n */\nFramework.prototype.noCache = function(req, res) {\n\treq.noCache();\n\tres && res.noCache();\n\treturn F;\n};\n\n/**\n * Response file\n * @param {Request} req\n * @param {Response} res\n * @param {String} filename\n * @param {String} downloadName Optional\n * @param {Object} headers Optional\n * @param {Function} done Optional, callback.\n * @param {String} key Path to file, INTERNAL.\n * @return {Framework}\n */\nFramework.prototype.responseFile = function(req, res, filename, downloadName, headers, done, key) {\n\n\tif (res.success || res.headersSent) {\n\t\tdone && done();\n\t\treturn F;\n\t}\n\n\t// Is package?\n\tif (filename[0] === '@')\n\t\tfilename = F.path.package(filename.substring(1));\n\n\tif (!key)\n\t\tkey = req.$key || createTemporaryKey(req);\n\n\tif (F.temporary.notfound[key]) {\n\t\tF.config.debug && (F.temporary.notfound[key] = undefined);\n\t\tF.response404(req, res);\n\t\tdone && done();\n\t\treturn F;\n\t}\n\n\tvar name = F.temporary.path[key];\n\tvar extension = req.extension;\n\tvar returnHeaders;\n\tvar index;\n\n\tif (!extension) {\n\t\tif (key)\n\t\t\textension = U.getExtension(key);\n\t\tif (!extension && name) {\n\t\t\textension = U.getExtension(name);\n\t\t\tindex = extension.lastIndexOf(';');\n\t\t\tif (index !== -1)\n\t\t\t\textension = extension.substring(0, index);\n\t\t}\n\t\tif (!extension && filename)\n\t\t\textension = U.getExtension(filename);\n\t}\n\n\tif (name && RELEASE && req.headers['if-modified-since'] === name[2]) {\n\n\t\treturnHeaders = HEADERS['responseFile.lastmodified'];\n\t\tif (res.getHeader('Last-Modified'))\n\t\t\tdelete returnHeaders['Last-Modified'];\n\t\telse\n\t\t\treturnHeaders['Last-Modified'] = name[2];\n\n\t\tif (res.getHeader('Expires'))\n\t\t\tdelete returnHeaders.Expires;\n\t\telse\n\t\t\treturnHeaders.Expires = DATE_EXPIRES;\n\n\t\tif (res.getHeader('ETag'))\n\t\t\tdelete returnHeaders.Etag;\n\t\telse\n\t\t\treturnHeaders.Etag = ETAG + F.config['etag-version'];\n\n\t\treturnHeaders[RESPONSE_HEADER_CONTENTTYPE] = U.getContentType(extension);\n\t\tres.success = true;\n\t\tres.writeHead(304, returnHeaders);\n\t\tres.end();\n\t\tF.stats.response.notModified++;\n\t\tF._request_stats(false, req.isStaticFile);\n\t\tdone && done();\n\t\t!req.isStaticFile && F.emit('request-end', req, res);\n\t\treq.clear(true);\n\t\treturn F;\n\t}\n\n\t// JS, CSS\n\tif (name === undefined) {\n\n\t\tif (F.isProcessing(key)) {\n\t\t\tif (req.processing > F.config['default-request-timeout'])\n\t\t\t\tF.response408(req, res);\n\t\t\telse {\n\t\t\t\treq.processing += 500;\n\t\t\t\tsetTimeout(() => F.responseFile(req, res, filename, downloadName, headers, done, key), 500);\n\t\t\t}\n\t\t\treturn F;\n\t\t}\n\n\t\t// waiting\n\t\tF.temporary.processing[key] = true;\n\n\t\t// checks if the file exists and counts the file size\n\t\tF.compileValidation(req.uri, key, filename, extension, function() {\n\t\t\tdelete F.temporary.processing[key];\n\t\t\tF.responseFile(req, res, filename, downloadName, headers, done, key);\n\t\t}, res.noCompress);\n\n\t\treturn F;\n\t}\n\n\tvar contentType = U.getContentType(extension);\n\tvar accept = req.headers['accept-encoding'] || '';\n\n\tif (!accept && isGZIP(req))\n\t\taccept = 'gzip';\n\n\tvar compress = F.config['allow-gzip'] && REQUEST_COMPRESS_CONTENTTYPE[contentType] && accept.indexOf('gzip') !== -1;\n\tvar range = req.headers['range'];\n\tvar canCache = RELEASE && contentType !== 'text/cache-manifest';\n\n\tif (canCache) {\n\t\tif (compress)\n\t\t\treturnHeaders = range ? HEADERS['responseFile.release.compress.range'] : HEADERS['responseFile.release.compress'];\n\t\telse\n\t\t\treturnHeaders = range ? HEADERS['responseFile.release.range'] : HEADERS['responseFile.release'];\n\t} else {\n\t\tif (compress)\n\t\t\treturnHeaders = range ? HEADERS['responseFile.debug.compress.range'] : HEADERS['responseFile.debug.compress'];\n\t\telse\n\t\t\treturnHeaders = range ? HEADERS['responseFile.debug.range'] : HEADERS['responseFile.debug'];\n\t}\n\n\tif (req.$mobile)\n\t\treturnHeaders.Vary = 'Accept-Encoding, User-Agent';\n\telse\n\t\treturnHeaders.Vary = 'Accept-Encoding';\n\n\treturnHeaders[RESPONSE_HEADER_CONTENTTYPE] = contentType;\n\tif (REG_TEXTAPPLICATION.test(contentType))\n\t\treturnHeaders[RESPONSE_HEADER_CONTENTTYPE] += '; charset=utf-8';\n\n\tif (canCache && !res.getHeader('Expires'))\n\t\treturnHeaders.Expires = DATE_EXPIRES;\n\telse if (returnHeaders.Expires)\n\t\tdelete returnHeaders.Expires;\n\n\tif (headers)\n\t\treturnHeaders = U.extend_headers(returnHeaders, headers);\n\n\tif (downloadName)\n\t\treturnHeaders['Content-Disposition'] = 'attachment; filename=\"' + encodeURIComponent(downloadName) + '\"';\n\telse if (returnHeaders['Content-Disposition'])\n\t\tdelete returnHeaders['Content-Disposition'];\n\n\tif (res.getHeader('Last-Modified'))\n\t\tdelete returnHeaders['Last-Modified'];\n\telse\n\t\treturnHeaders['Last-Modified'] = name[2];\n\n\treturnHeaders.Etag = ETAG + F.config['etag-version'];\n\tres.success = true;\n\n\tif (range) {\n\t\tF.responseRange(name[0], range, returnHeaders, req, res, done);\n\t\treturn F;\n\t}\n\n\tDEBUG && F.isProcessed(key) && (F.temporary.path[key] = undefined);\n\n\tif (name[1] && !compress)\n\t\treturnHeaders[RESPONSE_HEADER_CONTENTLENGTH] = name[1];\n\telse if (returnHeaders[RESPONSE_HEADER_CONTENTLENGTH])\n\t\tdelete returnHeaders[RESPONSE_HEADER_CONTENTLENGTH];\n\n\tF.stats.response.file++;\n\tF._request_stats(false, req.isStaticFile);\n\n\tif (req.method === 'HEAD') {\n\t\tres.writeHead(200, returnHeaders);\n\t\tres.end();\n\t\tdone && done();\n\t\t!req.isStaticFile && F.emit('request-end', req, res);\n\t\treq.clear(true);\n\t\treturn F;\n\t}\n\n\tif (compress) {\n\t\tres.writeHead(200, returnHeaders);\n\t\tfsStreamRead(name[0], undefined, function(stream, next) {\n\t\t\tframework_internal.onFinished(res, function(err) {\n\t\t\t\tframework_internal.destroyStream(stream);\n\t\t\t\tnext();\n\t\t\t});\n\t\t\tstream.pipe(Zlib.createGzip()).pipe(res);\n\t\t\tdone && done();\n\t\t\t!req.isStaticFile && F.emit('request-end', req, res);\n\t\t\treq.clear(true);\n\t\t});\n\t\treturn F;\n\t}\n\n\tres.writeHead(200, returnHeaders);\n\tfsStreamRead(name[0], undefined, function(stream, next) {\n\t\tstream.pipe(res);\n\t\tframework_internal.onFinished(res, function(err) {\n\t\t\tframework_internal.destroyStream(stream);\n\t\t\tnext();\n\t\t});\n\t\tdone && done();\n\t\t!req.isStaticFile && F.emit('request-end', req, res);\n\t\treq.clear(true);\n\t});\n\n\treturn F;\n};\n\n/**\n * Clears file information in release mode\n * @param {String/Request} url\n * @return {Framework}\n */\nFramework.prototype.touch = function(url) {\n\tif (url) {\n\t\tvar key = createTemporaryKey(url);\n\t\tdelete F.temporary.path[key];\n\t\tdelete F.temporary.notfound[key];\n\t} else {\n\t\tF.temporary.path = {};\n\t\tF.temporary.notfound = {};\n\t}\n\treturn F;\n};\n\n/**\n * Creates a pipe between the current request and target URL\n * @param {Request} req\n * @param {Response} res\n * @param {String} url\n * @param {Object} headers Additional headers, optional.\n * @param {Number} timeout\n * @param {Function(err)} callback\n * @return {Framework}\n */\nFramework.prototype.responsePipe = function(req, res, url, headers, timeout, callback) {\n\n\tif (res.success || res.headersSent)\n\t\treturn F;\n\n\tU.resolve(url, function(err, uri) {\n\t\tvar h = {};\n\n\t\th[RESPONSE_HEADER_CACHECONTROL] = 'private';\n\n\t\tif (headers)\n\t\t\tU.extend_headers2(h, headers);\n\n\t\tvar options = { protocol: uri.protocol, auth: uri.auth, method: 'GET', hostname: uri.hostname, port: uri.port, path: uri.path, agent: false, headers: h };\n\t\tvar connection = options.protocol === 'https:' ? require('https') : http;\n\t\tvar supportsGZIP = (req.headers['accept-encoding'] || '').lastIndexOf('gzip') !== -1;\n\n\t\tvar client = connection.get(options, function(response) {\n\n\t\t\tif (res.success || res.headersSent)\n\t\t\t\treturn;\n\n\t\t\tvar contentType = response.headers['content-type'];\n\t\t\tvar isGZIP = (response.headers['content-encoding'] || '').lastIndexOf('gzip') !== -1;\n\t\t\tvar compress = !isGZIP && supportsGZIP && (contentType.indexOf('text/') !== -1 || contentType.lastIndexOf('javascript') !== -1 || contentType.lastIndexOf('json') !== -1);\n\t\t\tvar attachment = response.headers['content-disposition'] || '';\n\n\t\t\tattachment && res.setHeader('Content-Disposition', attachment);\n\t\t\tres.setHeader(RESPONSE_HEADER_CONTENTTYPE, contentType);\n\t\t\tres.setHeader('Vary', 'Accept-Encoding' + (req.$mobile ? ', User-Agent' : ''));\n\n\t\t\tres.on('error', function(err) {\n\t\t\t\tresponse.close();\n\t\t\t\tcallback && callback(err);\n\t\t\t\tcallback = null;\n\t\t\t});\n\n\t\t\tif (compress) {\n\t\t\t\tres.setHeader('Content-Encoding', 'gzip');\n\t\t\t\tresponse.pipe(Zlib.createGzip()).pipe(res);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isGZIP && !supportsGZIP)\n\t\t\t\tresponse.pipe(Zlib.createGunzip()).pipe(res);\n\t\t\telse\n\t\t\t\tresponse.pipe(res);\n\t\t});\n\n\t\ttimeout && client.setTimeout(timeout, function() {\n\t\t\tF.response408(req, res);\n\t\t\tcallback && callback(new Error(U.httpStatus(408)));\n\t\t\tcallback = null;\n\t\t});\n\n\t\tclient.on('close', function() {\n\n\t\t\tif (res.success || res.headersSent)\n\t\t\t\treturn;\n\n\t\t\tres.success = true;\n\t\t\tF.stats.response.pipe++;\n\t\t\tF._request_stats(false, req.isStaticFile);\n\t\t\tres.success = true;\n\t\t\t!req.isStaticFile && F.emit('request-end', req, res);\n\t\t\treq.clear(true);\n\t\t\tcallback && callback();\n\t\t});\n\t});\n\n\treturn F;\n};\n\n/**\n * Enables a custom respoding for the current response\n * @param {Request} req\n * @param {Response} res\n * @return {Framework}\n */\nFramework.prototype.responseCustom = function(req, res) {\n\tif (res.success || res.headersSent)\n\t\treturn F;\n\tres.success = true;\n\tF.stats.response.custom++;\n\tF._request_stats(false, req.isStaticFile);\n\t!req.isStaticFile && F.emit('request-end', req, res);\n\treq.clear(true);\n\treturn F;\n};\n\n/**\n * Responds with an image\n * @param {Request} req\n * @param {Response} res\n * @param {String or Stream} filename\n * @param {Function(image)} fnProcess\n * @param {Object} headers Optional, additional headers.\n * @param {Function} done Optional, callback function.\n * @return {Framework}\n */\nFramework.prototype.responseImage = function(req, res, filename, fnProcess, headers, done) {\n\n\tvar key = req.$key || createTemporaryKey(req);\n\tif (F.temporary.notfound[key]) {\n\t\tF.response404(req, res);\n\t\tdone && done();\n\t\treturn F;\n\t}\n\n\tvar name = F.temporary.path[key];\n\tvar stream;\n\n\tif (typeof(filename) === 'object')\n\t\tstream = filename;\n\telse if (filename[0] === '@')\n\t\tfilename = F.path.package(filename.substring(1));\n\n\tif (name !== undefined) {\n\t\tF.responseFile(req, res, '', undefined, headers, done, key);\n\t\treturn F;\n\t}\n\n\tif (F.isProcessing(key)) {\n\t\tif (req.processing > F.config['default-request-timeout']) {\n\t\t\tF.response408(req, res);\n\t\t\tdone && done();\n\t\t} else {\n\t\t\treq.processing += 500;\n\t\t\tsetTimeout(() => F.responseImage(req, res, filename, fnProcess, headers, done), 500);\n\t\t}\n\t\treturn F;\n\t}\n\n\tvar plus = F.id ? 'i-' + F.id + '_' : '';\n\n\tname = F.path.temp(plus + key);\n\tF.temporary.processing[key] = true;\n\n\t// STREAM\n\tif (stream) {\n\t\tfsFileExists(name, function(exist) {\n\n\t\t\tif (exist) {\n\t\t\t\tdelete F.temporary.processing[key];\n\t\t\t\tF.temporary.path[key] = name;\n\t\t\t\tF.responseFile(req, res, name, undefined, headers, done, key);\n\t\t\t\tDEBUG && (F.temporary.path[key] = undefined);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tF.path.verify('temp');\n\t\t\tvar image = framework_image.load(stream, IMAGEMAGICK);\n\t\t\tfnProcess(image);\n\n\t\t\tvar extension = U.getExtension(name);\n\t\t\tif (extension !== image.outputType) {\n\t\t\t\tvar index = name.lastIndexOf('.' + extension);\n\t\t\t\tif (index !== -1)\n\t\t\t\t\tname = name.substring(0, index) + '.' + image.outputType;\n\t\t\t\telse\n\t\t\t\t\tname += '.' + image.outputType;\n\t\t\t}\n\n\t\t\tF.stats.response.image++;\n\t\t\timage.save(name, function(err) {\n\n\t\t\t\tdelete F.temporary.processing[key];\n\n\t\t\t\tif (err) {\n\t\t\t\t\tF.temporary.notfound[key] = true;\n\t\t\t\t\tF.response500(req, res, err);\n\t\t\t\t\tdone && done();\n\t\t\t\t\tDEBUG && (F.temporary.notfound[key] = undefined);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar stats = Fs.statSync(name);\n\t\t\t\tF.temporary.path[key] = [name, stats.size, stats.mtime.toUTCString()];\n\t\t\t\tF.responseFile(req, res, name, undefined, headers, done, key);\n\t\t\t});\n\t\t});\n\n\t\treturn F;\n\t}\n\n\t// FILENAME\n\tfsFileExists(filename, function(exist) {\n\n\t\tif (!exist) {\n\t\t\tdelete F.temporary.processing[key];\n\t\t\tF.temporary.notfound[key] = true;\n\t\t\tF.response404(req, res);\n\t\t\tdone && done();\n\t\t\tDEBUG && (F.temporary.notfound[key] = undefined);\n\t\t\treturn;\n\t\t}\n\n\t\tF.path.verify('temp');\n\t\tvar image = framework_image.load(filename, IMAGEMAGICK);\n\t\tfnProcess(image);\n\n\t\tvar extension = U.getExtension(name);\n\t\tif (extension !== image.outputType) {\n\t\t\tvar index = name.lastIndexOf('.' + extension);\n\t\t\tif (index === -1)\n\t\t\t\tname += '.' + image.outputType;\n\t\t\telse\n\t\t\t\tname = name.substring(0, index) + '.' + image.outputType;\n\t\t}\n\n\t\tF.stats.response.image++;\n\t\timage.save(name, function(err) {\n\n\t\t\tdelete F.temporary.processing[key];\n\n\t\t\tif (err) {\n\t\t\t\tF.temporary.notfound[key] = true;\n\t\t\t\tF.response500(req, res, err);\n\t\t\t\tdone && done();\n\t\t\t\tDEBUG && (F.temporary.notfound[key] = undefined);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar stats = Fs.statSync(name);\n\t\t\tF.temporary.path[key] = [name, stats.size, stats.mtime.toUTCString()];\n\t\t\tF.responseFile(req, res, name, undefined, headers, done, key);\n\t\t});\n\t});\n\n\treturn F;\n};\n\nFramework.prototype.responseImagePrepare = function(req, res, fnPrepare, fnProcess, headers, done) {\n\n\tvar key = req.$key || createTemporaryKey(req);\n\n\tif (F.temporary.notfound[key]) {\n\t\tF.response404(req, res);\n\t\tdone && done();\n\t\tDEBUG && (F.temporary.notfound[key] = undefined);\n\t\treturn F;\n\t}\n\n\tvar name = F.temporary.path[key];\n\tif (name) {\n\t\tF.responseFile(req, res, '', undefined, headers, done, key);\n\t\treturn F;\n\t}\n\n\tif (F.isProcessing(key)) {\n\t\tif (req.processing > F.config['default-request-timeout']) {\n\t\t\tF.response408(req, res);\n\t\t\tdone && done();\n\t\t} else {\n\t\t\treq.processing += 500;\n\t\t\tsetTimeout(() => F.responseImage(req, res, filename, fnProcess, headers, done), 500);\n\t\t}\n\t\treturn;\n\t}\n\n\tfnPrepare.call(F, function(filename) {\n\t\tif (filename) {\n\t\t\tF.responseImage(req, res, filename, fnProcess, headers, done);\n\t\t} else {\n\t\t\tF.response404(req, res);\n\t\t\tdone && done();\n\t\t}\n\t});\n\n\treturn F;\n};\n\n/**\n * Responds with an image (not cached)\n * @param {Request} req\n * @param {Response} res\n * @param {String or Stream} filename\n * @param {Function(image)} fnProcess\n * @param {Object} headers Optional, additional headers\n * @param {Function} done Optional, callback.\n * @return {Framework}\n */\nFramework.prototype.responseImageWithoutCache = function(req, res, filename, fnProcess, headers, done) {\n\n\tvar stream;\n\n\tif (typeof(filename) === 'object')\n\t\tstream = filename;\n\telse if (filename[0] === '@')\n\t\tfilename = F.path.package(filename.substring(1));\n\n\t// STREAM\n\tif (stream) {\n\t\tvar image = framework_image.load(stream, IMAGEMAGICK);\n\t\tfnProcess(image);\n\t\tF.stats.response.image++;\n\t\tF.responseStream(req, res, U.getContentType(image.outputType), image, null, headers, done);\n\t\treturn F;\n\t}\n\n\t// FILENAME\n\tfsFileExists(filename, function(e) {\n\n\t\tif (e) {\n\t\t\tF.path.verify('temp');\n\t\t\tvar image = framework_image.load(filename, IMAGEMAGICK);\n\t\t\tfnProcess(image);\n\t\t\tF.stats.response.image++;\n\t\t\tF.responseStream(req, res, U.getContentType(image.outputType), image, null, headers, done);\n\t\t} else {\n\t\t\tF.response404(req, res);\n\t\t\tdone && done();\n\t\t}\n\n\t});\n\treturn F;\n};\n\n/**\n * Responds with a stream\n * @param {Request} req\n * @param {Response} res\n * @param {String} contentType\n * @param {ReadStream} stream\n * @param {String} download Optional, download name.\n * @param {Object} headers Optional\n * @return {Framework}\n */\nFramework.prototype.responseStream = function(req, res, contentType, stream, download, headers, done, nocompress) {\n\n\tif (res.success || res.headersSent) {\n\t\tdone && done();\n\t\treturn F;\n\t}\n\n\tif (contentType.lastIndexOf('/') === -1)\n\t\tcontentType = U.getContentType(contentType);\n\n\tvar accept = req.headers['accept-encoding'] || '';\n\n\tif (!accept && isGZIP(req))\n\t\taccept = 'gzip';\n\n\tvar compress = nocompress === false && F.config['allow-gzip'] && REQUEST_COMPRESS_CONTENTTYPE[contentType] && accept.indexOf('gzip') !== -1;\n\tvar returnHeaders;\n\n\tif (RELEASE) {\n\t\tif (compress)\n\t\t\treturnHeaders = HEADERS['responseStream.release.compress'];\n\t\telse\n\t\t\treturnHeaders = HEADERS['responseStream.release'];\n\t} else {\n\t\tif (compress)\n\t\t\treturnHeaders = HEADERS['responseStream.debug.compress'];\n\t\telse\n\t\t\treturnHeaders = HEADERS['responseStream.debug'];\n\t}\n\n\treturnHeaders.Vary = 'Accept-Encoding' + (req.$mobile ? ', User-Agent' : '');\n\n\tif (RELEASE) {\n\t\treturnHeaders.Expires = DATE_EXPIRES;\n\t\treturnHeaders['Last-Modified'] = 'Mon, 01 Jan 2001 08:00:00 GMT';\n\t}\n\n\tif (headers)\n\t\treturnHeaders = U.extend_headers(returnHeaders, headers);\n\n\tif (download)\n\t\treturnHeaders['Content-Disposition'] = 'attachment; filename=' + encodeURIComponent(download);\n\telse if (returnHeaders['Content-Disposition'])\n\t\tdelete returnHeaders['Content-Disposition'];\n\n\treturnHeaders[RESPONSE_HEADER_CONTENTTYPE] = contentType;\n\n\tF.stats.response.stream++;\n\tF._request_stats(false, req.isStaticFile);\n\n\tif (req.method === 'HEAD') {\n\t\tres.writeHead(200, returnHeaders);\n\t\tres.end();\n\t\tdone && done();\n\t\t!req.isStaticFile && F.emit('request-end', req, res);\n\t\treq.clear(true);\n\t\treturn F;\n\t}\n\n\tif (compress) {\n\t\tres.writeHead(200, returnHeaders);\n\t\tres.on('error', () => stream.close());\n\t\tstream.pipe(Zlib.createGzip()).pipe(res);\n\t\tframework_internal.onFinished(res, () => framework_internal.destroyStream(stream));\n\t\tdone && done();\n\t\t!req.isStaticFile && F.emit('request-end', req, res);\n\t\treq.clear(true);\n\t\treturn F;\n\t}\n\n\tres.writeHead(200, returnHeaders);\n\tframework_internal.onFinished(res, (err) => framework_internal.destroyStream(stream));\n\tstream.pipe(res);\n\n\tdone && done();\n\t!req.isStaticFile && F.emit('request-end', req, res);\n\treq.clear(true);\n\treturn F;\n};\n\n/**\n * INTERNAL: Response range (streaming)\n * @param {String} name Temporary name.\n * @param {String} range\n * @param {Object} headers Optional, additional headers.\n * @param {Request} req\n * @param {Response} res\n * @param {Function} done Optional, callback.\n * @return {Framework}\n */\nFramework.prototype.responseRange = function(name, range, headers, req, res, done) {\n\n\tvar arr = range.replace(REG_RANGE, '').split('-');\n\tvar beg = +arr[0] || 0;\n\tvar end = +arr[1] || 0;\n\tvar total = F.temporary.range[name];\n\n\tif (!total) {\n\t\ttotal = Fs.statSync(name).size;\n\t\tRELEASE && (F.temporary.range[name] = total);\n\t}\n\n\tif (end === 0)\n\t\tend = total - 1;\n\n\tif (beg > end) {\n\t\tbeg = 0;\n\t\tend = total - 1;\n\t}\n\n\tvar length = (end - beg) + 1;\n\n\theaders[RESPONSE_HEADER_CONTENTLENGTH] = length;\n\theaders['Content-Range'] = 'bytes ' + beg + '-' + end + '/' + total;\n\n\tif (req.method === 'HEAD') {\n\t\tres.writeHead(206, headers);\n\t\tres.end();\n\t\tF.stats.response.streaming++;\n\t\tF._request_stats(false, req.isStaticFile);\n\t\tdone && done();\n\t\t!req.isStaticFile && F.emit('request-end', req, res);\n\t\treturn F;\n\t}\n\n\tres.writeHead(206, headers);\n\n\tRANGE.start = beg;\n\tRANGE.end = end;\n\n\tfsStreamRead(name, RANGE, function(stream, next) {\n\n\t\tframework_internal.onFinished(res, function() {\n\t\t\tframework_internal.destroyStream(stream);\n\t\t\tnext();\n\t\t});\n\n\t\tstream.pipe(res);\n\t\tF.stats.response.streaming++;\n\t\tF._request_stats(false, req.isStaticFile);\n\t\tdone && done();\n\t\t!req.isStaticFile && F.emit('request-end', req, res);\n\t});\n\n\treturn F;\n};\n\n/**\n * Responds with a binary\n * @param {Request} req\n * @param {Response} res\n * @param {String} contentType\n * @param {Buffer} buffer\n * @param {Encoding} type Default: \"binary\", optioanl\n * @param {String} download Optional, download name.\n * @param {Object} headers Optional\n * @return {Framework}\n */\nFramework.prototype.responseBinary = function(req, res, contentType, buffer, encoding, download, headers, done) {\n\n\tif (res.success || res.headersSent) {\n\t\tdone && done();\n\t\treturn F;\n\t}\n\n\tif (!encoding)\n\t\tencoding = 'binary';\n\n\tif (contentType.lastIndexOf('/') === -1)\n\t\tcontentType = U.getContentType(contentType);\n\n\tvar accept = req.headers['accept-encoding'] || '';\n\n\tif (!accept && isGZIP(req))\n\t\taccept = 'gzip';\n\n\tvar compress = F.config['allow-gzip'] && REQUEST_COMPRESS_CONTENTTYPE[contentType] && accept.indexOf('gzip') !== -1;\n\tvar returnHeaders = compress ? HEADERS['responseBinary.compress'] : HEADERS['responseBinary'];\n\n\treturnHeaders['Vary'] = 'Accept-Encoding' + (req.$mobile ? ', User-Agent' : '');\n\n\tif (headers)\n\t\treturnHeaders = U.extend_headers(returnHeaders, headers);\n\n\tif (download)\n\t\treturnHeaders['Content-Disposition'] = 'attachment; filename=' + encodeURIComponent(download);\n\telse if (returnHeaders['Content-Disposition'])\n\t\tdelete returnHeaders['Content-Disposition'];\n\n\treturnHeaders[RESPONSE_HEADER_CONTENTTYPE] = contentType;\n\n\tF.stats.response.binary++;\n\tF._request_stats(false, req.isStaticFile);\n\n\tif (req.method === 'HEAD') {\n\t\tres.writeHead(200, returnHeaders);\n\t\tres.end();\n\t\tdone && done();\n\t\t!req.isStaticFile && F.emit('request-end', req, res);\n\t\treq.clear(true);\n\t\treturn F;\n\t}\n\n\tif (compress) {\n\t\tres.writeHead(200, returnHeaders);\n\t\tZlib.gzip(encoding === 'binary' ? buffer : buffer.toString(encoding), (err, buffer) => res.end(buffer));\n\t\tdone && done();\n\t\t!req.isStaticFile && F.emit('request-end', req, res);\n\t\treturn F;\n\t}\n\n\tres.writeHead(200, returnHeaders);\n\tres.end(encoding === 'binary' ? buffer : buffer.toString(encoding));\n\n\tdone && done();\n\t!req.isStaticFile && F.emit('request-end', req, res);\n\treq.clear(true);\n\treturn F;\n};\n\nFramework.prototype.setModified = function(req, res, value) {\n\tif (typeof(value) === 'string')\n\t\tres.setHeader('Etag', value + F.config['etag-version']);\n\telse\n\t\tres.setHeader('Last-Modified', value.toUTCString());\n\treturn F;\n};\n\nFramework.prototype.notModified = function(req, res, compare, strict) {\n\n\tvar type = typeof(compare);\n\tif (type === 'boolean') {\n\t\tvar tmp = compare;\n\t\tcompare = strict;\n\t\tstrict = tmp;\n\t\ttype = typeof(compare);\n\t}\n\n\tvar isEtag = type === 'string';\n\tvar val = req.headers[isEtag ? 'if-none-match' : 'if-modified-since'];\n\n\tif (isEtag) {\n\t\tif (val !== (compare + F.config['etag-version']))\n\t\t\treturn false;\n\t} else {\n\n\t\tif (!val)\n\t\t\treturn false;\n\n\t\tvar date = compare === undefined ? new Date().toUTCString() : compare.toUTCString();\n\t\tif (strict) {\n\t\t\tif (new Date(Date.parse(val)) === new Date(date))\n\t\t\t\treturn false;\n\t\t} else {\n\t\t\tif (new Date(Date.parse(val)) < new Date(date))\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\tres.success = true;\n\tres.writeHead(304);\n\tres.end();\n\n\tF.stats.response.notModified++;\n\tF._request_stats(false, req.isStaticFile);\n\t!req.isStaticFile && F.emit('request-end', req, res);\n\treturn true;\n};\n\nFramework.prototype.responseCode = function(req, res, code, problem) {\n\tproblem && F.problem(problem, 'response' + code + '()', req.uri, req.ip);\n\tif (res.success || res.headersSent)\n\t\treturn F;\n\n\tF._request_stats(false, req.isStaticFile);\n\tres.success = true;\n\tres.writeHead(code, HEADERS['responseCode']);\n\n\tif (req.method === 'HEAD')\n\t\tres.end();\n\telse\n\t\tres.end(U.httpStatus(code));\n\n\t!req.isStaticFile && F.emit('request-end', req, res);\n\treq.clear(true);\n\tvar key = 'error' + code;\n\tF.emit(key, req, res, problem);\n\tF.stats.response[key]++;\n\treturn F;\n};\n\nFramework.prototype.response400 = function(req, res, problem) {\n\treturn F.responseCode(req, res, 400, problem);\n};\n\nFramework.prototype.response401 = function(req, res, problem) {\n\treturn F.responseCode(req, res, 401, problem);\n};\n\nFramework.prototype.response403 = function(req, res, problem) {\n\treturn F.responseCode(req, res, 403, problem);\n};\n\nFramework.prototype.response404 = function(req, res, problem) {\n\treturn F.responseCode(req, res, 404, problem);\n};\n\nFramework.prototype.response408 = function(req, res, problem) {\n\treturn F.responseCode(req, res, 408, problem);\n};\n\nFramework.prototype.response431 = function(req, res, problem) {\n\treturn F.responseCode(req, res, 431, problem);\n};\n\nFramework.prototype.response500 = function(req, res, error) {\n\terror && F.error(error, null, req.uri);\n\tif (res.success || res.headersSent)\n\t\treturn F;\n\n\tF._request_stats(false, req.isStaticFile);\n\tres.success = true;\n\tres.writeHead(500, HEADERS['responseCode']);\n\n\tif (req.method === 'HEAD')\n\t\tres.end();\n\telse\n\t\tres.end(U.httpStatus(500) + prepare_error(error));\n\n\t!req.isStaticFile && F.emit('request-end', req, res);\n\treq.clear(true);\n\tF.stats.response.error500++;\n\treturn F;\n};\n\nFramework.prototype.response501 = function(req, res, problem) {\n\treturn F.responseCode(req, res, 501, problem);\n};\n\nFramework.prototype.response503 = function(req, res) {\n\tvar keys = '';\n\tvar headers = {};\n\theaders[RESPONSE_HEADER_CACHECONTROL] = 'private, no-cache, no-store, must-revalidate';\n\theaders[RESPONSE_HEADER_CONTENTTYPE] = CONTENTTYPE_TEXTHTML;\n\tres.writeHead(503, headers);\n\tfor (var m in F.waits)\n\t\tkeys += (keys ? ', ' : '') + '<u>' + m + '</u>';\n\tres.end('<html><head><meta charset=\"utf-8\" /></head><body style=\"font:normal normal 11px Arial;color:gray;line-height:16px;padding:10px;background-color:white\"><div style=\"font-size:14px;color:#505050\">Please wait (<span id=\"time\">10</span>) for <b>' + (F.config.name + ' v' + F.config.version) + '</b> application.</div>The application is waiting for: ' + keys + '.<script>var i=10;setInterval(function(){i--;if(i<0)return;document.getElementById(\"time\").innerHTML=(i===0?\"refreshing\":i);if(i===0)window.location.reload();},1000);</script></body></html>', ENCODING);\n\treturn F;\n};\n\n/**\n * Response content\n * @param {Request} req\n * @param {Response} res\n * @param {Number} code Status code.\n * @param {String} contentBody Content body.\n * @param {String} contentType Content type.\n * @param {Boolean} compress GZIP compression.\n * @param {Object} headers Custom headers.\n * @return {Framework}\n */\nFramework.prototype.responseContent = function(req, res, code, contentBody, contentType, compress, headers) {\n\tif (res.success || res.headersSent)\n\t\treturn F;\n\n\tres.success = true;\n\n\tvar accept = req.headers['accept-encoding'] || '';\n\n\tif (!accept && isGZIP(req))\n\t\taccept = 'gzip';\n\n\tvar gzip = compress ? accept.indexOf('gzip') !== -1 : false;\n\tvar returnHeaders;\n\n\tif (req.$mobile)\n\t\treturnHeaders = gzip ? HEADERS['responseContent.mobile.compress'] : HEADERS['responseContent.mobile'];\n\telse\n\t\treturnHeaders = gzip ? HEADERS['responseContent.compress'] : HEADERS.responseContent;\n\n\tif (headers)\n\t\treturnHeaders = U.extend_headers(returnHeaders, headers);\n\n\t// Safari resolve\n\tif (contentType === 'application/json')\n\t\treturnHeaders[RESPONSE_HEADER_CACHECONTROL] = 'private, no-cache, no-store, must-revalidate';\n\telse\n\t\treturnHeaders[RESPONSE_HEADER_CACHECONTROL] = 'private';\n\n\tif (REG_TEXTAPPLICATION.test(contentType))\n\t\tcontentType += '; charset=utf-8';\n\n\treturnHeaders[RESPONSE_HEADER_CONTENTTYPE] = contentType;\n\n\tif (req.method === 'HEAD') {\n\t\tres.writeHead(code, returnHeaders);\n\t\tres.end();\n\t} else {\n\t\tif (gzip) {\n\t\t\tres.writeHead(code, returnHeaders);\n\t\t\tZlib.gzip(contentBody instanceof Buffer ? contentBody : U.createBuffer(contentBody), (err, data) => res.end(data, ENCODING));\n\t\t} else {\n\t\t\tres.writeHead(code, returnHeaders);\n\t\t\tres.end(contentBody, ENCODING);\n\t\t}\n\t}\n\n\tF._request_stats(false, req.isStaticFile);\n\t!req.isStaticFile && F.emit('request-end', req, res);\n\treq.clear(true);\n\treturn F;\n};\n\n/**\n * Response Redirect\n * @param {Request} req\n * @param {Response} res\n * @param {String} url\n * @param {Boolean} permanent Optional.\n * @return {Framework}\n */\nFramework.prototype.responseRedirect = function(req, res, url, permanent) {\n\tif (res.success || res.headersSent)\n\t\treturn F;\n\tF._request_stats(false, req.isStaticFile);\n\tres.success = true;\n\tvar headers = HEADERS.responseRedirect;\n\theaders.Location = url;\n\tres.writeHead(permanent ? 301 : 302, headers);\n\tres.end();\n\t!req.isStaticFile && F.emit('request-end', req, res);\n\treq.clear(true);\n\treturn F;\n};\n\nFramework.prototype.load = function(debug, types, pwd) {\n\n\tif (pwd && pwd[0] === '.' && pwd.length < 4)\n\t\tF.directory = directory = U.$normalize(Path.normalize(directory + '/..'));\n\telse if (pwd)\n\t\tF.directory = directory = U.$normalize(pwd);\n\n\tF.isWorker = true;\n\tF.config.debug = debug;\n\tF.isDebug = debug;\n\n\tglobal.DEBUG = debug;\n\tglobal.RELEASE = !debug;\n\tglobal.I = global.isomorphic = F.isomorphic;\n\n\tF.$startup(function() {\n\n\t\tF._configure();\n\n\t\tif (!types || types.indexOf('versions') !== -1)\n\t\t\tF._configure_versions();\n\n\t\tif (!types || types.indexOf('workflows') !== -1)\n\t\t\tF._configure_workflows();\n\n\t\tif (!types || types.indexOf('sitemap') !== -1)\n\t\t\tF._configure_sitemap();\n\n\t\tF.cache.init();\n\t\tF.emit('init');\n\t\tF.isLoaded = true;\n\n\t\tsetTimeout(function() {\n\n\t\t\ttry {\n\t\t\t\tF.emit('load', F);\n\t\t\t\tF.emit('ready', F);\n\t\t\t} catch (err) {\n\t\t\t\tF.error(err, 'F.on(\"load/ready\")');\n\t\t\t}\n\n\t\t\tF.removeAllListeners('load');\n\t\t\tF.removeAllListeners('ready');\n\n\t\t\t// clear unnecessary items\n\t\t\tdelete F.tests;\n\t\t\tdelete F.test;\n\t\t\tdelete F.testing;\n\t\t\tdelete F.assert;\n\t\t}, 500);\n\n\t\tF.$load(types, directory);\n\t});\n\n\treturn F;\n};\n\n/**\n * Initialize framework\n * @param  {Object} http\n * @param  {Boolean} debug\n * @param  {Object} options\n * @return {Framework}\n */\nFramework.prototype.initialize = function(http, debug, options, restart) {\n\n\tif (!options)\n\t\toptions = {};\n\n\tvar port = options.port;\n\tvar ip = options.ip;\n\n\tif (options.config)\n\t\tU.copy(options.config, F.config);\n\n\tF.isHTTPS = typeof(http.STATUS_CODES) === 'undefined';\n\tif (isNaN(port) && typeof(port) !== 'string')\n\t\tport = null;\n\n\tF.config.debug = debug;\n\tF.isDebug = debug;\n\n\tglobal.DEBUG = debug;\n\tglobal.RELEASE = !debug;\n\tglobal.I = global.isomorphic = F.isomorphic;\n\n\tF._configure();\n\tF._configure_versions();\n\tF._configure_workflows();\n\tF._configure_sitemap();\n\tF.isTest && F._configure('config-test', false);\n\tF.cache.init();\n\tF.emit('init');\n\n\t// clears static files\n\tF.clear(function() {\n\n\t\tF.$load(undefined, directory);\n\n\t\tif (!port) {\n\t\t\tif (F.config['default-port'] === 'auto') {\n\t\t\t\tvar envPort = +(process.env.PORT || '');\n\t\t\t\tif (!isNaN(envPort))\n\t\t\t\t\tport = envPort;\n\t\t\t} else\n\t\t\t\tport = F.config['default-port'];\n\t\t}\n\n\t\tF.port = port || 8000;\n\n\t\tif (ip !== null) {\n\t\t\tF.ip = ip || F.config['default-ip'] || '127.0.0.1';\n\t\t\tif (F.ip === 'null' || F.ip === 'undefined' || F.ip === 'auto')\n\t\t\t\tF.ip = undefined;\n\t\t} else\n\t\t\tF.ip = undefined;\n\n\t\tif (F.ip == null)\n\t\t\tF.ip = 'auto';\n\n\t\tif (F.server) {\n\t\t\tF.server.removeAllListeners();\n\n\t\t\tObject.keys(F.connections).forEach(function(key) {\n\t\t\t\tvar item = F.connections[key];\n\t\t\t\tif (!item)\n\t\t\t\t\treturn;\n\t\t\t\titem.removeAllListeners();\n\t\t\t\titem.close();\n\t\t\t});\n\n\t\t\tF.server.close();\n\t\t}\n\n\t\tif (options.https)\n\t\t\tF.server = http.createServer(options.https, F.listener);\n\t\telse\n\t\t\tF.server = http.createServer(F.listener);\n\n\t\tF.config['allow-performance'] && F.server.on('connection', function(socket) {\n\t\t\tsocket.setNoDelay(true);\n\t\t\tsocket.setKeepAlive(true, 10);\n\t\t});\n\n\t\tF.config['allow-websocket'] && F.server.on('upgrade', F._upgrade);\n\t\tF.server.listen(F.port, F.ip === 'auto' ? undefined : F.ip);\n\t\tF.isLoaded = true;\n\n\t\tif (!process.connected || restart)\n\t\t\tF.console();\n\n\t\tsetTimeout(function() {\n\t\t\ttry {\n\t\t\t\tF.emit('load', F);\n\t\t\t\tF.emit('ready', F);\n\t\t\t} catch (err) {\n\t\t\t\tF.error(err, 'F.on(\"load/ready\")');\n\t\t\t}\n\n\t\t\tF.removeAllListeners('load');\n\t\t\tF.removeAllListeners('ready');\n\t\t\toptions.package && INSTALL('package', options.package);\n\t\t}, 500);\n\n\t\tif (F.isTest) {\n\t\t\tvar sleep = options.sleep || options.delay || 1000;\n\t\t\tglobal.TEST = true;\n\t\t\tglobal.assert = require('assert');\n\t\t\tsetTimeout(() => F.test(true, options.tests || options.test), sleep);\n\t\t\treturn F;\n\t\t}\n\n\t\tsetTimeout(function() {\n\t\t\tif (F.isTest)\n\t\t\t\treturn;\n\t\t\tdelete F.tests;\n\t\t\tdelete F.test;\n\t\t\tdelete F.testing;\n\t\t\tdelete F.assert;\n\t\t}, 5000);\n\t}, true);\n\n\treturn F;\n};\n\n/**\n * Run framework –> HTTP\n * @param  {String} mode Framework mode.\n * @param  {Object} options Framework settings.\n * @return {Framework}\n */\nFramework.prototype.http = function(mode, options) {\n\n\tif (options === undefined)\n\t\toptions = {};\n\n\tif (!options.port)\n\t\toptions.port = +process.argv[2];\n\n\treturn F.mode(require('http'), mode, options);\n};\n\n/**\n * Run framework –> HTTPS\n * @param {String} mode Framework mode.\n * @param {Object} options Framework settings.\n * @return {Framework}\n */\nFramework.prototype.https = function(mode, options) {\n\treturn F.mode(require('https'), mode, options || {});\n};\n\n/**\n * Changes the framework mode\n * @param {String} mode New mode (e.g. debug or release)\n * @return {Framework}\n */\nFramework.prototype.mode = function(http, name, options) {\n\n\tvar test = false;\n\tvar debug = false;\n\n\tif (options.directory)\n\t\tF.directory = directory = options.directory;\n\n\tif (typeof(http) === 'string') {\n\t\tswitch (http) {\n\t\t\tcase 'debug':\n\t\t\tcase 'development':\n\t\t\t\tdebug = true;\n\t\t\t\tbreak;\n\t\t}\n\t\tF.config.debug = debug;\n\t\tF.config.trace = debug;\n\t\tF.isDebug = debug;\n\t\tglobal.DEBUG = debug;\n\t\tglobal.RELEASE = !debug;\n\t\treturn F;\n\t}\n\n\tF.isWorker = false;\n\n\tswitch (name.toLowerCase().replace(/\\.|\\s/g, '-')) {\n\t\tcase 'release':\n\t\tcase 'production':\n\t\t\tbreak;\n\n\t\tcase 'debug':\n\t\tcase 'develop':\n\t\tcase 'development':\n\t\t\tdebug = true;\n\t\t\tbreak;\n\n\t\tcase 'test':\n\t\tcase 'testing':\n\t\tcase 'test-debug':\n\t\tcase 'debug-test':\n\t\tcase 'testing-debug':\n\t\t\ttest = true;\n\t\t\tdebug = true;\n\t\t\tF.isTest = true;\n\t\t\tbreak;\n\n\t\tcase 'test-release':\n\t\tcase 'release-test':\n\t\tcase 'testing-release':\n\t\tcase 'test-production':\n\t\tcase 'testing-production':\n\t\t\ttest = true;\n\t\t\tdebug = false;\n\t\t\tbreak;\n\t}\n\n\tvar restart = false;\n\tif (F.temporary.init)\n\t\trestart = true;\n\telse\n\t\tF.temporary.init = { name: name, isHTTPS: typeof(http.STATUS_CODES) === 'undefined', options: options };\n\n\tF.config.trace = debug;\n\tF.$startup(n => F.initialize(http, debug, options, restart));\n\treturn F;\n};\n\nFramework.prototype.console = function() {\n\tconsole.log('====================================================');\n\tconsole.log('PID         : ' + process.pid);\n\tconsole.log('Node.js     : ' + process.version);\n\tconsole.log('Total.js    : v' + F.version_header);\n\tconsole.log('OS          : ' + Os.platform() + ' ' + Os.release());\n\tconsole.log('====================================================');\n\tconsole.log('Name        : ' + F.config.name);\n\tconsole.log('Version     : ' + F.config.version);\n\tconsole.log('Author      : ' + F.config.author);\n\tconsole.log('Date        : ' + F.datetime.format('yyyy-MM-dd HH:mm:ss'));\n\tconsole.log('Mode        : ' + (F.config.debug ? 'debug' : 'release'));\n\tconsole.log('====================================================\\n');\n\tconsole.log('{2}://{0}:{1}/'.format(F.ip, F.port, F.isHTTPS ? 'https' : 'http'));\n\tconsole.log('');\n};\n\n/**\n * Re-connect server\n * @return {Framework}\n */\nFramework.prototype.reconnect = function() {\n\tif (F.config['default-port'] !== undefined)\n\t\tF.port = F.config['default-port'];\n\tif (F.config['default-ip'] !== undefined)\n\t\tF.ip = F.config['default-ip'];\n\tF.server.close(() => F.server.listen(F.port, F.ip));\n\treturn F;\n};\n\n/**\n * Internal service\n * @private\n * @param {Number} count Run count.\n * @return {Framework}\n */\nFramework.prototype._service = function(count) {\n\n\tUIDGENERATOR.date = F.datetime.format('yyMMddHHmm');\n\tUIDGENERATOR.index = 1;\n\n\tvar releasegc = false;\n\n\t// clears temporary memory for non-exist files\n\tF.temporary.notfound = {};\n\n\t// every 7 minutes (default) service clears static cache\n\tif (count % F.config['default-interval-clear-cache'] === 0) {\n\n\t\tF.emit('clear', 'temporary', F.temporary);\n\t\tF.temporary.path = {};\n\t\tF.temporary.range = {};\n\t\tF.temporary.views = {};\n\t\tF.temporary.other = {};\n\t\tglobal.$VIEWCACHE && global.$VIEWCACHE.length && (global.$VIEWCACHE = []);\n\n\t\t// Clears command cache\n\t\tImage.clear();\n\n\t\tvar dt = F.datetime.add('-5 minutes');\n\t\tfor (var key in F.databases)\n\t\t\tF.databases[key] && F.databases[key].inmemorylastusage < dt && F.databases[key].release();\n\n\t\treleasegc = true;\n\t}\n\n\t// every 61 minutes (default) services precompile all (installed) views\n\tif (count % F.config['default-interval-precompile-views'] === 0) {\n\t\tfor (var key in F.routes.views) {\n\t\t\tvar item = F.routes.views[key];\n\t\t\tF.install('view', key, item.url, null);\n\t\t}\n\t}\n\n\tif (count % F.config['default-interval-clear-dnscache'] === 0) {\n\t\tF.emit('clear', 'dns');\n\t\tU.clearDNS();\n\t}\n\n\tvar ping = F.config['default-interval-websocket-ping'];\n\tif (ping > 0 && count % ping === 0) {\n\t\tfor (var item in F.connections) {\n\t\t\tvar conn = F.connections[item];\n\t\t\tif (conn) {\n\t\t\t\tconn.check();\n\t\t\t\tconn.ping();\n\t\t\t}\n\t\t}\n\t}\n\n\tif (F.uptodates && (count % F.config['default-interval-uptodate'] === 0) && F.uptodates.length) {\n\t\tvar hasUpdate = false;\n\t\tF.uptodates.wait(function(item, next) {\n\n\t\t\tif (item.updated.add(item.interval) > F.datetime)\n\t\t\t\treturn next();\n\n\t\t\titem.updated = F.datetime;\n\t\t\titem.count++;\n\n\t\t\tsetTimeout(function() {\n\n\t\t\t\tF.install(item.type, item.url, item.options, function(err, name, skip) {\n\n\t\t\t\t\tif (skip)\n\t\t\t\t\t\treturn next();\n\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\titem.errors.push(err);\n\t\t\t\t\t\titem.errors.length > 50 && F.errors.shift();\n\t\t\t\t\t} else {\n\t\t\t\t\t\thasUpdate = true;\n\t\t\t\t\t\titem.name = name;\n\t\t\t\t\t\tF.emit('uptodate', item.type, name);\n\t\t\t\t\t}\n\n\t\t\t\t\titem.callback && item.callback(err, name);\n\t\t\t\t\tnext();\n\n\t\t\t\t}, undefined, undefined, undefined, undefined, item.name);\n\n\t\t\t}, item.name ? 500 : 1);\n\n\t\t}, function() {\n\t\t\tif (hasUpdate) {\n\t\t\t\tF.temporary.path = {};\n\t\t\t\tF.temporary.range = {};\n\t\t\t\tF.temporary.views = {};\n\t\t\t\tF.temporary.other = {};\n\t\t\t\tglobal.$VIEWCACHE && global.$VIEWCACHE.length && (global.$VIEWCACHE = []);\n\t\t\t}\n\t\t});\n\t}\n\n\t// every 20 minutes (default) service clears resources\n\tif (count % F.config['default-interval-clear-resources'] === 0) {\n\t\tF.emit('clear', 'resources');\n\t\tF.resources = {};\n\t\treleasegc = true;\n\t}\n\n\t// Update expires date\n\tcount % 1000 === 0 && (DATE_EXPIRES = F.datetime.add('y', 1).toUTCString());\n\n\tF.emit('service', count);\n\treleasegc && global.gc && setTimeout(() => global.gc(), 1000);\n\n\t// Run schedules\n\tif (!F.schedules.length)\n\t\treturn F;\n\n\tvar expire = F.datetime.getTime();\n\tvar index = 0;\n\n\twhile (true) {\n\t\tvar schedule = F.schedules[index++];\n\t\tif (!schedule)\n\t\t\tbreak;\n\t\tif (schedule.expire > expire)\n\t\t\tcontinue;\n\n\t\tindex--;\n\n\t\tif (schedule.repeat)\n\t\t\tschedule.expire = F.datetime.add(schedule.repeat);\n\t\telse\n\t\t\tF.schedules.splice(index, 1);\n\n\t\tschedule.fn.call(F);\n\t}\n\n\treturn F;\n};\n\n/**\n * Request processing\n * @private\n * @param {Request} req\n * @param {Response} res\n */\nFramework.prototype.listener = function(req, res) {\n\n\tif (F._length_wait)\n\t\treturn F.response503(req, res);\n\telse if (!req.host) // HTTP 1.0 without host\n\t\treturn F.response400(req, res);\n\n\tvar headers = req.headers;\n\tvar protocol = req.connection.encrypted || headers['x-forwarded-protocol'] === 'https' ? 'https' : 'http';\n\n\tres.req = req;\n\treq.res = res;\n\treq.uri = framework_internal.parseURI(protocol, req);\n\n\tF.stats.request.request++;\n\tF.emit('request', req, res);\n\n\tif (F._request_check_redirect) {\n\t\tvar redirect = F.routes.redirects[protocol + '://' + req.host];\n\t\tif (redirect) {\n\t\t\tF.stats.response.forward++;\n\t\t\tF.responseRedirect(req, res, redirect.url + (redirect.path ? req.url : ''), redirect.permanent);\n\t\t\treturn;\n\t\t}\n\t}\n\n\treq.path = framework_internal.routeSplit(req.uri.pathname);\n\treq.processing = 0;\n\treq.isAuthorized = true;\n\treq.xhr = headers['x-requested-with'] === 'XMLHttpRequest';\n\tres.success = false;\n\treq.session = null;\n\treq.user = null;\n\treq.isStaticFile = F.config['allow-handle-static-files'] && U.isStaticFile(req.uri.pathname);\n\n\tvar can = true;\n\n\tif (req.isStaticFile) {\n\t\treq.extension = U.getExtension(req.uri.pathname);\n\t\tswitch (req.extension) {\n\t\t\tcase 'html':\n\t\t\tcase 'htm':\n\t\t\tcase 'txt':\n\t\t\tcase 'md':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcan = false;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (can && F.onLocale)\n\t\treq.$language = F.onLocale(req, res, req.isStaticFile);\n\n\tF._request_stats(true, true);\n\n\tif (F._length_request_middleware)\n\t\tasync_middleware(0, req, res, F.routes.request, () => F._request_continue(res.req, res, res.req.headers, protocol));\n\telse\n\t\tF._request_continue(req, res, headers, protocol);\n};\n\n/**\n * Continue to process\n * @private\n * @param {Request} req\n * @param {Response} res\n * @param {Object} headers\n * @param {String} protocol [description]\n * @return {Framework}\n */\nFramework.prototype._request_continue = function(req, res, headers, protocol) {\n\n\tif (!req || !res || res.headersSent || res.success)\n\t\treturn;\n\n\t// Validates if this request is the file (static file)\n\tif (req.isStaticFile) {\n\t\tF.stats.request.file++;\n\t\tif (F._length_files)\n\t\t\tnew Subscribe(F, req, res, 3).file();\n\t\telse\n\t\t\tF.responseStatic(req, res);\n\t\treturn F;\n\t}\n\n\treq.body = EMPTYOBJECT;\n\treq.files = EMPTYARRAY;\n\treq.isProxy = headers['x-proxy'] === 'total.js';\n\treq.buffer_exceeded = false;\n\treq.buffer_has = false;\n\treq.$flags = req.method[0] + req.method[1];\n\tF.stats.request.web++;\n\n\tvar flags = [req.method.toLowerCase()];\n\tvar multipart = req.headers['content-type'] || '';\n\n\tif (req.mobile) {\n\t\treq.$flags += 'a';\n\t\tF.stats.request.mobile++;\n\t} else\n\t\tF.stats.request.desktop++;\n\n\tif (protocol[5])\n\t\treq.$flags += protocol[5];\n\n\treq.$type = 0;\n\tflags.push(protocol);\n\n\tvar method = req.method;\n\tvar first = method[0];\n\tif (first === 'P' || first === 'D') {\n\t\treq.buffer_data = U.createBuffer();\n\t\tvar index = multipart.lastIndexOf(';');\n\t\tvar tmp = multipart;\n\t\tif (index !== -1)\n\t\t\ttmp = tmp.substring(0, index);\n\t\tswitch (tmp.substring(tmp.length - 4)) {\n\t\t\tcase 'json':\n\t\t\t\treq.$flags += 'b';\n\t\t\t\tflags.push('json');\n\t\t\t\treq.$type = 1;\n\t\t\t\tmultipart = '';\n\t\t\t\tbreak;\n\t\t\tcase 'oded':\n\t\t\t\treq.$type = 3;\n\t\t\t\tmultipart = '';\n\t\t\t\tbreak;\n\t\t\tcase 'data':\n\t\t\t\treq.$flags += 'c';\n\t\t\t\tflags.push('upload');\n\t\t\t\tbreak;\n\t\t\tcase '/xml':\n\t\t\t\treq.$flags += 'd';\n\t\t\t\tflags.push('xml');\n\t\t\t\treq.$type = 2;\n\t\t\t\tmultipart = '';\n\t\t\t\tbreak;\n\t\t\tcase 'lace':\n\t\t\t\treq.$type = 4;\n\t\t\t\tflags.push('mmr');\n\t\t\t\treq.$flags += 'e';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif (multipart) {\n\t\t\t\t\t// 'undefined' DATA\n\t\t\t\t\tmultipart = '';\n\t\t\t\t\tflags.push('raw');\n\t\t\t\t} else {\n\t\t\t\t\treq.$type = 3;\n\t\t\t\t\tmultipart = '';\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (req.isProxy) {\n\t\treq.$flags += 'f';\n\t\tflags.push('proxy');\n\t}\n\n\tif (headers.accept === 'text/event-stream') {\n\t\treq.$flags += 'g';\n\t\tflags.push('sse');\n\t}\n\n\tif (F.config.debug) {\n\t\treq.$flags += 'h';\n\t\tflags.push('debug');\n\t}\n\n\tif (req.xhr) {\n\t\tF.stats.request.xhr++;\n\t\treq.$flags += 'i';\n\t\tflags.push('xhr');\n\t}\n\n\tif (F._request_check_robot && req.robot)\n\t\treq.$flags += 'j';\n\n\tif (F._request_check_referer) {\n\t\tvar referer = headers['referer'];\n\t\tif (referer && referer.indexOf(headers['host']) !== -1) {\n\t\t\treq.$flags += 'k';\n\t\t\tflags.push('referer');\n\t\t}\n\t}\n\n\treq.flags = flags;\n\tF.emit('request-begin', req, res);\n\n\tvar isCORS = req.headers['origin'] && F._length_cors;\n\n\tswitch (first) {\n\t\tcase 'G':\n\t\t\tF.stats.request.get++;\n\t\t\tif (isCORS)\n\t\t\t\tF._cors(req, res, (req, res) => new Subscribe(framework, req, res, 0).end());\n\t\t\telse\n\t\t\t\tnew Subscribe(F, req, res, 0).end();\n\t\t\treturn F;\n\n\t\tcase 'O':\n\t\t\tF.stats.request.options++;\n\t\t\tif (isCORS)\n\t\t\t\tF._cors(req, res, (req, res) => new Subscribe(framework, req, res, 0).end());\n\t\t\telse\n\t\t\t\tnew Subscribe(framework, req, res, 0).end();\n\t\t\treturn F;\n\n\t\tcase 'H':\n\t\t\tF.stats.request.head++;\n\t\t\tif (isCORS)\n\t\t\t\tF._cors(req, res, (req, res) => new Subscribe(framework, req, res, 0).end());\n\t\t\telse\n\t\t\t\tnew Subscribe(F, req, res, 0).end();\n\t\t\treturn F;\n\n\t\tcase 'D':\n\t\t\tF.stats.request['delete']++;\n\t\t\tif (isCORS)\n\t\t\t\tF._cors(req, res, (req, res) => new Subscribe(framework, req, res, 1).urlencoded());\n\t\t\telse\n\t\t\t\tnew Subscribe(F, req, res, 1).urlencoded();\n\t\t\treturn F;\n\n\t\tcase 'P':\n\t\t\tif (F._request_check_POST) {\n\n\t\t\t\tif (multipart) {\n\n\t\t\t\t\tif (isCORS)\n\t\t\t\t\t\tF._cors(req, res, (req, res, multipart) => req.$type === 4 ? F._request_mmr(req, res, multipart) : new Subscribe(F, req, res, 2).multipart(multipart), multipart);\n\t\t\t\t\telse if (req.$type === 4)\n\t\t\t\t\t\tF._request_mmr(req, res, multipart);\n\t\t\t\t\telse\n\t\t\t\t\t\tnew Subscribe(F, req, res, 2).multipart(multipart);\n\n\t\t\t\t\treturn F;\n\n\t\t\t\t} else {\n\t\t\t\t\tif (method === 'PUT')\n\t\t\t\t\t\tF.stats.request.put++;\n\t\t\t\t\telse if (method === 'PATCH')\n\t\t\t\t\t\tF.stats.request.path++;\n\t\t\t\t\telse\n\t\t\t\t\t\tF.stats.request.post++;\n\t\t\t\t\tif (isCORS)\n\t\t\t\t\t\tF._cors(req, res, (req, res) => new Subscribe(F, req, res, 1).urlencoded());\n\t\t\t\t\telse\n\t\t\t\t\t\tnew Subscribe(F, req, res, 1).urlencoded();\n\t\t\t\t}\n\n\t\t\t\treturn F;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\n\tF.emit('request-end', req, res);\n\tF._request_stats(false, false);\n\tF.stats.request.blocked++;\n\tres.writeHead(403);\n\tres.end();\n\treturn F;\n};\n\nFramework.prototype._request_mmr = function(req, res, header) {\n\tvar route = F.routes.mmr[req.url];\n\tF.stats.request.mmr++;\n\n\tif (route) {\n\t\tF.path.verify('temp');\n\t\tframework_internal.parseMULTIPART_MIXED(req, header, F.config['directory-temp'], route.exec);\n\t\treturn;\n\t}\n\n\tF.emit('request-end', req, res);\n\tF._request_stats(false, false);\n\tF.stats.request.blocked++;\n\tres.writeHead(403);\n\tres.end();\n};\n\nFramework.prototype._cors = function(req, res, fn, arg) {\n\n\tvar isAllowed = false;\n\tvar cors;\n\n\tfor (var i = 0; i < F._length_cors; i++) {\n\t\tcors = F.routes.cors[i];\n\t\tif (framework_internal.routeCompare(req.path, cors.url, false, cors.isASTERIX)) {\n\t\t\tisAllowed = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (!isAllowed)\n\t\treturn fn(req, res, arg);\n\n\tvar stop = false;\n\tvar headers = req.headers;\n\n\tif (!isAllowed)\n\t\tstop = true;\n\n\tisAllowed = false;\n\n\tif (!stop && cors.headers) {\n\t\tisAllowed = false;\n\t\tfor (var i = 0, length = cors.headers.length; i < length; i++) {\n\t\t\tif (headers[cors.headers[i]]) {\n\t\t\t\tisAllowed = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!isAllowed)\n\t\t\tstop = true;\n\t}\n\n\tif (!stop && cors.methods) {\n\t\tisAllowed = false;\n\t\tvar current = headers['access-control-request-method'] || req.method;\n\t\tif (current !== 'OPTIONS') {\n\t\t\tfor (var i = 0, length = cors.methods.length; i < length; i++) {\n\t\t\t\tif (current.indexOf(cors.methods[i]) !== -1)\n\t\t\t\t\tisAllowed = true;\n\t\t\t}\n\n\t\t\tif (!isAllowed)\n\t\t\t\tstop = true;\n\t\t}\n\t}\n\n\tvar origin = headers['origin'].toLowerCase();\n\tif (!stop && cors.origins) {\n\t\tisAllowed = false;\n\t\tfor (var i = 0, length = cors.origins.length; i < length; i++) {\n\t\t\tif (cors.origins[i].indexOf(origin) !== -1) {\n\t\t\t\tisAllowed = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!isAllowed)\n\t\t\tstop = true;\n\t}\n\n\tvar name\n\tvar isOPTIONS = req.method === 'OPTIONS';\n\n\tres.setHeader('Access-Control-Allow-Origin', cors.origins ? cors.origins : cors.credentials ? isAllowed ? origin : cors.origins ? cors.origins : origin : headers['origin']);\n\tcors.credentials && res.setHeader('Access-Control-Allow-Credentials', 'true');\n\n\tname = 'Access-Control-Allow-Methods';\n\n\tif (cors.methods)\n\t\tres.setHeader(name, cors.methods.join(', '));\n\telse\n\t\tres.setHeader(name, isOPTIONS ? headers['access-control-request-method'] || '*' : req.method);\n\n\tname = 'Access-Control-Allow-Headers';\n\n\tif (cors.headers)\n\t\tres.setHeader(name, cors.headers.join(', '));\n\telse\n\t\tres.setHeader(name, headers['access-control-request-headers'] || '*');\n\n\tcors.age && res.setHeader('Access-Control-Max-Age', cors.age);\n\n\tif (stop) {\n\t\tfn = null;\n\t\tF.emit('request-end', req, res);\n\t\tF._request_stats(false, false);\n\t\tF.stats.request.blocked++;\n\t\tres.writeHead(404);\n\t\tres.end();\n\t\treturn;\n\t}\n\n\tif (!isOPTIONS)\n\t\treturn fn(req, res, arg);\n\n\tfn = null;\n\tF.emit('request-end', req, res);\n\tF._request_stats(false, false);\n\tres.writeHead(200);\n\tres.end();\n\treturn F;\n};\n\n/**\n * Upgrade HTTP (WebSocket)\n * @param {HttpRequest} req\n * @param {Socket} socket\n * @param {Buffer} head\n */\nFramework.prototype._upgrade = function(req, socket, head) {\n\n\tif ((req.headers.upgrade || '').toLowerCase() !== 'websocket')\n\t\treturn;\n\n\t// disables timeout\n\tsocket.setTimeout(0);\n\tsocket.on('error', NOOP);\n\n\tvar headers = req.headers;\n\tvar protocol = req.connection.encrypted || headers['x-forwarded-protocol'] === 'https' ? 'https' : 'http';\n\n\treq.uri = framework_internal.parseURI(protocol, req);\n\n\tF.emit('websocket', req, socket, head);\n\tF.stats.request.websocket++;\n\n\treq.session = null;\n\treq.user = null;\n\treq.flags = [req.secured ? 'https' : 'http', 'get'];\n\n\tvar path = U.path(req.uri.pathname);\n\tvar websocket = new WebSocketClient(req, socket, head);\n\n\treq.path = framework_internal.routeSplit(req.uri.pathname);\n\treq.websocket = websocket;\n\n\tif (F.onLocale)\n\t\treq.$language = F.onLocale(req, socket);\n\n\tif (F._length_request_middleware)\n\t\tasync_middleware(0, req, req.websocket, F.routes.request, () => F._upgrade_prepare(req, path, req.headers));\n\telse\n\t\tF._upgrade_prepare(req, path, headers);\n};\n\n/**\n * Prepare WebSocket\n * @private\n * @param {HttpRequest} req\n * @param {WebSocketClient} websocket\n * @param {String} path\n * @param {Object} headers\n */\nFramework.prototype._upgrade_prepare = function(req, path, headers) {\n\tvar auth = F.onAuthorize;\n\tif (auth) {\n\t\tauth.call(F, req, req.websocket, req.flags, function(isLogged, user) {\n\n\t\t\tif (user)\n\t\t\t\treq.user = user;\n\n\t\t\tvar route = F.lookup_websocket(req, req.websocket.uri.pathname, isLogged ? 1 : 2);\n\t\t\tif (route) {\n\t\t\t\tF._upgrade_continue(route, req, path);\n\t\t\t} else {\n\t\t\t\treq.websocket.close();\n\t\t\t\treq.connection.destroy();\n\t\t\t}\n\t\t});\n\t} else {\n\t\tvar route = F.lookup_websocket(req, req.websocket.uri.pathname, 0);\n\t\tif (route) {\n\t\t\tF._upgrade_continue(route, req, path);\n\t\t} else {\n\t\t\treq.websocket.close();\n\t\t\treq.connection.destroy();\n\t\t}\n\t}\n};\n\n/**\n * Prepare WebSocket\n * @private\n * @param {HttpRequest} req\n * @param {WebSocketClient} websocket\n * @param {String} path\n * @param {Object} headers\n */\nFramework.prototype._upgrade_continue = function(route, req, path) {\n\n\tvar socket = req.websocket;\n\n\tif (!socket.prepare(route.flags, route.protocols, route.allow, route.length, F.version_header)) {\n\t\tsocket.close();\n\t\treq.connection.destroy();\n\t\treturn;\n\t}\n\n\tvar id = path + (route.flags.length ? '#' + route.flags.join('-') : '');\n\n\tif (route.isBINARY)\n\t\tsocket.type = 1;\n\telse if (route.isJSON)\n\t\tsocket.type = 3;\n\n\tvar next = function() {\n\n\t\tif (F.connections[id]) {\n\t\t\tsocket.upgrade(F.connections[id]);\n\t\t\treturn;\n\t\t}\n\n\t\tvar connection = new WebSocket(path, route.controller, id);\n\t\tconnection.route = route;\n\t\tconnection.options = route.options;\n\t\tF.connections[id] = connection;\n\t\troute.onInitialize.apply(connection, framework_internal.routeParam(route.param.length ? req.split : req.path, route));\n\t\tsetImmediate(() => socket.upgrade(connection));\n\t};\n\n\tif (route.middleware)\n\t\tasync_middleware(0, req, req.websocket, route.middleware, next, route.options);\n\telse\n\t\tnext();\n};\n\n/**\n * Request statistics writer\n * @private\n * @param {Boolean} beg\n * @param {Boolean} isStaticFile\n * @return {Framework}\n */\nFramework.prototype._request_stats = function(beg, isStaticFile) {\n\n\tif (beg)\n\t\tF.stats.request.pending++;\n\telse\n\t\tF.stats.request.pending--;\n\n\tif (F.stats.request.pending < 0)\n\t\tF.stats.request.pending = 0;\n\n\treturn F;\n};\n\n/**\n * Get a model\n * @param {String} name\n * @return {Object}\n */\nFramework.prototype.model = function(name) {\n\tvar obj = F.models[name];\n\tif (obj || obj === null)\n\t\treturn obj;\n\tvar filename = U.combine(F.config['directory-models'], name + '.js');\n\texistsSync(filename) && F.install('model', name, filename, undefined, undefined, undefined, true);\n\treturn F.models[name] || null;\n};\n\n/**\n * Load a source code\n * @param {String} name\n * @param {Object} options Custom initial options, optional.\n * @return {Object}\n */\nFramework.prototype.source = function(name, options, callback) {\n\tvar obj = F.sources[name];\n\tif (obj || obj === null)\n\t\treturn obj;\n\tvar filename = U.combine(F.config['directory-source'], name + '.js');\n\texistsSync(filename) && F.install('source', name, filename, options, callback, undefined, true);\n\treturn F.sources[name] || null;\n};\n\n/**\n * Load a source code (alias for F.source())\n * @param {String} name\n * @param {Object} options Custom initial options, optional.\n * @return {Object}\n */\nFramework.prototype.include = function(name, options, callback) {\n\treturn F.source(name, options, callback);\n};\n\n/**\n * Internal logger\n * @private\n * @param {String} message\n * @return {Framework}\n */\nFramework.prototype._log = function(a, b, c, d) {\n\n\tif (RELEASE)\n\t\treturn false;\n\n\tvar length = arguments.length;\n\tvar params = ['---->'];\n\n\tfor (var i = 0; i < length; i++)\n\t\tparams.push(arguments[i]);\n\n\tsetTimeout(() => console.log.apply(console, params), 1000);\n};\n\n/**\n * Send e-mail\n * @param {String or Array} address E-mail address.\n * @param {String} subject E-mail subject.\n * @param {String} view View name.\n * @param {Object} model Optional.\n * @param {Function(err)} callback Optional.\n * @param {String} language Optional.\n * @return {MailMessage}\n */\nFramework.prototype.mail = function(address, subject, view, model, callback, language) {\n\n\tif (typeof(callback) === 'string') {\n\t\tvar tmp = language;\n\t\tlanguage = callback;\n\t\tcallback = tmp;\n\t}\n\n\tvar controller = EMPTYCONTROLLER;\n\tcontroller.layoutName = '';\n\tcontroller.themeName = U.parseTheme(view);\n\n\tif (controller.themeName)\n\t\tview = prepare_viewname(view);\n\telse if (this.onTheme)\n\t\tcontroller.themeName = this.onTheme(controller);\n\telse\n\t\tcontroller.themeName = '';\n\n\tvar replyTo;\n\n\t// Translation\n\tif (typeof(language) === 'string') {\n\t\tsubject = subject.indexOf('@(') === -1 ? F.translate(language, subject) : F.translator(language, subject);\n\t\tcontroller.language = language;\n\t}\n\n\tif (typeof(repository) === 'object' && repository)\n\t\tcontroller.repository = repository;\n\n\treturn controller.mail(address, subject, view, model, callback, replyTo);\n};\n\n/**\n * Renders view\n * @param {String} name View name.\n * @param {Object} model Model.\n * @param {String} layout Layout for the view, optional. Default without layout.\n * @param {Object} repository A repository object, optional. Default empty.\n * @param {String} language Optional.\n * @return {String}\n */\nFramework.prototype.view = function(name, model, layout, repository, language) {\n\n\tvar controller = EMPTYCONTROLLER;\n\n\tif (typeof(layout) === 'object') {\n\t\tvar tmp = repository;\n\t\trepository = layout;\n\t\tlayout = tmp;\n\t}\n\n\tcontroller.layoutName = layout || '';\n\tcontroller.language = language || '';\n\tcontroller.repository = typeof(repository) === 'object' && repository ? repository : EMPTYOBJECT;\n\n\tvar theme = U.parseTheme(name);\n\tif (theme) {\n\t\tcontroller.themeName = theme;\n\t\tname = prepare_viewname(name);\n\t} else if (this.onTheme)\n\t\tcontroller.themeName = this.onTheme(controller);\n\telse\n\t\tcontroller.themeName = undefined;\n\n\treturn controller.view(name, model, true);\n};\n\n/**\n * Compiles and renders view\n * @param {String} body HTML body.\n * @param {Object} model Model.\n * @param {String} layout Layout for the view, optional. Default without layout.\n * @param {Object} repository A repository object, optional. Default empty.\n * @param {String} language Optional.\n * @return {String}\n */\nFramework.prototype.viewCompile = function(body, model, layout, repository, language) {\n\n\tvar controller = EMPTYCONTROLLER;\n\n\tif (typeof(layout) === 'object') {\n\t\tvar tmp = repository;\n\t\trepository = layout;\n\t\tlayout = tmp;\n\t}\n\n\tcontroller.layoutName = layout || '';\n\tcontroller.language = language || '';\n\tcontroller.themeName = undefined;\n\tcontroller.repository = typeof(repository) === 'object' && repository ? repository : EMPTYOBJECT;\n\n\treturn controller.viewCompile(body, model, true);\n};\n\n/**\n * Add a test function or test request\n * @param {String} name Test name.\n * @param {Url or Function} url Url or Callback function(next, name) {}.\n * @param {Array} flags Routed flags (GET, POST, PUT, XHR, JSON ...).\n * @param {Function} callback Callback.\n * @param {Object or String} data Request data.\n * @param {Object} cookies Request cookies.\n * @param {Object} headers Additional headers.\n * @return {Framework}\n */\nFramework.prototype.assert = function(name, url, flags, callback, data, cookies, headers) {\n\n\t// !IMPORTANT! F.testsPriority is created dynamically in F.test()\n\tif (typeof(url) === 'function') {\n\t\tF.tests.push({ name: _test + ': ' + name, priority: F.testsPriority, index: F.tests.length, run: url });\n\t\treturn F;\n\t}\n\n\tvar method = 'GET';\n\tvar length = 0;\n\tvar type = 0;\n\n\tif (headers)\n\t\theaders = U.extend({}, headers);\n\telse\n\t\theaders = {};\n\n\tif (flags instanceof Array) {\n\t\tlength = flags.length;\n\t\tfor (var i = 0; i < length; i++) {\n\n\t\t\tswitch (flags[i].toLowerCase()) {\n\n\t\t\t\tcase 'xhr':\n\t\t\t\t\theaders['X-Requested-With'] = 'XMLHttpRequest';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'referer':\n\t\t\t\tcase 'referrer':\n\t\t\t\t\theaders['Referer'] = url;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'json':\n\t\t\t\t\theaders['Content-Type'] = 'application/json';\n\t\t\t\t\ttype = 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'xml':\n\t\t\t\t\theaders['Content-Type'] = 'text/xml';\n\t\t\t\t\ttype = 2;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'get':\n\t\t\t\tcase 'head':\n\t\t\t\tcase 'options':\n\t\t\t\t\tmethod = flags[i].toUpperCase();\n\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tif (typeof(data) === 'object')\n\t\t\t\t\t\t\turl += '?' + Qs.stringify(data);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\turl += data[0] === '?' ? data : '?' + data;\n\t\t\t\t\t\tdata = '';\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'upload':\n\t\t\t\t\theaders['Content-Type'] = 'multipart/form-data';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'robot':\n\t\t\t\t\tif (headers['User-Agent'])\n\t\t\t\t\t\theaders['User-Agent'] += ' Bot';\n\t\t\t\t\telse\n\t\t\t\t\t\theaders['User-Agent'] = 'Bot';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'mobile':\n\t\t\t\t\tif (headers['User-Agent'])\n\t\t\t\t\t\theaders['User-Agent'] += ' iPhone';\n\t\t\t\t\telse\n\t\t\t\t\t\theaders['User-Agent'] = 'iPhone';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'post':\n\t\t\t\tcase 'put':\n\t\t\t\tcase 'delete':\n\n\t\t\t\t\tmethod = flags[i].toUpperCase();\n\n\t\t\t\t\tif (!headers['Content-Type'])\n\t\t\t\t\t\theaders['Content-Type'] = 'application/x-www-form-urlencoded';\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'raw':\n\t\t\t\t\theaders['Content-Type'] = 'application/octet-stream';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\t\t}\n\t}\n\n\theaders['X-Assertion-Testing'] = '1';\n\n\tif (cookies) {\n\t\tvar builder = [];\n\t\tvar keys = Object.keys(cookies);\n\n\t\tlength = keys.length;\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tbuilder.push(keys[i] + '=' + encodeURIComponent(cookies[keys[i]]));\n\n\t\tif (builder.length)\n\t\t\theaders['Cookie'] = builder.join('; ');\n\t}\n\n\tvar obj = { name: _test + ': ' + name, priority: F.testsPriority, index: F.tests.length, url: url, callback: callback, method: method, data: data, headers: headers };\n\tF.tests.push(obj);\n\treturn F;\n};\n\n/**\n * Test in progress\n * @private\n * @param {Boolean} stop Stop application.\n * @param {Function} callback Callback.\n * @return {Framework}\n */\nFramework.prototype.testing = function(stop, callback) {\n\n\tif (stop === undefined)\n\t\tstop = true;\n\n\n\t// !IMPORTANT! F.isTestError is created dynamically\n\t//             F.testsFiles too\n\n\tif (!F.tests.length) {\n\n\t\tif (!F.testsFiles.length) {\n\t\t\tcallback && callback(F.isTestError === true);\n\t\t\tstop && F.stop(F.isTestError ? 1 : 0);\n\t\t\treturn F;\n\t\t}\n\n\t\tvar file = F.testsFiles.shift();\n\t\tfile && file.fn.call(F, F);\n\t\tF.testing(stop, callback);\n\t\treturn F;\n\t}\n\n\tvar logger = function(name, start, err) {\n\n\t\tvar time = Math.floor(new Date() - start) + ' ms';\n\n\t\tif (err) {\n\t\t\tF.isTestError = true;\n\t\t\tconsole.error('Failed [x] '.padRight(20, '.') + ' ' + name + ' <' + (err.name.toLowerCase().indexOf('assert') !== -1 ? err.toString() : err.stack) + '> [' + time + ']');\n\t\t} else\n\t\t\tconsole.info('Passed '.padRight(20, '.') + ' ' + name + ' [' + time + ']');\n\t};\n\n\tvar test = F.tests.shift();\n\tvar key = test.name;\n\tvar beg = new Date();\n\n\tif (test.run) {\n\n\t\t// Is used in: process.on('uncaughtException')\n\t\tF.testContinue = function(err) {\n\t\t\tlogger(key, beg, err);\n\t\t\tif (err)\n\t\t\t\tF.testsNO++;\n\t\t\telse\n\t\t\t\tF.testsOK++;\n\t\t\tF.testing(stop, callback);\n\t\t};\n\n\t\ttest.run.call(F, function() {\n\t\t\tlogger(key, beg);\n\t\t\tF.testsOK++;\n\t\t\tF.testing(stop, callback);\n\t\t}, key);\n\n\t\treturn F;\n\t}\n\n\tvar response = function(res) {\n\n\t\tres.on('data', function(chunk) {\n\t\t\tif (this._buffer)\n\t\t\t\tthis._buffer = Buffer.concat([this._buffer, chunk]);\n\t\t\telse\n\t\t\t\tthis._buffer = chunk;\n\t\t});\n\n\t\tres.on('end', function() {\n\n\t\t\tres.removeAllListeners();\n\n\t\t\tvar cookie = res.headers['cookie'] || '';\n\t\t\tvar cookies = {};\n\n\t\t\tif (cookie.length) {\n\n\t\t\t\tvar arr = cookie.split(';');\n\t\t\t\tvar length = arr.length;\n\n\t\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\t\tvar c = arr[i].trim().split('=');\n\t\t\t\t\tcookies[c.shift()] = unescape(c.join('='));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\ttest.callback(null, this._buffer ? this._buffer.toString(ENCODING) : '', res.statusCode, res.headers, cookies, key);\n\t\t\t\tlogger(key, beg);\n\t\t\t\tF.testsOK++;\n\t\t\t} catch (e) {\n\t\t\t\tF.testsNO++;\n\t\t\t\tlogger(key, beg, e);\n\t\t\t}\n\n\t\t\tF.testing(stop, callback);\n\t\t});\n\n\t\tres.resume();\n\t};\n\n\tvar options = Parser.parse((test.url.startsWith('http://', true) || test.url.startsWith('https://', true) ? '' : 'http://' + F.ip + ':' + F.port) + test.url);\n\tif (typeof(test.data) === 'function')\n\t\ttest.data = test.data();\n\n\tif (typeof(test.data) !== 'string')\n\t\ttest.data = (test.headers[RESPONSE_HEADER_CONTENTTYPE] || '').indexOf('json') !== -1 ? JSON.stringify(test.data) : Qs.stringify(test.data);\n\n\tvar buf;\n\n\tif (test.data && test.data.length) {\n\t\tbuf = U.createBuffer(test.data);\n\t\ttest.headers[RESPONSE_HEADER_CONTENTLENGTH] = buf.length;\n\t}\n\n\toptions.method = test.method;\n\toptions.headers = test.headers;\n\n\tvar con = options.protocol === 'https:' ? require('https') : http;\n\tvar req = test.method === 'POST' || test.method === 'PUT' || test.method === 'DELETE' || test.method === 'PATCH' ? con.request(options, response) : con.get(options, response);\n\n\treq.on('error', function(e) {\n\t\treq.removeAllListeners();\n\t\tlogger(key, beg, e);\n\t\tF.testsNO++;\n\t\tF.testing(stop, callback);\n\t});\n\n\treq.end(buf);\n\treturn F;\n};\n\n/**\n * Load tests\n * @private\n * @param {Boolean} stop Stop framework after end.\n * @param {String Array} names Test names, optional.\n * @param {Function()} cb\n * @return {Framework}\n */\nFramework.prototype.test = function(stop, names, cb) {\n\n\tif (stop === undefined)\n\t\tstop = true;\n\n\tif (typeof(names) === 'function') {\n\t\tcb = names;\n\t\tnames = [];\n\t} else\n\t\tnames = names || [];\n\n\tvar counter = 0;\n\tvar dir = F.config['directory-tests'];\n\tF.isTest = true;\n\tF._configure('config-test', true);\n\n\tvar logger = function(name, start, err) {\n\t\tvar time = Math.floor(new Date() - start) + ' ms';\n\t\tif (err) {\n\t\t\tF.isTestError = true;\n\t\t\tconsole.error('Failed [x] '.padRight(20, '.') + ' ' + name + ' <' + (err.name.toLowerCase().indexOf('assert') !== -1 ? err.toString() : err.stack) + '> [' + time + ']');\n\t\t} else\n\t\t\tconsole.info('Passed '.padRight(20, '.') + ' ' + name + ' [' + time + ']');\n\t};\n\n\tvar results = function() {\n\t\tif (!F.testsResults.length)\n\t\t\treturn;\n\t\tconsole.log('');\n\t\tconsole.log('===================== RESULTS ======================');\n\t\tconsole.log('');\n\t\tF.testsResults.forEach((fn) => fn());\n\t};\n\n\tF.testsFiles = [];\n\n\tif (!F.testsResults)\n\t\tF.testsResults = [];\n\n\tif (!F.testsOK)\n\t\tF.testsOK = 0;\n\n\tif (!F.testsNO)\n\t\tF.testsNO = 0;\n\n\tU.ls(U.combine(dir), function(files) {\n\t\tfiles.forEach(function(filePath) {\n\t\t\tvar name = Path.relative(U.combine(dir), filePath);\n\t\t\tvar filename = filePath;\n\t\t\tvar ext = U.getExtension(filename).toLowerCase();\n\t\t\tif (ext !== 'js')\n\t\t\t\treturn;\n\n\t\t\tif (names.length && names.indexOf(name.substring(0, name.length - 3)) === -1)\n\t\t\t\treturn;\n\n\t\t\tvar test = require(filename);\n\t\t\tvar beg = new Date();\n\n\t\t\ttry {\n\t\t\t\tvar isRun = test.run !== undefined;\n\t\t\t\tvar isInstall = test.isInstall !== undefined;\n\t\t\t\tvar isInit = test.init !== undefined;\n\t\t\t\tvar isLoad = test.load !== undefined;\n\n\t\t\t\t_test = name;\n\n\t\t\t\tif (test.disabled === true)\n\t\t\t\t\treturn;\n\n\t\t\t\tF.testsPriority = test.priority === undefined ? F.testsFiles.length : test.priority;\n\t\t\t\tvar fn = null;\n\n\t\t\t\tif (isRun)\n\t\t\t\t\tfn = test.run;\n\t\t\t\telse if (isInstall)\n\t\t\t\t\tfn = test.install;\n\t\t\t\telse if (isInit)\n\t\t\t\t\tfn = test.init;\n\t\t\t\telse if (isLoad)\n\t\t\t\t\tfn = test.loadname;\n\n\t\t\t\tif (fn === null)\n\t\t\t\t\treturn;\n\n\t\t\t\tF.testsFiles.push({ name: name, index: F.testsFiles.length, fn: fn, priority: F.testsPriority });\n\n\t\t\t\ttest.usage && (function(test) {\n\t\t\t\t\tF.testsResults.push(() => test.usage(name));\n\t\t\t\t})(test);\n\n\t\t\t\tcounter++;\n\n\t\t\t} catch (ex) {\n\t\t\t\tlogger('Failed', beg, ex);\n\t\t\t}\n\t\t});\n\n\t\t_test = '';\n\n\t\tF.testsFiles.sort(function(a, b) {\n\n\t\t\tif (a.priority > b.priority)\n\t\t\t\treturn 1;\n\n\t\t\tif (a.priority < b.priority)\n\t\t\t\treturn -1;\n\n\t\t\tif (a.index > b.index)\n\t\t\t\treturn 1;\n\n\t\t\tif (a.index < b.index)\n\t\t\t\treturn -1;\n\n\t\t\treturn 0;\n\t\t});\n\n\t\tsetTimeout(function() {\n\t\t\tconsole.log('===================== TESTING ======================');\n\t\t\tcounter && console.log('');\n\t\t\tF.testing(stop, function() {\n\n\t\t\t\tconsole.log('');\n\t\t\t\tconsole.log('Passed ...', F.testsOK);\n\t\t\t\tconsole.log('Failed ...', F.testsNO);\n\t\t\t\tconsole.log('');\n\n\t\t\t\tresults();\n\t\t\t\tF.isTest = false;\n\t\t\t\tconsole.log('');\n\t\t\t\tcb && cb();\n\t\t\t});\n\t\t}, 100);\n\t});\n\n\treturn F;\n};\n\n/**\n * Clear temporary directory\n * @param {Function} callback\n * @param {Boolean} isInit Private argument.\n * @return {Framework}\n */\nFramework.prototype.clear = function(callback, isInit) {\n\n\tvar dir = F.path.temp();\n\tvar plus = F.id ? 'i-' + F.id + '_' : '';\n\n\tif (isInit) {\n\t\tif (F.config['disable-clear-temporary-directory']) {\n\t\t\t// clears only JS and CSS files\n\t\t\tU.ls(dir, function(files, directories) {\n\t\t\t\tF.unlink(files, function() {\n\t\t\t\t\tcallback && callback();\n\t\t\t\t});\n\t\t\t}, function(filename, folder) {\n\t\t\t\tif (folder || (plus && !filename.substring(dir.length).startsWith(plus)))\n\t\t\t\t\treturn false;\n\t\t\t\tvar ext = U.getExtension(filename);\n\t\t\t\treturn ext === 'js' || ext === 'css' || ext === 'tmp' || ext === 'upload' || ext === 'html' || ext === 'htm';\n\t\t\t});\n\n\t\t\treturn F;\n\t\t}\n\t}\n\n\tif (!existsSync(dir)) {\n\t\tcallback && callback();\n\t\treturn F;\n\t}\n\n\tU.ls(dir, function(files, directories) {\n\n\t\tif (isInit) {\n\t\t\tvar arr = [];\n\t\t\tfor (var i = 0, length = files.length; i < length; i++) {\n\t\t\t\tvar filename = files[i].substring(dir.length);\n\t\t\t\tif (plus && !filename.startsWith(plus))\n\t\t\t\t\tcontinue;\n\t\t\t\tfilename.indexOf('/') === -1 && !filename.endsWith('.jsoncache') && arr.push(files[i]);\n\t\t\t}\n\t\t\tfiles = arr;\n\t\t\tdirectories = [];\n\t\t}\n\n\t\tF.unlink(files, function() {\n\t\t\tF.rmdir(directories, callback);\n\t\t});\n\t});\n\n\tif (!isInit) {\n\t\t// clear static cache\n\t\tF.temporary.path = {};\n\t\tF.temporary.range = {};\n\t\tF.temporary.notfound = {};\n\t}\n\n\treturn F;\n};\n\n/**\n * Remove files in array\n * @param {String Array} arr File list.\n * @param {Function} callback\n * @return {Framework}\n */\nFramework.prototype.unlink = function(arr, callback) {\n\n\tif (typeof(arr) === 'string')\n\t\tarr = [arr];\n\n\tif (!arr.length) {\n\t\tcallback && callback();\n\t\treturn F;\n\t}\n\n\tvar filename = arr.shift();\n\tif (filename)\n\t\tFs.unlink(filename, (err) => F.unlink(arr, callback));\n\telse\n\t\tcallback && callback();\n\n\treturn F;\n};\n\n/**\n * Remove directories in array\n * @param {String Array} arr\n * @param {Function} callback\n * @return {Framework}\n */\nFramework.prototype.rmdir = function(arr, callback) {\n\tif (typeof(arr) === 'string')\n\t\tarr = [arr];\n\n\tif (!arr.length) {\n\t\tcallback && callback();\n\t\treturn F;\n\t}\n\n\tvar path = arr.shift();\n\tif (path)\n\t\tFs.rmdir(path, () => F.rmdir(arr, callback));\n\telse\n\t\tcallback && callback();\n\n\treturn F;\n};\n\n/**\n * Cryptography (encrypt)\n * @param {String} value\n * @param {String} key Encrypt key.\n * @param {Boolean} isUnique Optional, default true.\n * @return {String}\n */\nFramework.prototype.encrypt = function(value, key, isUnique) {\n\n\tif (value === undefined)\n\t\treturn '';\n\n\tvar type = typeof(value);\n\n\tif (typeof(key) === 'boolean') {\n\t\tvar tmp = isUnique;\n\t\tisUnique = key;\n\t\tkey = tmp;\n\t}\n\n\tif (type === 'function')\n\t\tvalue = value();\n\telse if (type === 'number')\n\t\tvalue = value.toString();\n\telse if (type === 'object')\n\t\tvalue = JSON.stringify(value);\n\n\treturn value.encrypt(F.config.secret + '=' + key, isUnique);\n};\n\n/**\n * Cryptography (decrypt)\n * @param {String} value\n * @param {String} key Decrypt key.\n * @param {Boolean} jsonConvert Optional, default true.\n * @return {Object or String}\n */\nFramework.prototype.decrypt = function(value, key, jsonConvert) {\n\n\tif (typeof(key) === 'boolean') {\n\t\tvar tmp = jsonConvert;\n\t\tjsonConvert = key;\n\t\tkey = tmp;\n\t}\n\n\tif (typeof(jsonConvert) !== 'boolean')\n\t\tjsonConvert = true;\n\n\tvar response = (value || '').decrypt(F.config.secret + '=' + key);\n\tif (!response)\n\t\treturn null;\n\n\tif (jsonConvert) {\n\t\tif (response.isJSON()) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(response);\n\t\t\t} catch (ex) {}\n\t\t}\n\t\treturn null;\n\t}\n\n\treturn response;\n};\n\n/**\n * Create hash\n * @param {String} type Type (md5, sha1, sha256, etc.)\n * @param {String} value\n * @param {String} salt Optional, default false.\n * @return {String}\n */\nFramework.prototype.hash = function(type, value, salt) {\n\tvar hash = Crypto.createHash(type);\n\tvar plus = '';\n\n\tif (typeof(salt) === 'string')\n\t\tplus = salt;\n\telse if (salt !== false)\n\t\tplus = (F.config.secret || '');\n\n\thash.update(value.toString() + plus, ENCODING);\n\treturn hash.digest('hex');\n};\n\n/**\n * Resource reader\n * @param {String} name Optional, resource file name. Default: \"default\".\n * @param {String} key Resource key.\n * @return {String} String\n */\nFramework.prototype.resource = function(name, key) {\n\n\tif (!key) {\n\t\tkey = name;\n\t\tname = null;\n\t}\n\n\tif (!name)\n\t\tname = 'default';\n\n\tvar res = F.resources[name];\n\tif (res)\n\t\treturn res[key] || '';\n\n\tvar routes = F.routes.resources[name];\n\tvar body = '';\n\tvar filename;\n\tif (routes) {\n\t\tfor (var i = 0, length = routes.length; i < length; i++) {\n\t\t\tfilename = routes[i];\n\t\t\tif (existsSync(filename))\n\t\t\t\tbody += (body ? '\\n' : '') + Fs.readFileSync(filename).toString(ENCODING);\n\t\t}\n\t}\n\n\tvar filename = U.combine(F.config['directory-resources'], name + '.resource');\n\tif (existsSync(filename))\n\t\tbody += (body ? '\\n' : '') + Fs.readFileSync(filename).toString(ENCODING);\n\n\tvar obj = body.parseConfig();\n\tF.resources[name] = obj;\n\treturn obj[key] || '';\n};\n\n/**\n * Translates text\n * @param {String} language A resource filename, optional.\n * @param {String} text\n * @return {String}\n */\nFramework.prototype.translate = function(language, text) {\n\n\tif (!text) {\n\t\ttext = language;\n\t\tlanguage = undefined;\n\t}\n\n\tif (text[0] === '#' && text[1] !== ' ')\n\t\treturn F.resource(language, text.substring(1));\n\n\tvar value = F.resource(language, 'T' + text.hash());\n\treturn value ? value : text;\n};\n\n/**\n * The translator for the text from the View Engine @(TEXT TO TRANSLATE)\n * @param {String} language A resource filename, optional.\n * @param {String} text\n * @return {String}\n */\nFramework.prototype.translator = function(language, text) {\n\treturn framework_internal.parseLocalization(text, language);\n};\n\nFramework.prototype._configure_sitemap = function(arr, clean) {\n\n\tif (!arr || typeof(arr) === 'string') {\n\t\tvar filename = prepare_filename(arr || 'sitemap');\n\t\tif (existsSync(filename, true))\n\t\t\tarr = Fs.readFileSync(filename).toString(ENCODING).split('\\n');\n\t\telse\n\t\t\tarr = null;\n\t}\n\n\tif (!arr || !arr.length)\n\t\treturn F;\n\n\tif (clean || !F.routes.sitemap)\n\t\tF.routes.sitemap = {};\n\n\tfor (var i = 0, length = arr.length; i < length; i++) {\n\n\t\tvar str = arr[i];\n\t\tif (!str || str[0] === '#' || str.substring(0, 3) === '// ')\n\t\t\tcontinue;\n\n\t\tvar index = str.indexOf(' :');\n\t\tif (index === -1) {\n\t\t\tindex = str.indexOf('\\t:');\n\t\t\tif (index === -1)\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tvar key = str.substring(0, index).trim();\n\t\tvar val = str.substring(index + 2).trim();\n\t\tvar a = val.split('-->');\n\t\tvar url = a[1].trim();\n\t\tvar wildcard = false;\n\n\t\tif (url.endsWith('*')) {\n\t\t\twildcard = true;\n\t\t\turl = url.substring(0, url.length - 1);\n\t\t}\n\n\t\tvar name = a[0].trim();\n\t\tvar localizeName = name.startsWith('@(');\n\t\tvar localizeUrl = url.startsWith('@(');\n\n\t\tif (localizeName)\n\t\t\tname = name.substring(2, name.length - 1).trim();\n\n\t\tif (localizeUrl)\n\t\t\turl = url.substring(2, url.length - 1).trim();\n\n\t\tF.routes.sitemap[key] = { name: name, url: url, parent: a[2] ? a[2].trim() : null, wildcard: wildcard, formatName: name.indexOf('{') !== -1, formatUrl: url.indexOf('{') !== -1, localizeName: localizeName, localizeUrl: localizeUrl };\n\t}\n\n\treturn F;\n};\n\nFramework.prototype.sitemap = function(name, me, language) {\n\n\tif (!F.routes.sitemap)\n\t\treturn EMPTYARRAY;\n\n\tif (typeof(me) === 'string') {\n\t\tlanguage = me;\n\t\tme = false;\n\t}\n\n\tvar key = REPOSITORY_SITEMAP + name + '$' + (me ? '1' : '0') + '$' + (language || '');\n\n\tif (F.temporary.other[key])\n\t\treturn F.temporary.other[key];\n\n\tvar sitemap;\n\tvar id = name;\n\tvar url;\n\tvar title;\n\n\tif (me === true) {\n\t\tsitemap = F.routes.sitemap[name];\n\t\tvar item = { sitemap: id, id: '', name: '', url: '', last: true, selected: true, index: 0, wildcard: false, formatName: false, formatUrl: false };\n\t\tif (!sitemap)\n\t\t\treturn item;\n\n\t\ttitle = sitemap.name;\n\t\tif (sitemap.localizeName)\n\t\t\ttitle = F.translate(language, title);\n\n\t\turl = sitemap.url;\n\t\tif (sitemap.localizeUrl)\n\t\t\turl = F.translate(language, url);\n\n\t\titem.sitemap = id;\n\t\titem.id = name;\n\t\titem.formatName = sitemap.formatName;\n\t\titem.formatUrl = sitemap.formatUrl;\n\t\titem.localizeUrl = sitemap.localizeUrl;\n\t\titem.localizeName = sitemap.localizeName;\n\t\titem.name = title;\n\t\titem.url = url;\n\t\titem.wildcard = sitemap.wildcard;\n\t\tF.temporary.other[key] = item;\n\t\treturn item;\n\t}\n\n\tvar arr = [];\n\tvar index = 0;\n\n\twhile (true) {\n\t\tsitemap = F.routes.sitemap[name];\n\t\tif (!sitemap)\n\t\t\tbreak;\n\n\t\ttitle = sitemap.name;\n\t\turl = sitemap.url;\n\n\t\tif (sitemap.localizeName)\n\t\t\ttitle = F.translate(language, sitemap.name);\n\n\t\tif (sitemap.localizeUrl)\n\t\t\turl = F.translate(language, url);\n\n\t\tarr.push({ sitemap: id, id: name, name: title, url: url, last: index === 0, first: sitemap.parent ? false : true, selected: index === 0, index: index, wildcard: sitemap.wildcard, formatName: sitemap.formatName, formatUrl: sitemap.formatUrl, localizeName: sitemap.localizeName, localizeUrl: sitemap.localizeUrl });\n\t\tindex++;\n\t\tname = sitemap.parent;\n\t\tif (!name)\n\t\t\tbreak;\n\t}\n\n\tarr.reverse();\n\tF.temporary.other[key] = arr;\n\treturn arr;\n};\n\n/**\n * Gets a list of all items in sitemap\n * @param {String} parent\n * @param {String} language Optional, language\n * @return {Array}\n */\nFramework.prototype.sitemap_navigation = function(parent, language) {\n\n\tvar key = REPOSITORY_SITEMAP + '_n_' + (parent || '') + '$' + (language || '');;\n\tif (F.temporary.other[key])\n\t\treturn F.temporary.other[key];\n\n\tvar keys = Object.keys(F.routes.sitemap);\n\tvar arr = [];\n\tvar index = 0;\n\n\tfor (var i = 0, length = keys.length; i < length; i++) {\n\t\tvar item = F.routes.sitemap[keys[i]];\n\t\tif ((parent && item.parent !== parent) || (!parent && item.parent))\n\t\t\tcontinue;\n\n\t\tvar title = item.name;\n\t\tvar url = item.url;\n\n\t\tif (item.localizeName)\n\t\t\ttitle = F.translate(language, title);\n\n\t\tif (item.localizeUrl)\n\t\t\turl = F.translate(language, url);\n\n\t\tarr.push({ id: parent || '', name: title, url: url, last: index === 0, first: item.parent ? false : true, selected: index === 0, index: index, wildcard: item.wildcard, formatName: item.formatName, formatUrl: item.formatUrl });\n\t\tindex++;\n\t}\n\n\tarr.quicksort('name');\n\tF.temporary.other[key] = arr;\n\treturn arr;\n};\n\n/**\n * Adds an item(s) to sitemap\n * @param {String|Array} obj - 'ID : Title ---> URL --> [Parent]' parent is optional\n * @return {framework}\n */\nFramework.prototype.sitemap_add = function (obj) {\n    F._configure_sitemap(typeof(obj) === 'array' ? obj : [obj]);\n    return F;\n};\n\nFramework.prototype._configure_dependencies = function(arr) {\n\n\tif (!arr || typeof(arr) === 'string') {\n\t\tvar filename = prepare_filename(arr || 'dependencies');\n\t\tif (existsSync(filename, true))\n\t\t\tarr = Fs.readFileSync(filename).toString(ENCODING).split('\\n');\n\t\telse\n\t\t\tarr = null;\n\t}\n\n\tif (!arr)\n\t\treturn F;\n\n\tvar type;\n\tvar options;\n\tvar interval;\n\n\tfor (var i = 0, length = arr.length; i < length; i++) {\n\n\t\tvar str = arr[i];\n\n\t\tif (!str || str[0] === '#' || str.substring(0, 3) === '// ')\n\t\t\tcontinue;\n\n\t\tvar index = str.indexOf(' :');\n\t\tif (index === -1) {\n\t\t\tindex = str.indexOf('\\t:');\n\t\t\tif (index === -1)\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tvar key = str.substring(0, index).trim();\n\t\tvar url = str.substring(index + 2).trim();\n\n\t\toptions = undefined;\n\t\tinterval = undefined;\n\n\t\tindex = key.indexOf('(');\n\t\tif (index !== -1) {\n\t\t\tinterval = key.substring(index, key.indexOf(')', index)).replace(/\\(|\\)/g, '').trim();\n\t\t\tkey = key.substring(0, index).trim();\n\t\t}\n\n\t\tindex = url.indexOf('-->');\n\t\tif (index !== -1) {\n\t\t\tvar opt = url.substring(index + 3).trim();\n\t\t\tif (opt.isJSON())\n\t\t\t\toptions = JSON.parse(opt);\n\t\t\turl = url.substring(0, index).trim();\n\t\t}\n\n\t\tswitch (key) {\n\t\t\tcase 'package':\n\t\t\tcase 'packages':\n\t\t\tcase 'pkg':\n\t\t\t\ttype = 'package';\n\t\t\t\tbreak;\n\t\t\tcase 'module':\n\t\t\tcase 'modules':\n\t\t\t\ttype = 'module';\n\t\t\t\tbreak;\n\t\t\tcase 'model':\n\t\t\tcase 'models':\n\t\t\t\ttype = 'model';\n\t\t\t\tbreak;\n\t\t\tcase 'source':\n\t\t\tcase 'sources':\n\t\t\t\ttype = 'source';\n\t\t\t\tbreak;\n\t\t\tcase 'controller':\n\t\t\tcase 'controllers':\n\t\t\t\ttype = 'controller';\n\t\t\t\tbreak;\n\t\t\tcase 'view':\n\t\t\tcase 'views':\n\t\t\t\ttype = 'view';\n\t\t\t\tbreak;\n\t\t\tcase 'version':\n\t\t\tcase 'versions':\n\t\t\t\ttype = 'version';\n\t\t\t\tbreak;\n\t\t\tcase 'config':\n\t\t\tcase 'configuration':\n\t\t\t\ttype = 'config';\n\t\t\t\tbreak;\n\t\t\tcase 'isomorphic':\n\t\t\tcase 'isomorphics':\n\t\t\t\ttype = 'isomorphic';\n\t\t\t\tbreak;\n\t\t\tcase 'definition':\n\t\t\tcase 'definitions':\n\t\t\t\ttype = 'definition';\n\t\t\t\tbreak;\n\t\t\tcase 'middleware':\n\t\t\tcase 'middlewares':\n\t\t\t\ttype = 'middleware';\n\t\t\t\tbreak;\n\t\t\tcase 'component':\n\t\t\tcase 'components':\n\t\t\t\ttype = 'component';\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (type) {\n\t\t\tif (interval)\n\t\t\t\tF.uptodate(type, url, options, interval);\n\t\t\telse\n\t\t\t\tF.install(type, url, options);\n\t\t}\n\t}\n\n\treturn F;\n};\n\nFramework.prototype._configure_workflows = function(arr, clean) {\n\n\tif (arr === undefined || typeof(arr) === 'string') {\n\t\tvar filename = prepare_filename(arr || 'workflows');\n\t\tif (existsSync(filename, true))\n\t\t\tarr = Fs.readFileSync(filename).toString(ENCODING).split('\\n');\n\t\telse\n\t\t\tarr = null;\n\t}\n\n\tif (clean)\n\t\tF.workflows = {};\n\n\tif (!arr || !arr.length)\n\t\treturn F;\n\n\tarr.forEach(function(line) {\n\t\tline = line.trim();\n\t\tif (line.startsWith('//'))\n\t\t\treturn;\n\t\tvar index = line.indexOf(':');\n\t\tif (index === -1)\n\t\t\treturn;\n\n\t\tvar key = line.substring(0, index).trim();\n\t\tvar response = -1;\n\t\tvar builder = [];\n\n\t\t// sub-type\n\t\tvar subindex = key.indexOf('(');\n\t\tif (subindex !== -1) {\n\t\t\tvar type = key.substring(subindex + 1, key.indexOf(')', subindex + 1)).trim();\n\t\t\tkey = key.substring(0, subindex).trim();\n\t\t\ttype = type.replace(/^default\\//gi, '');\n\t\t\tkey = type + '#' + key;\n\t\t}\n\n\t\tline.substring(index + 1).split('-->').forEach(function(operation, index) {\n\t\t\toperation = operation.trim().replace(/\\\"/g, '\\'');\n\n\t\t\tif (operation.endsWith('(response)')) {\n\t\t\t\tresponse = index;\n\t\t\t\toperation = operation.replace('(response)', '').trim();\n\t\t\t}\n\n\t\t\tvar what = operation.split(':');\n\t\t\tif (what.length === 2)\n\t\t\t\tbuilder.push('$' + what[0].trim() + '(' + what[1].trim() + ', options)');\n\t\t\telse\n\t\t\t\tbuilder.push('$' + what[0] + '(options)');\n\t\t});\n\n\t\tF.workflows[key] = new Function('model', 'options', 'callback', 'return model.$async(callback' + (response === -1 ? '' : ', ' + response) + ').' + builder.join('.') + ';');\n\t});\n\n\treturn F;\n};\n\nFramework.prototype._configure_versions = function(arr, clean) {\n\n\tif (arr === undefined || typeof(arr) === 'string') {\n\t\tvar filename = prepare_filename(arr || 'versions');\n\t\tif (existsSync(filename, true))\n\t\t\tarr = Fs.readFileSync(filename).toString(ENCODING).split('\\n');\n\t\telse\n\t\t\tarr = null;\n\t}\n\n\tif (!arr) {\n\t\tif (clean)\n\t\t\tF.versions = null;\n\t\treturn F;\n\t}\n\n\tif (!clean)\n\t\tF.versions = {};\n\n\tif (!F.versions)\n\t\tF.versions = {};\n\n\tfor (var i = 0, length = arr.length; i < length; i++) {\n\n\t\tvar str = arr[i];\n\n\t\tif (!str || str[0] === '#' || str.substring(0, 3) === '// ')\n\t\t\tcontinue;\n\n\t\tif (str[0] !== '/')\n\t\t\tstr = '/' + str;\n\n\t\tvar index = str.indexOf(' :');\n\t\tvar ismap = false;\n\n\t\tif (index === -1) {\n\t\t\tindex = str.indexOf('\\t:');\n\t\t\tif (index === -1) {\n\t\t\t\tindex = str.indexOf('-->');\n\t\t\t\tif (index === -1)\n\t\t\t\t\tcontinue;\n\t\t\t\tismap = true;\n\t\t\t}\n\t\t}\n\n\t\tvar len = ismap ? 3 : 2;\n\t\tvar key = str.substring(0, index).trim();\n\t\tvar filename = str.substring(index + len).trim();\n\t\tF.versions[key] = filename;\n\t\tismap && F.map(filename, F.path.public(key));\n\t}\n\n\treturn F;\n};\n\nFramework.prototype._configure = function(arr, rewrite) {\n\n\tvar type = typeof(arr);\n\tif (type === 'string') {\n\t\tvar filename = prepare_filename(arr);\n\t\tif (!existsSync(filename, true))\n\t\t\treturn F;\n\t\tarr = Fs.readFileSync(filename).toString(ENCODING).split('\\n');\n\t}\n\n\tif (!arr) {\n\n\t\tvar filenameA = U.combine('/', 'config');\n\t\tvar filenameB = U.combine('/', 'config-' + (F.config.debug ? 'debug' : 'release'));\n\n\t\tarr = [];\n\n\t\t// read all files from \"configs\" directory\n\t\tvar configs = F.path.configs();\n\t\tif (existsSync(configs)) {\n\t\t\tvar tmp = Fs.readdirSync(configs);\n\t\t\tfor (var i = 0, length = tmp.length; i < length; i++) {\n\t\t\t\tvar skip = tmp[i].match(/\\-(debug|release|test)$/i);\n\t\t\t\tif (skip) {\n\t\t\t\t\tskip = skip[0].toString().toLowerCase();\n\t\t\t\t\tif (skip === '-debug' && !F.isDebug)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (skip === '-release' && F.isDebug)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (skip === '-test' && !F.isTest)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tarr = arr.concat(Fs.readFileSync(configs + tmp[i]).toString(ENCODING).split('\\n'));\n\t\t\t}\n\t\t}\n\n\t\tif (existsSync(filenameA) && Fs.lstatSync(filenameA).isFile())\n\t\t\tarr = arr.concat(Fs.readFileSync(filenameA).toString(ENCODING).split('\\n'));\n\n\t\tif (existsSync(filenameB) && Fs.lstatSync(filenameB).isFile())\n\t\t\tarr = arr.concat(Fs.readFileSync(filenameB).toString(ENCODING).split('\\n'));\n\t}\n\n\tvar done = function() {\n\t\tprocess.title = 'total: ' + F.config.name.removeDiacritics().toLowerCase().replace(REG_EMPTY, '-').substring(0, 8);\n\t\tF.isVirtualDirectory = existsSync(U.combine(F.config['directory-public-virtual']));\n\t};\n\n\tif (!arr instanceof Array || !arr.length) {\n\t\tdone();\n\t\treturn F;\n\t}\n\n\tif (rewrite === undefined)\n\t\trewrite = true;\n\n\tvar obj = {};\n\tvar accepts = null;\n\tvar length = arr.length;\n\tvar tmp;\n\tvar subtype;\n\tvar value;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar str = arr[i];\n\n\t\tif (!str || str[0] === '#' || (str[0] === '/' || str[1] === '/'))\n\t\t\tcontinue;\n\n\t\tvar index = str.indexOf(':');\n\t\tif (index === -1)\n\t\t\tcontinue;\n\n\t\tvar name = str.substring(0, index).trim();\n\t\tif (name === 'debug' || name === 'resources')\n\t\t\tcontinue;\n\n\t\tvalue = str.substring(index + 1).trim();\n\t\tindex = name.indexOf('(');\n\n\t\tif (index !== -1) {\n\t\t\tsubtype = name.substring(index + 1, name.indexOf(')')).trim().toLowerCase();\n\t\t\tname = name.substring(0, index).trim();\n\t\t} else\n\t\t\tsubtype = '';\n\n\t\tswitch (name) {\n\t\t\tcase 'default-cors-maxage':\n\t\t\tcase 'default-request-length':\n\t\t\tcase 'default-websocket-request-length':\n\t\t\tcase 'default-request-timeout':\n\t\t\tcase 'default-interval-clear-cache':\n\t\t\tcase 'default-interval-clear-resources':\n\t\t\tcase 'default-interval-precompile-views':\n\t\t\tcase 'default-interval-uptodate':\n\t\t\tcase 'default-interval-websocket-ping':\n\t\t\tcase 'default-maximum-file-descriptors':\n\t\t\tcase 'default-interval-clear-dnscache':\n\t\t\t\tobj[name] = U.parseInt(value);\n\t\t\t\tbreak;\n\n\t\t\tcase 'static-accepts-custom':\n\t\t\t\taccepts = value.replace(REG_ACCEPTCLEANER, '').split(',');\n\t\t\t\tbreak;\n\n\t\t\tcase 'default-root':\n\t\t\t\tif (value)\n\t\t\t\t\tobj[name] = U.path(value);\n\t\t\t\tbreak;\n\n\t\t\tcase 'static-accepts':\n\t\t\t\tobj[name] = {};\n\t\t\t\ttmp = value.replace(REG_ACCEPTCLEANER, '').split(',');\n\t\t\t\tfor (var j = 0; j < tmp.length; j++)\n\t\t\t\t\tobj[name][tmp[j].substring(1)] = true;\n\t\t\t\tbreak;\n\n\t\t\tcase 'allow-gzip':\n\t\t\tcase 'allow-websocket':\n\t\t\tcase 'allow-performance':\n\t\t\tcase 'allow-compile-html':\n\t\t\tcase 'allow-compile-style':\n\t\t\tcase 'allow-compile-script':\n\t\t\tcase 'disable-strict-server-certificate-validation':\n\t\t\tcase 'disable-clear-temporary-directory':\n\t\t\tcase 'trace':\n\t\t\tcase 'allow-cache-snapshot':\n\t\t\t\tobj[name] = value.toLowerCase() === 'true' || value === '1' || value === 'on';\n\t\t\t\tbreak;\n\n\t\t\tcase 'allow-compress-html':\n\t\t\t\tobj['allow-compile-html'] = value.toLowerCase() === 'true' || value === '1' || value === 'on';\n\t\t\t\tbreak;\n\n\t\t\tcase 'version':\n\t\t\t\tobj[name] = value;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tif (subtype === 'string')\n\t\t\t\t\tobj[name] = value;\n\t\t\t\telse if (subtype === 'number' || subtype === 'currency' || subtype === 'float' || subtype === 'double')\n\t\t\t\t\tobj[name] = value.isNumber(true) ? value.parseFloat() : value.parseInt();\n\t\t\t\telse if (subtype === 'boolean' || subtype === 'bool')\n\t\t\t\t\tobj[name] = value.parseBoolean();\n\t\t\t\telse if (subtype === 'eval' || subtype === 'object' || subtype === 'array') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tobj[name] = new Function('return ' + value)();\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tF.error(e, 'F.configure(' + name + ')');\n\t\t\t\t\t}\n\t\t\t\t} else if (subtype === 'json')\n\t\t\t\t\tobj[name] = value.parseJSON();\n\t\t\t\telse if (subtype === 'date' || subtype === 'datetime' || subtype === 'time')\n\t\t\t\t\tobj[name] = value.parseDate();\n\t\t\t\telse if (subtype === 'env' || subtype === 'environment')\n\t\t\t\t\tobj[name] = process.env[value];\n\t\t\t\telse\n\t\t\t\t\tobj[name] = value.isNumber() ? U.parseInt(value) : value.isNumber(true) ? U.parseFloat(value) : value.isBoolean() ? value.toLowerCase() === 'true' : value;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tU.extend(F.config, obj, rewrite);\n\n\tif (!F.config['directory-temp'])\n\t\tF.config['directory-temp'] = '~' + U.path(Path.join(Os.tmpdir(), 'totaljs' + F.directory.hash()));\n\n\tif (!F.config['etag-version'])\n\t\tF.config['etag-version'] = F.config.version.replace(/\\.|\\s/g, '');\n\n\tif (F.config['default-timezone'])\n\t\tprocess.env.TZ = F.config['default-timezone'];\n\n\taccepts && accepts.length && accepts.forEach(accept => F.config['static-accepts'][accept] = true);\n\n\tif (F.config['disable-strict-server-certificate-validation'] === true)\n\t\tprocess.env.NODE_TLS_REJECT_UNAUTHORIZED = '0';\n\n\tif (F.config['allow-performance'])\n\t\thttp.globalAgent.maxSockets = 9999;\n\n\tvar xpowered = F.config['default-xpoweredby'];\n\n\tObject.keys(HEADERS).forEach(function(key) {\n\t\tObject.keys(HEADERS[key]).forEach(function(subkey) {\n\t\t\tif (subkey === 'Cache-Control')\n\t\t\t\tHEADERS[key][subkey] = HEADERS[key][subkey].replace(/max-age=\\d+/, 'max-age=' + F.config['default-response-maxage']);\n\t\t\tif (subkey === 'X-Powered-By') {\n\t\t\t\tif (xpowered)\n\t\t\t\t\tHEADERS[key][subkey] = xpowered;\n\t\t\t\telse\n\t\t\t\t\tdelete HEADERS[key][subkey];\n\n\t\t\t}\n\t\t});\n\t});\n\n\tIMAGEMAGICK = F.config['default-image-converter'] === 'im';\n\tdone();\n\tF.emit('configure', F.config);\n\treturn F;\n};\n\n/**\n * Create URL: JavaScript (according to config['static-url-script'])\n * @param {String} name\n * @return {String}\n */\nFramework.prototype.routeScript = function(name, theme) {\n\tif (!name.endsWith('.js'))\n\t\tname += '.js';\n\treturn F.$routeStatic(name, F.config['static-url-script'], theme);\n};\n\n/**\n * Create URL: CSS (according to config['static-url-style'])\n * @param {String} name\n * @return {String}\n */\nFramework.prototype.routeStyle = function(name, theme) {\n\treturn F.$routeStatic(name + (name.endsWith('.css') ? '' : '.css'), F.config['static-url-style'], theme);\n};\n\nFramework.prototype.routeImage = function(name, theme) {\n\treturn F.$routeStatic(name, F.config['static-url-image'], theme);\n};\n\nFramework.prototype.routeVideo = function(name, theme) {\n\treturn F.$routeStatic(name, F.config['static-url-video'], theme);\n};\n\nFramework.prototype.routeFont = function(name, theme) {\n\treturn F.$routeStatic(name, F.config['static-url-font'], theme);\n};\n\nFramework.prototype.routeDownload = function(name, theme) {\n\treturn F.$routeStatic(name, F.config['static-url-download'], theme);\n};\n\nFramework.prototype.routeStatic = function(name, theme) {\n\treturn F.$routeStatic(name, F.config['static-url'], theme);\n};\n\nFramework.prototype.$routeStatic = function(name, directory, theme) {\n\tvar key = name + directory + '$' + theme;\n\tvar val = F.temporary.other[key];\n\tif (RELEASE && val)\n\t\treturn val;\n\n\tif (name[0] === '~') {\n\t\tname = name.substring(name[1] === '~' ? 2 : 1);\n\t\ttheme = '';\n\t} else if (name[0] === '=') {\n\t\t// theme\n\t\tvar index = name.indexOf('/');\n\t\tif (index !== -1) {\n\t\t\ttheme = name.substring(1, index);\n\t\t\tname = name.substring(index + 1);\n\t\t\tif (theme === '?')\n\t\t\t\ttheme = F.config['default-theme'];\n\t\t}\n\t}\n\n\tvar filename;\n\n\tif (REG_ROUTESTATIC.test(name))\n\t\tfilename = name;\n\telse if (name[0] === '/')\n\t\tfilename = U.join(theme, this._version(name));\n\telse {\n\t\tfilename = U.join(theme, directory, this._version(name));\n\t\tif (REG_HTTPHTTPS.test(filename))\n\t\t\tfilename = filename.substring(1);\n\t}\n\n\treturn F.temporary.other[key] = framework_internal.preparePath(this._version(filename));\n};\n\nFramework.prototype._version = function(name) {\n\tif (F.versions)\n\t\tname = F.versions[name] || name;\n\tif (F.onVersion)\n\t\tname = F.onVersion(name) || name;\n\treturn name;\n};\n\nFramework.prototype._version_prepare = function(html) {\n\tvar match = html.match(REG_VERSIONS);\n\tif (!match)\n\t\treturn html;\n\n\tfor (var i = 0, length = match.length; i < length; i++) {\n\n\t\tvar src = match[i].toString();\n\t\tvar end = 5;\n\n\t\t// href\n\t\tif (src[0] === 'h')\n\t\t\tend = 6;\n\n\t\tvar name = src.substring(end, src.length - 1);\n\t\thtml = html.replace(match[i], src.substring(0, end) + F._version(name) + '\"');\n\t}\n\n\treturn html;\n};\n\n/**\n * Lookup for the route\n * @param {HttpRequest} req\n * @param {String} url URL address.\n * @param {String Array} flags\n * @param {Boolean} membertype Not defined = 0, Authorized = 1, Unauthorized = 2\n * @return {Object}\n */\nFramework.prototype.lookup = function(req, url, flags, membertype) {\n\n\tvar isSystem = url[0] === '#';\n\tvar subdomain = F._length_subdomain_web && req.subdomain ? req.subdomain.join('.') : null;\n\tif (isSystem)\n\t\treq.path = [url];\n\n\t// helper for 401 http status\n\treq.$isAuthorized = true;\n\n\tvar key;\n\n\tif (!isSystem) {\n\t\tkey = '#' + url + '$' + membertype + req.$flags + (subdomain ? '$' + subdomain : '');\n\t\tif (F.temporary.other[key])\n\t\t\treturn F.temporary.other[key];\n\t}\n\n\tvar length = F.routes.web.length;\n\tfor (var i = 0; i < length; i++) {\n\n\t\tvar route = F.routes.web[i];\n\t\tif (route.CUSTOM) {\n\t\t\tif (!route.CUSTOM(url, req, flags))\n\t\t\t\tcontinue;\n\t\t} else {\n\t\t\tif (F._length_subdomain_web && !framework_internal.routeCompareSubdomain(subdomain, route.subdomain))\n\t\t\t\tcontinue;\n\t\t\tif (route.isASTERIX) {\n\t\t\t\tif (!framework_internal.routeCompare(req.path, route.url, isSystem, true))\n\t\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\tif (!framework_internal.routeCompare(req.path, route.url, isSystem))\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tif (isSystem) {\n\t\t\tif (route.isSYSTEM)\n\t\t\t\treturn route;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (route.isPARAM && route.regexp) {\n\t\t\tvar skip = false;\n\t\t\tfor (var j = 0, l = route.regexpIndexer.length; j < l; j++) {\n\n\t\t\t\tvar p = req.path[route.regexpIndexer[j]];\n\t\t\t\tif (p === undefined) {\n\t\t\t\t\tskip = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (!route.regexp[route.regexpIndexer[j]].test(p)) {\n\t\t\t\t\tskip = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (skip)\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tif (route.flags && route.flags.length) {\n\t\t\tvar result = framework_internal.routeCompareFlags2(req, route, membertype);\n\t\t\tif (result === -1)\n\t\t\t\treq.$isAuthorized = false; // request is not authorized\n\t\t\tif (result < 1)\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tif (key && route.isCACHE && req.$isAuthorized)\n\t\t\tF.temporary.other[key] = route;\n\n\t\treturn route;\n\t}\n\n\treturn null;\n};\n\nFramework.prototype.lookup_websocket = function(req, url, membertype) {\n\n\tvar subdomain = F._length_subdomain_websocket && req.subdomain ? req.subdomain.join('.') : null;\n\tvar length = F.routes.websockets.length;\n\n\treq.$isAuthorized = true;\n\n\tfor (var i = 0; i < length; i++) {\n\n\t\tvar route = F.routes.websockets[i];\n\n\t\tif (route.CUSTOM) {\n\t\t\tif (!route.CUSTOM(url, req))\n\t\t\t\tcontinue;\n\t\t} else {\n\n\t\t\tif (F._length_subdomain_websocket && !framework_internal.routeCompareSubdomain(subdomain, route.subdomain))\n\t\t\t\tcontinue;\n\t\t\tif (route.isASTERIX) {\n\t\t\t\tif (!framework_internal.routeCompare(req.path, route.url, false, true))\n\t\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\tif (!framework_internal.routeCompare(req.path, route.url, false))\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tif (route.isPARAM && route.regexp) {\n\t\t\tvar skip = false;\n\t\t\tfor (var j = 0, l = route.regexpIndexer.length; j < l; j++) {\n\n\t\t\t\tvar p = req.path[route.regexpIndexer[j]];\n\t\t\t\tif (p === undefined) {\n\t\t\t\t\tskip = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (!route.regexp[route.regexpIndexer[j]].test(p)) {\n\t\t\t\t\tskip = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (skip)\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tif (route.flags && route.flags.length) {\n\t\t\tvar result = framework_internal.routeCompareFlags2(req, route, membertype);\n\t\t\tif (result === -1)\n\t\t\t\treq.$isAuthorized = false;\n\t\t\tif (result < 1)\n\t\t\t\tcontinue;\n\t\t}\n\n\t\treturn route;\n\t}\n\n\treturn null;\n};\n\n/**\n * Accept file type\n * @param {String} extension\n * @param {String} contentType Content-Type for file extension, optional.\n * @return {Framework}\n */\nFramework.prototype.accept = function(extension, contentType) {\n\tif (extension[0] === '.')\n\t\textension = extension.substring(1);\n\tF.config['static-accepts'][extension] = true;\n\tcontentType && U.setContentType(extension, contentType);\n\treturn F;\n};\n\n/**\n * Run worker\n * @param {String} name\n * @param {String} id Worker id, optional.\n * @param {Number} timeout Timeout, optional.\n * @param {Array} args Additional arguments, optional.\n * @return {ChildProcess}\n */\nFramework.prototype.worker = function(name, id, timeout, args) {\n\n\tvar fork = null;\n\tvar type = typeof(id);\n\n\tif (type === 'number' && timeout === undefined) {\n\t\ttimeout = id;\n\t\tid = null;\n\t\ttype = 'undefined';\n\t}\n\n\tif (type === 'string')\n\t\tfork = F.workers[id];\n\n\tif (id instanceof Array) {\n\t\targs = id;\n\t\tid = null;\n\t\ttimeout = undefined;\n\t}\n\n\tif (timeout instanceof Array) {\n\t\targs = timeout;\n\t\ttimeout = undefined;\n\t}\n\n\tif (fork)\n\t\treturn fork;\n\n\t// @TODO: dokončiť\n\tvar filename = name[0] === '@' ? F.path.package(name.substring(1)) : U.combine(F.config['directory-workers'], name);\n\n\tif (!args)\n\t\targs = [];\n\n\tfork = Child.fork(filename[filename.length - 3] === '.' ? filename : filename + '.js', args, HEADERS.workers);\n\n\tif (!id)\n\t\tid = name + '_' + new Date().getTime();\n\n\tfork.__id = id;\n\tF.workers[id] = fork;\n\n\tfork.on('exit', function() {\n\t\tvar self = this;\n\t\tself.__timeout && clearTimeout(self.__timeout);\n\t\tdelete F.workers[self.__id];\n\t\tfork.removeAllListeners();\n\t\tfork = null;\n\t});\n\n\tif (typeof(timeout) !== 'number')\n\t\treturn fork;\n\n\tfork.__timeout = setTimeout(function() {\n\t\tfork.kill();\n\t\tfork = null;\n\t}, timeout);\n\n\treturn fork;\n};\n\nFramework.prototype.worker2 = function(name, args, callback, timeout) {\n\n\tif (typeof(args) === 'function') {\n\t\ttimeout = callback;\n\t\tcallback = args;\n\t\targs = undefined;\n\t} else if (typeof(callback) === 'number') {\n\t\tvar tmp = timeout;\n\t\ttimeout = callback;\n\t\tcallback = tmp;\n\t}\n\n\tif (args && !(args instanceof Array))\n\t\targs = [args];\n\n\tvar fork = F.worker(name, name, timeout, args);\n\tif (fork.__worker2)\n\t\treturn fork;\n\n\tfork.__worker2 = true;\n\tfork.on('error', function(e) {\n\t\tcallback && callback(e);\n\t\tcallback = null;\n\t});\n\n\tfork.on('exit', function() {\n\t\tcallback && callback();\n\t\tcallback = null;\n\t});\n\n\treturn fork;\n};\n\n/**\n * This method suspends\n * @param {String} name Operation name.\n * @param {Boolean} enable Enable waiting (optional, default: by the current state).\n * @return {Boolean}\n */\nFramework.prototype.wait = function(name, enable) {\n\n\tif (!F.waits)\n\t\tF.waits = {};\n\n\tif (enable !== undefined) {\n\t\tif (enable)\n\t\t\tF.waits[name] = true;\n\t\telse\n\t\t\tdelete F.waits[name];\n\t\tF._length_wait = Object.keys(F.waits).length;\n\t\treturn enable;\n\t}\n\n\tif (F.waits[name])\n\t\tdelete F.waits[name];\n\telse {\n\t\tF.waits[name] = true;\n\t\tenable = true;\n\t}\n\n\tF._length_wait = Object.keys(F.waits).length;\n\treturn enable === true;\n};\n\n// *********************************************************************************\n// =================================================================================\n// Framework path\n// =================================================================================\n// *********************************************************************************\n\nfunction FrameworkPath() {}\n\nFrameworkPath.prototype.verify = function(name) {\n\tvar prop = '$directory-' + name;\n\tif (F.temporary.path[prop])\n\t\treturn F;\n\tvar directory = F.config['directory-' + name] || name;\n\tvar dir = U.combine(directory);\n\t!existsSync(dir) && Fs.mkdirSync(dir);\n\tF.temporary.path[prop] = true;\n\treturn F;\n};\n\nFrameworkPath.prototype.exists = function(path, callback) {\n\tFs.lstat(path, (err, stats) => callback(err ? false : true, stats ? stats.size : 0, stats ? stats.isFile() : false));\n\treturn F;\n};\n\nFrameworkPath.prototype.public = function(filename) {\n\treturn U.combine(F.config['directory-public'], filename);\n};\n\nFrameworkPath.prototype.public_cache = function(filename) {\n\tvar key = 'public_' + filename;\n\tvar item = F.temporary.other[key];\n\treturn item ? item : F.temporary.other[key] = U.combine(F.config['directory-public'], filename);\n};\n\nFrameworkPath.prototype.private = function(filename) {\n\treturn U.combine(F.config['directory-private'], filename);\n};\n\nFrameworkPath.prototype.isomorphic = function(filename) {\n\treturn U.combine(F.config['directory-isomorphic'], filename);\n};\n\nFrameworkPath.prototype.configs = function(filename) {\n\treturn U.combine(F.config['directory-configs'], filename);\n};\n\nFrameworkPath.prototype.virtual = function(filename) {\n\treturn U.combine(F.config['directory-public-virtual'], filename);\n};\n\nFrameworkPath.prototype.logs = function(filename) {\n\tthis.verify('logs');\n\treturn U.combine(F.config['directory-logs'], filename);\n};\n\nFrameworkPath.prototype.models = function(filename) {\n\treturn U.combine(F.config['directory-models'], filename);\n};\n\nFrameworkPath.prototype.temp = function(filename) {\n\tthis.verify('temp');\n\treturn U.combine(F.config['directory-temp'], filename);\n};\n\nFrameworkPath.prototype.temporary = function(filename) {\n\treturn this.temp(filename);\n};\n\nFrameworkPath.prototype.views = function(filename) {\n\treturn U.combine(F.config['directory-views'], filename);\n};\n\nFrameworkPath.prototype.workers = function(filename) {\n\treturn U.combine(F.config['directory-workers'], filename);\n};\n\nFrameworkPath.prototype.databases = function(filename) {\n\tthis.verify('databases');\n\treturn U.combine(F.config['directory-databases'], filename);\n};\n\nFrameworkPath.prototype.modules = function(filename) {\n\treturn U.combine(F.config['directory-modules'], filename);\n};\n\nFrameworkPath.prototype.controllers = function(filename) {\n\treturn U.combine(F.config['directory-controllers'], filename);\n};\n\nFrameworkPath.prototype.definitions = function(filename) {\n\treturn U.combine(F.config['directory-definitions'], filename);\n};\n\nFrameworkPath.prototype.tests = function(filename) {\n\treturn U.combine(F.config['directory-tests'], filename);\n};\n\nFrameworkPath.prototype.resources = function(filename) {\n\treturn U.combine(F.config['directory-resources'], filename);\n};\n\nFrameworkPath.prototype.services = function(filename) {\n\treturn U.combine(F.config['directory-services'], filename);\n};\n\nFrameworkPath.prototype.packages = function(filename) {\n\treturn U.combine(F.config['directory-packages'], filename);\n};\n\nFrameworkPath.prototype.themes = function(filename) {\n\treturn U.combine(F.config['directory-themes'], filename);\n};\n\nFrameworkPath.prototype.root = function(filename) {\n\tvar p = Path.join(directory, filename || '');\n\treturn F.isWindows ? p.replace(/\\\\/g, '/') : p;\n};\n\nFrameworkPath.prototype.package = function(name, filename) {\n\n\tif (filename === undefined) {\n\t\tvar index = name.indexOf('/');\n\t\tif (index !== -1) {\n\t\t\tfilename = name.substring(index + 1);\n\t\t\tname = name.substring(0, index);\n\t\t}\n\t}\n\n\tvar tmp = F.config['directory-temp'];\n\tvar p = tmp[0] === '~' ? Path.join(tmp.substring(1), name + '.package', filename || '') : Path.join(directory, tmp, name + '.package', filename || '');\n\treturn F.isWindows ? p.replace(REG_WINDOWSPATH, '/') : p;\n};\n\n// *********************************************************************************\n// =================================================================================\n// Cache declaration\n// =================================================================================\n// *********************************************************************************\n\nfunction FrameworkCache() {\n\tthis.items = {};\n\tthis.count = 1;\n\tthis.interval;\n}\n\nFrameworkCache.prototype.init = function() {\n\tclearInterval(this.interval);\n\tthis.interval = setInterval(() => F.cache.recycle(), 1000 * 60);\n\tF.config['allow-cache-snapshot'] && this.load();\n\treturn this;\n};\n\nFrameworkCache.prototype.save = function() {\n\tFs.writeFile(F.path.temp((F.id ? 'i-' + F.id + '_' : '') + 'F.jsoncache'), JSON.stringify(this.items), NOOP);\n\treturn this;\n};\n\nFrameworkCache.prototype.load = function() {\n\tvar self = this;\n\tFs.readFile(F.path.temp((F.id ? 'i-' + F.id + '_' : '') + 'F.jsoncache'), function(err, data) {\n\t\tif (err)\n\t\t\treturn;\n\n\t\ttry {\n\t\t\tdata = JSON.parse(data.toString('utf8'), (key, value) => typeof(value) === 'string' && value.isJSONDate() ? new Date(value) : value);\n\t\t\tself.items = data;\n\t\t} catch (e) {}\n\t});\n\treturn self;\n};\n\nFrameworkCache.prototype.stop = function() {\n\tclearInterval(this.interval);\n\treturn this;\n};\n\nFrameworkCache.prototype.clear = function() {\n\tthis.items = {};\n\treturn this;\n};\n\nFrameworkCache.prototype.recycle = function() {\n\n\tvar items = this.items;\n\tF.datetime = new Date();\n\n\tthis.count++;\n\n\tfor (var o in items) {\n\t\tvar value = items[o];\n\t\tif (!value)\n\t\t\tdelete items[o];\n\t\telse if (value.expire < F.datetime) {\n\t\t\tF.emit('cache-expire', o, value.value);\n\t\t\tdelete items[o];\n\t\t}\n\t}\n\n\tF.config['allow-cache-snapshot'] && this.save();\n\tF._service(this.count);\n\treturn this;\n};\n\nFrameworkCache.prototype.set = FrameworkCache.prototype.add = function(name, value, expire, sync) {\n\tvar type = typeof(expire);\n\n\tswitch (type) {\n\t\tcase 'string':\n\t\t\texpire = expire.parseDateExpiration();\n\t\t\tbreak;\n\t\tcase 'undefined':\n\t\t\texpire = F.datetime.add('m', 5);\n\t\t\tbreak;\n\t}\n\n\tthis.items[name] = { value: value, expire: expire };\n\tF.emit('cache-set', name, value, expire, sync);\n\treturn value;\n};\n\nFrameworkCache.prototype.read = FrameworkCache.prototype.get = function(key, def) {\n\n\tvar value = this.items[key];\n\tif (!value)\n\t\treturn def;\n\n\tF.datetime = new Date();\n\n\tif (value.expire < F.datetime) {\n\t\tthis.items[key] = undefined;\n\t\tF.emit('cache-expire', key, value.value);\n\t\treturn def;\n\t}\n\n\treturn value.value;\n};\n\nFrameworkCache.prototype.read2 = FrameworkCache.prototype.get2 = function(key, def) {\n\tvar value = this.items[key];\n\n\tif (!value)\n\t\treturn def;\n\n\tif (value.expire < F.datetime) {\n\t\tthis.items[key] = undefined;\n\t\tF.emit('cache-expire', key, value.value);\n\t\treturn def;\n\t}\n\n\treturn value.value;\n};\n\nFrameworkCache.prototype.setExpire = function(name, expire) {\n\tvar obj = this.items[name];\n\tif (obj)\n\t\tobj.expire = typeof(expire) === 'string' ? expire.parseDateExpiration() : expire;\n\treturn this;\n};\n\nFrameworkCache.prototype.remove = function(name) {\n\tvar value = this.items[name];\n\tif (value)\n\t\tthis.items[name] = undefined;\n\treturn value;\n};\n\nFrameworkCache.prototype.removeAll = function(search) {\n\tvar count = 0;\n\tvar isReg = U.isRegExp(search);\n\n\tfor (var key in this.items) {\n\n\t\tif (isReg) {\n\t\t\tif (!search.test(key))\n\t\t\t\tcontinue;\n\t\t} else {\n\t\t\tif (key.indexOf(search) === -1)\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tthis.remove(key);\n\t\tcount++;\n\t}\n\n\treturn count;\n};\n\nFrameworkCache.prototype.fn = function(name, fnCache, fnCallback) {\n\n\tvar self = this;\n\tvar value = self.read2(name);\n\n\tif (value) {\n\t\tfnCallback && fnCallback(value, true);\n\t\treturn self;\n\t}\n\n\tfnCache(function(value, expire) {\n\t\tself.add(name, value, expire);\n\t\tfnCallback && fnCallback(value, false);\n\t});\n\n\treturn self;\n};\n\n// *********************************************************************************\n// =================================================================================\n// Framework.Subscribe\n// =================================================================================\n// *********************************************************************************\n\nfunction Subscribe(framework, req, res, type) {\n\n\t// type = 0 - GET, DELETE\n\t// type = 1 - POST, PUT\n\t// type = 2 - POST MULTIPART\n\t// type = 3 - file routing\n\n\t// this.controller;\n\tthis.req = req;\n\tthis.res = res;\n\n\t// Because of performance\n\t// this.route = null;\n\t// this.timeout = null;\n\t// this.isCanceled = false;\n\t// this.isTransfer = false;\n\t// this.header = '';\n\t// this.error = null;\n}\n\nSubscribe.prototype.success = function() {\n\tvar self = this;\n\n\tself.timeout && clearTimeout(self.timeout);\n\tself.timeout = null;\n\tself.isCanceled = true;\n\n\tif (self.controller && self.controller.res) {\n\t\tself.controller.res.controller = null;\n\t\tself.controller = null;\n\t}\n\n\treturn self;\n};\n\nSubscribe.prototype.file = function() {\n\tvar self = this;\n\tself.req.on('end', () => self.doEndfile(this));\n\tself.req.resume();\n\treturn self;\n};\n\n/**\n * Process MULTIPART (uploaded files)\n * @param {String} header Content-Type header.\n * @return {FrameworkSubscribe}\n */\nSubscribe.prototype.multipart = function(header) {\n\n\tvar self = this;\n\tvar req = self.req;\n\n\tF.stats.request.upload++;\n\tself.route = F.lookup(req, req.uri.pathname, req.flags, 0);\n\tself.header = header;\n\n\tif (self.route) {\n\t\tF.path.verify('temp');\n\t\tframework_internal.parseMULTIPART(req, header, self.route, F.config['directory-temp'], self);\n\t\treturn self;\n\t}\n\n\tF._request_stats(false, false);\n\tF.stats.request.blocked++;\n\tself.res.writeHead(403);\n\tself.res.end();\n\treturn self;\n};\n\nSubscribe.prototype.urlencoded = function() {\n\n\tvar self = this;\n\tself.route = F.lookup(self.req, self.req.uri.pathname, self.req.flags, 0);\n\n\tif (self.route) {\n\t\tself.req.buffer_has = true;\n\t\tself.req.buffer_exceeded = false;\n\t\tself.req.on('data', (chunk) => self.doParsepost(chunk));\n\t\tself.end();\n\t\treturn self;\n\t}\n\n\tF.stats.request.blocked++;\n\tF._request_stats(false, false);\n\tself.res.writeHead(403);\n\tself.res.end();\n\tF.emit('request-end', self.req, self.res);\n\tself.req.clear(true);\n\n\treturn self;\n};\n\nSubscribe.prototype.end = function() {\n\tvar self = this;\n\tself.req.on('end', () => self.doEnd());\n\tself.req.resume();\n};\n\n/**\n * Execute controller\n * @private\n * @param {Number} status Default HTTP status.\n * @return {FrameworkSubscribe}\n */\nSubscribe.prototype.execute = function(status, isError) {\n\n\tvar self = this;\n\tvar route = self.route;\n\tvar req = self.req;\n\tvar res = self.res;\n\n\tif (isError || !route) {\n\t\tF.stats.response['error' + status]++;\n\t\tstatus !== 500 && F.emit('error' + status, req, res, self.exception);\n\t}\n\n\tif (!route) {\n\n\t\tif (!status)\n\t\t\tstatus = 404;\n\n\t\tif (status === 400 && self.exception instanceof framework_builders.ErrorBuilder) {\n\t\t\tF.stats.response.errorBuilder++;\n\t\t\treq.$language && self.exception.setResource(req.$language);\n\t\t\tF.responseContent(req, res, 200, self.exception.output(), self.exception.contentType, F.config['allow-gzip']);\n\t\t\treturn self;\n\t\t}\n\n\t\tF.responseContent(req, res, status, U.httpStatus(status) + prepare_error(self.exception), CONTENTTYPE_TEXTPLAIN, F.config['allow-gzip']);\n\t\treturn self;\n\t}\n\n\tvar name = route.controller;\n\n\tif (route.isMOBILE_VARY)\n\t\treq.$mobile = true;\n\n\tif (route.currentViewDirectory === undefined)\n\t\troute.currentViewDirectory = name && name[0] !== '#' && name !== 'default' && name !== 'unknown' ? '/' + name + '/' : '';\n\n\tvar controller = new Controller(name, req, res, self, route.currentViewDirectory);\n\n\tcontroller.isTransfer = self.isTransfer;\n\tcontroller.exception = self.exception;\n\tself.controller = controller;\n\n\tif (!self.isCanceled && route.timeout) {\n\t\tself.timeout && clearTimeout(self.timeout);\n\t\tself.timeout = setTimeout(function() {\n\t\t\tself.controller && self.controller.precache && self.controller.precache(null, null, null);\n\t\t\tself.doCancel();\n\t\t}, route.timeout);\n\t}\n\n\troute.isDELAY && self.res.writeContinue();\n\tif (self.isSchema)\n\t\treq.body.$$controller = controller;\n\n\tif (!F._length_middleware || !route.middleware)\n\t\tself.doExecute();\n\telse\n\t\tasync_middleware(0, req, res, route.middleware, () => self.doExecute(), route.options, controller);\n};\n\nSubscribe.prototype.prepare = function(flags, url) {\n\n\tvar self = this;\n\tvar req = self.req;\n\tvar res = self.res;\n\tvar auth = F.onAuthorize;\n\n\tif (auth) {\n\t\tvar length = flags.length;\n\t\tauth(req, res, flags, function(isAuthorized, user) {\n\n\t\t\tvar hasRoles = length !== flags.length;\n\n\t\t\tif (hasRoles)\n\t\t\t\treq.$flags += flags.slice(length).join('');\n\n\t\t\tif (typeof(isAuthorized) !== 'boolean') {\n\t\t\t\tuser = isAuthorized;\n\t\t\t\tisAuthorized = !user;\n\t\t\t}\n\n\t\t\treq.isAuthorized = isAuthorized;\n\t\t\tself.doAuthorize(isAuthorized, user, hasRoles);\n\t\t});\n\t\treturn self;\n\t}\n\n\tif (!self.route)\n\t\tself.route = F.lookup(req, req.buffer_exceeded ? '#431' : url || req.uri.pathname, req.flags, 0);\n\n\tif (!self.route)\n\t\tself.route = F.lookup(req, '#404', EMPTYARRAY, 0);\n\n\tvar code = req.buffer_exceeded ? 431 : 404;\n\n\tif (!self.schema || !self.route)\n\t\tself.execute(code);\n\telse\n\t\tself.validate(self.route, () => self.execute(code));\n\n\treturn self;\n};\n\nSubscribe.prototype.doExecute = function() {\n\n\tvar self = this;\n\tvar name = self.route.controller;\n\tvar controller = self.controller;\n\tvar req = self.req;\n\n\ttry {\n\n\t\tif (F.onTheme)\n\t\t\tcontroller.themeName = F.onTheme(controller);\n\n\t\tif (controller.isCanceled)\n\t\t\treturn self;\n\n\t\tF.emit('controller', controller, name, self.route.options);\n\n\t\tif (controller.isCanceled)\n\t\t\treturn self;\n\n\t\tif (self.route.isCACHE && !F.temporary.other[req.uri.pathname])\n\t\t\tF.temporary.other[req.uri.pathname] = req.path;\n\n\t\tif (self.route.isGENERATOR)\n\t\t\tasync.call(controller, self.route.execute, true)(controller, framework_internal.routeParam(self.route.param.length ? req.split : req.path, self.route));\n\t\telse\n\t\t\tself.route.execute.apply(controller, framework_internal.routeParam(self.route.param.length ? req.split : req.path, self.route));\n\n\t} catch (err) {\n\t\tcontroller = null;\n\t\tF.error(err, name, req.uri);\n\t\tself.exception = err;\n\t\tself.route = F.lookup(req, '#500', EMPTYARRAY, 0);\n\t\tself.execute(500, true);\n\t}\n\n\treturn self;\n};\n\nSubscribe.prototype.doAuthorize = function(isLogged, user, roles) {\n\n\tvar self = this;\n\tvar req = self.req;\n\tvar membertype = isLogged ? 1 : 2;\n\n\treq.$flags += membertype\n\n\tif (user)\n\t\treq.user = user;\n\n\tif (self.route && self.route.isUNIQUE && !roles && (!self.route.MEMBER || self.route.MEMBER === membertype)) {\n\t\tif (self.schema)\n\t\t\tself.validate(self.route, () => self.execute(code));\n\t\telse\n\t\t\tself.execute(req.buffer_exceeded ? 431 : 401, true);\n\t\treturn;\n\t}\n\n\tvar route = F.lookup(req, req.buffer_exceeded ? '#431' : req.uri.pathname, req.flags, req.buffer_exceeded ? 0 : membertype);\n\tvar status = req.$isAuthorized ? 404 : 401;\n\tvar code = req.buffer_exceeded ? 431 : status;\n\n\tif (!route)\n\t\troute = F.lookup(req, '#' + status, EMPTYARRAY, 0);\n\n\tself.route = route;\n\n\tif (self.route && self.schema)\n\t\tself.validate(self.route, () => self.execute(code));\n\telse\n\t\tself.execute(code);\n\n\treturn self;\n};\n\nSubscribe.prototype.doEnd = function() {\n\n\tvar self = this;\n\tvar req = self.req;\n\tvar res = self.res;\n\tvar route = self.route;\n\n\tif (req.buffer_exceeded) {\n\t\troute = F.lookup(req, '#431', EMPTYARRAY, 0);\n\t\treq.buffer_data = null;\n\n\t\tif (!route) {\n\t\t\tF.response431(req, res);\n\t\t\treturn self;\n\t\t}\n\n\t\tself.route = route;\n\t\tself.execute(431, true);\n\t\treturn self;\n\t}\n\n\tif (req.buffer_data && (!route || !route.isBINARY))\n\t\treq.buffer_data = req.buffer_data.toString(ENCODING);\n\n\tif (!req.buffer_data) {\n\t\tif (route && route.schema)\n\t\t\tself.schema = true;\n\t\treq.buffer_data = null;\n\t\tself.prepare(req.flags, req.uri.pathname);\n\t\treturn self;\n\t}\n\n\tif (route.isXML) {\n\n\t\tif (req.$type !== 2) {\n\t\t\tself.route400('Invalid \"Content-Type\".');\n\t\t\treq.buffer_data = null;\n\t\t\treturn self;\n\t\t}\n\n\t\ttry {\n\t\t\treq.body = F.onParseXML(req.buffer_data.trim(), req);\n\t\t\treq.buffer_data = null;\n\t\t\tself.prepare(req.flags, req.uri.pathname);\n\t\t} catch (err) {\n\t\t\tF.error(err, null, req.uri);\n\t\t\tself.route500(err);\n\t\t}\n\t\treturn self;\n\t}\n\n\tif (self.route.isRAW) {\n\t\treq.body = req.buffer_data;\n\t\treq.buffer_data = null;\n\t\tself.prepare(req.flags, req.uri.pathname);\n\t\treturn self;\n\t}\n\n\tif (!req.$type) {\n\t\treq.buffer_data = null;\n\t\tself.route400('Invalid \"Content-Type\".');\n\t\treturn self;\n\t}\n\n\tif (req.$type === 1) {\n\t\ttry {\n\t\t\treq.body = F.onParseJSON(req.buffer_data, req);\n\t\t\treq.buffer_data = null;\n\t\t} catch (e) {\n\t\t\tself.route400('Invalid JSON data.');\n\t\t\treturn self;\n\t\t}\n\t} else\n\t\treq.body = F.onParseQuery(req.buffer_data, req);\n\n\tif (self.route.schema)\n\t\tself.schema = true;\n\n\treq.buffer_data = null;\n\tself.prepare(req.flags, req.uri.pathname);\n\treturn self;\n};\n\nSubscribe.prototype.validate = function(route, next) {\n\tvar self = this;\n\tvar req = self.req;\n\tself.schema = false;\n\n\tif (!route.schema || req.method === 'DELETE')\n\t\treturn next();\n\n\tF.onSchema(req, route.schema[0], route.schema[1], function(err, body) {\n\n\t\tif (err) {\n\t\t\tself.route400(err);\n\t\t\tnext = null;\n\t\t} else {\n\t\t\tF.stats.request.schema++;\n\t\t\treq.body = body;\n\t\t\tself.isSchema = true;\n\t\t\tnext();\n\t\t}\n\n\t}, route.schema[2]);\n};\n\nSubscribe.prototype.route400 = function(problem) {\n\tvar self = this;\n\tself.route = F.lookup(self.req, '#400', EMPTYARRAY, 0);\n\tself.exception = problem;\n\tself.execute(400, true);\n\treturn self;\n};\n\nSubscribe.prototype.route500 = function(problem) {\n\tvar self = this;\n\tself.route = F.lookup(self.req, '#500', EMPTYARRAY, 0);\n\tself.exception = problem;\n\tself.execute(500, true);\n\treturn self;\n};\n\nSubscribe.prototype.doEndfile = function() {\n\n\tvar self = this;\n\tvar req = self.req;\n\tvar res = self.res;\n\n\tif (!F._length_files)\n\t\treturn F.responseStatic(self.req, self.res);\n\n\tfor (var i = 0; i < F._length_files; i++) {\n\n\t\tvar file = F.routes.files[i];\n\t\ttry {\n\n\t\t\tif (file.extensions && !file.extensions[self.req.extension])\n\t\t\t\tcontinue;\n\n\t\t\tif (file.url) {\n\t\t\t\tvar skip = false;\n\t\t\t\tvar length = file.url.length;\n\n\t\t\t\tif (!file.wildcard && !file.fixedfile && length !== req.path.length - 1)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tfor (var j = 0; j < length; j++) {\n\t\t\t\t\tif (file.url[j] === req.path[j])\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tskip = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (skip)\n\t\t\t\t\tcontinue;\n\n\t\t\t} else if (file.onValidate && !file.onValidate.call(framework, req, res, true))\n\t\t\t\tcontinue;\n\n\t\t\tif (file.middleware)\n\t\t\t\tself.doEndfile_middleware(file);\n\t\t\telse\n\t\t\t\tfile.execute.call(framework, req, res, false);\n\n\t\t\treturn self;\n\n\t\t} catch (err) {\n\t\t\tF.error(err, file.controller, req.uri);\n\t\t\tF.responseContent(req, res, 500, '500 - internal server error', CONTENTTYPE_TEXTPLAIN, F.config['allow-gzip']);\n\t\t\treturn self;\n\t\t}\n\t}\n\n\tF.responseStatic(self.req, self.res);\n};\n\n/**\n * Executes a file middleware\n * @param {FileRoute} file\n * @return {Subscribe}\n */\nSubscribe.prototype.doEndfile_middleware = function(file) {\n\tvar self = this;\n\tasync_middleware(0, self.req, self.res, file.middleware, function() {\n\t\ttry {\n\t\t\tfile.execute.call(framework, self.req, self.res, false);\n\t\t} catch (err) {\n\t\t\tF.error(err, file.controller + ' :: ' + file.name, self.req.uri);\n\t\t\tF.responseContent(self.req, self.res, 500, '500 - internal server error', CONTENTTYPE_TEXTPLAIN, F.config['allow-gzip']);\n\t\t}\n\t}, file.options);\n};\n\n/**\n * Parse data from CHUNK\n * @param {Buffer} chunk\n * @return {FrameworkSubscribe}\n */\nSubscribe.prototype.doParsepost = function(chunk) {\n\n\tvar self = this;\n\tvar req = self.req;\n\n\tif (req.buffer_exceeded)\n\t\treturn self;\n\n\tif (!req.buffer_exceeded)\n\t\treq.buffer_data = Buffer.concat([req.buffer_data, chunk]);\n\n\tif (req.buffer_data.length < self.route.length)\n\t\treturn self;\n\n\treq.buffer_exceeded = true;\n\treq.buffer_data = U.createBuffer();\n\treturn self;\n};\n\nSubscribe.prototype.doCancel = function() {\n\tvar self = this;\n\n\tF.stats.response.timeout++;\n\tclearTimeout(self.timeout);\n\tself.timeout = null;\n\n\tif (!self.controller)\n\t\treturn;\n\n\tself.controller.isTimeout = true;\n\tself.controller.isCanceled = true;\n\tself.route = F.lookup(self.req, '#408', EMPTYARRAY, 0);\n\tself.execute(408, true);\n};\n\n// *********************************************************************************\n// =================================================================================\n// Framework.Controller\n// =================================================================================\n// *********************************************************************************\n\n/**\n * FrameworkController\n * @class\n * @param {String} name Controller name.\n * @param {Request} req\n * @param {Response} res\n * @param {FrameworkSubscribe} subscribe\n */\nfunction Controller(name, req, res, subscribe, currentView) {\n\n\tthis.subscribe = subscribe;\n\tthis.name = name;\n\t// this.exception;\n\n\t// Sets the default language\n\tif (req) {\n\t\tthis.language = req.$language;\n\t\tthis.req = req;\n\t} else\n\t\tthis.req = EMPTYREQUEST;\n\n\t// controller.type === 0 - classic\n\t// controller.type === 1 - server sent events\n\tthis.type = 0;\n\n\t// this.layoutName = F.config['default-layout'];\n\t// this.themeName = F.config['default-theme'];\n\n\tthis.status = 200;\n\n\t// this.isLayout = false;\n\t// this.isCanceled = false;\n\t// this.isTimeout = false;\n\t// this.isTransfer = false;\n\n\tthis.isConnected = true;\n\tthis.isController = true;\n\tthis.repository = {};\n\n\t// render output\n\t// this.output = null;\n\t// this.outputPartial = null;\n\t// this.$model = null;\n\n\tthis._currentView = currentView;\n\n\tif (res) {\n\t\tthis.res = res;\n\t\tthis.res.controller = this;\n\t} else\n\t\tthis.res = EMPTYOBJECT;\n}\n\nController.prototype = {\n\n\tget schema() {\n\t\treturn this.route.schema[0] === 'default' ? this.route.schema[1] : this.route.schema.join('/');\n\t},\n\n\tget workflow() {\n\t\treturn this.route.schema_workflow;\n\t},\n\n\tget sseID() {\n\t\treturn this.req.headers['last-event-id'] || null;\n\t},\n\n\tget route() {\n\t\treturn this.subscribe.route;\n\t},\n\n\tget options() {\n\t\treturn this.subscribe.route.options;\n\t},\n\n\tget flags() {\n\t\treturn this.subscribe.route.flags;\n\t},\n\n\tget path() {\n\t\treturn F.path;\n\t},\n\n\tget get() {\n\t\tOBSOLETE('controller.get', 'Instead of controller.get use controller.query');\n\t\treturn this.req.query;\n\t},\n\n\tget query() {\n\t\treturn this.req.query;\n\t},\n\n\tget post() {\n\t\tOBSOLETE('controller.post', 'Instead of controller.post use controller.body');\n\t\treturn this.req.body;\n\t},\n\n\tget body() {\n\t\treturn this.req.body;\n\t},\n\n\tget files() {\n\t\treturn this.req.files;\n\t},\n\n\tget subdomain() {\n\t\treturn this.req.subdomain;\n\t},\n\n\tget ip() {\n\t\treturn this.req.ip;\n\t},\n\n\tget xhr() {\n\t\treturn this.req.xhr;\n\t},\n\n\tget url() {\n\t\treturn U.path(this.req.uri.pathname);\n\t},\n\n\tget uri() {\n\t\treturn this.req.uri;\n\t},\n\n\tget cache() {\n\t\treturn F.cache;\n\t},\n\n\tget config() {\n\t\treturn F.config;\n\t},\n\n\tget controllers() {\n\t\treturn F.controllers;\n\t},\n\n\tget isProxy() {\n\t\treturn this.req.isProxy;\n\t},\n\n\tget isDebug() {\n\t\treturn F.config.debug;\n\t},\n\n\tget isTest() {\n\t\treturn this.req.headers['x-assertion-testing'] === '1';\n\t},\n\n\tget isSecure() {\n\t\treturn this.req.isSecure;\n\t},\n\n\tget secured() {\n\t\treturn this.req.secured;\n\t},\n\n\tget session() {\n\t\treturn this.req.session;\n\t},\n\n\tset session(value) {\n\t\tthis.req.session = value;\n\t},\n\n\tget user() {\n\t\treturn this.req.user;\n\t},\n\n\tget referrer() {\n\t\treturn this.req.headers['referer'] || '';\n\t},\n\n\tset user(value) {\n\t\tthis.req.user = value;\n\t},\n\n\tget mobile() {\n\t\treturn this.req.mobile;\n\t},\n\n\tget robot() {\n\t\treturn this.req.robot;\n\t},\n\n\tget viewname() {\n\t\tvar name = this.req.path[this.req.path.length - 1];\n\t\tif (!name || name === '/')\n\t\t\tname = 'index';\n\t\treturn name;\n\t}\n};\n\n// ======================================================\n// PROTOTYPES\n// ======================================================\n\n// Schema operations\n\nController.prototype.$get = Controller.prototype.$read = function(helper, callback) {\n\tthis.getSchema().get(helper, callback, this);\n\treturn this;\n};\n\nController.prototype.$query = function(helper, callback) {\n\tthis.getSchema().query(helper, callback, this);\n\treturn this;\n};\n\nController.prototype.$save = function(helper, callback) {\n\tvar self = this;\n\tif (framework_builders.isSchema(self.body)) {\n\t\tself.body.$$controller = self;\n\t\tself.body.$save(helper, callback);\n\t} else {\n\t\tvar model = self.getSchema().default();\n\t\tmodel.$$controller = self;\n\t\tmodel.$save(helper, callback);\n\t}\n\treturn self;\n};\n\nController.prototype.$remove = function(helper, callback) {\n\tvar self = this;\n\tself.getSchema().remove(helper, callback, self);\n\treturn this;\n};\n\nController.prototype.$workflow = function(name, helper, callback) {\n\tvar self = this;\n\tif (framework_builders.isSchema(self.body)) {\n\t\tself.body.$$controller = self;\n\t\tself.body.$workflow(name, helper, callback);\n\t} else\n\t\tself.getSchema().workflow2(name, helper, callback, self);\n\treturn self;\n};\n\nController.prototype.$workflow2 = function(name, helper, callback) {\n\tvar self = this;\n\tself.getSchema().workflow2(name, helper, callback, self);\n\treturn self;\n};\n\nController.prototype.$hook = function(name, helper, callback) {\n\tvar self = this;\n\tif (framework_builders.isSchema(self.body)) {\n\t\tself.body.$$controller = self;\n\t\tself.body.$hook(name, helper, callback);\n\t} else\n\t\tself.getSchema().hook2(name, helper, callback, self);\n\treturn self;\n};\n\nController.prototype.$hook2 = function(name, helper, callback) {\n\tvar self = this;\n\tself.getSchema().hook2(name, helper, callback, self);\n\treturn self;\n};\n\nController.prototype.$transform = function(name, helper, callback) {\n\tvar self = this;\n\tif (framework_builders.isSchema(self.body)) {\n\t\tself.body.$$controller = self;\n\t\tself.body.$transform(name, helper, callback);\n\t} else\n\t\tself.getSchema().transform2(name, helper, callback, self);\n\treturn self;\n};\n\nController.prototype.$transform2 = function(name, helper, callback) {\n\tvar self = this;\n\tself.getSchema().transform2(name, helper, callback, self);\n\treturn self;\n};\n\nController.prototype.$operation = function(name, helper, callback) {\n\tvar self = this;\n\tif (framework_builders.isSchema(self.body)) {\n\t\tself.body.$$controller = self;\n\t\tself.body.$operation(name, helper, callback);\n\t} else\n\t\tself.getSchema().operation2(name, helper, callback, self);\n\treturn self;\n};\n\nController.prototype.$operation2 = function(name, helper, callback) {\n\tvar self = this;\n\tself.getSchema().operation2(name, helper, callback, self);\n\treturn self;\n};\n\nController.prototype.$exec = function(name, helper, callback) {\n\tvar self = this;\n\n\tif (framework_builders.isSchema(self.body)) {\n\t\tself.body.$$controller = self;\n\t\tself.body.$exec(name, helper, callback);\n\t\treturn self;\n\t}\n\n\tvar tmp = self.getSchema().create();\n\ttmp.$$controller = self;\n\ttmp.$exec(name, helper, callback);\n\treturn self;\n};\n\nController.prototype.$async = function(callback, index) {\n\tvar self = this;\n\n\tif (framework_builders.isSchema(self.body)) {\n\t\tself.body.$$controller = self;\n\t\treturn self.body.$async(callback, index);\n\t}\n\n\tvar model = self.getSchema().default();\n\tmodel.$$controller = self;\n\treturn model.$async(callback, index);\n};\n\nController.prototype.getSchema = function() {\n\tvar route = this.subscribe.route;\n\tif (!route.schema || !route.schema[1])\n\t\tthrow new Error('The controller\\'s route does not define any schema.');\n\tvar schema = GETSCHEMA(route.schema[0], route.schema[1]);\n\tif (schema)\n\t\treturn schema;\n\tthrow new Error('Schema \"{0}\" does not exist.'.format(route.schema[1]));\n};\n\n/**\n * Renders component\n * @param {String} name A component name\n * @param {Object} settings Optional, settings.\n * @return {String}\n */\nController.prototype.component = function(name, settings) {\n\tvar self = this;\n\tvar filename = F.components.views[name];\n\n\tif (filename) {\n\t\tvar generator = framework_internal.viewEngine(name, filename, self);\n\t\tif (generator) {\n\t\t\tself.repository[REPOSITORY_COMPONENTS] = true;\n\t\t\treturn generator.call(self, self, self.repository, self.$model, self.session, self.query, self.body, self.url, F.global, F.helpers, self.user, self.config, F.functions, 0, self.outputPartial, self.req.cookie, self.req.files, self.req.mobile, settings || EMPTYOBJECT);\n\t\t}\n\t}\n\n\tF.error('Error: A component \"{0}\" doesn\\'t exist.'.format(name), self.name, self.uri);\n\treturn '';\n};\n\n/**\n * Reads / Writes cookie\n * @param {String} name\n * @param {String} value\n * @param {String/Date} expires\n * @param {Object} options\n * @return {String/Controller}\n */\nController.prototype.cookie = function(name, value, expires, options) {\n\tvar self = this;\n\tif (value === undefined)\n\t\treturn self.req.cookie(name);\n\tself.res.cookie(name, value, expires, options);\n\treturn self;\n};\n\n/**\n * Clears uploaded files\n * @return {Controller}\n */\nController.prototype.clear = function() {\n\tvar self = this;\n\tself.req.clear();\n\treturn self;\n};\n\n/**\n * Translates text\n * @param {String} text\n * @return {String}\n */\nController.prototype.translate = function(language, text) {\n\n\tif (!text) {\n\t\ttext = language;\n\t\tlanguage = this.language;\n\t}\n\n\treturn F.translate(language, text);\n};\n\n/**\n * Exec middleware\n * @param {String Array} names Middleware name.\n * @param {Object} options Custom options for middleware.\n * @param {Function} callback\n * @return {Controller}\n */\nController.prototype.middleware = function(names, options, callback) {\n\n\tif (typeof(names) === 'string')\n\t\tnames = [names];\n\n\tif (typeof(options) === 'function') {\n\t\tvar tmp = callback;\n\t\tcallback = options;\n\t\toptions = tmp;\n\t}\n\n\tif (!options)\n\t\toptions = EMPTYOBJECT;\n\n\tvar self = this;\n\tasync_middleware(0, self.req, self.res, names, () => callback && callback(), options, self);\n\treturn self;\n};\n\n/**\n * Creates a pipe between the current request and target URL\n * @param {String} url\n * @param {Object} headers Optional, custom headers.\n * @param {Function(err)} callback Optional.\n * @return {Controller}\n */\nController.prototype.pipe = function(url, headers, callback) {\n\n\tvar self = this;\n\n\tif (typeof(headers) === 'function') {\n\t\tvar tmp = callback;\n\t\tcallback = headers;\n\t\theaders = tmp;\n\t}\n\n\tif (self.res.success || self.res.headersSent || !self.isConnected)\n\t\treturn self;\n\n\tF.responsePipe(self.req, self.res, url, headers, null, function() {\n\t\tself.subscribe.success();\n\t\tcallback && callback();\n\t});\n\n\treturn self;\n};\n\nController.prototype.encrypt = function() {\n\treturn F.encrypt.apply(framework, arguments);\n};\n\nController.prototype.decrypt = function() {\n\treturn F.decrypt.apply(framework, arguments);\n};\n\n/**\n * Creates a hash (alias for F.hash())\n * @return {Controller}\n */\nController.prototype.hash = function() {\n\treturn F.hash.apply(framework, arguments);\n};\n\n/**\n * Sets a response header\n * @param {String} name\n * @param {String} value\n * @return {Controller}\n */\nController.prototype.header = function(name, value) {\n\tthis.res.setHeader(name, value);\n\treturn this;\n};\n\n/**\n * Gets a hostname\n * @param {String} path\n * @return {Controller}\n */\nController.prototype.host = function(path) {\n\treturn this.req.hostname(path);\n};\n\nController.prototype.hostname = function(path) {\n\treturn this.req.hostname(path);\n};\n\nController.prototype.resource = function(name, key) {\n\treturn F.resource(name, key);\n};\n\n/**\n * Error caller\n * @param {Error/String} err\n * @return {Controller/Function}\n */\nController.prototype.error = function(err) {\n\tvar self = this;\n\n\t// Custom errors\n\tif (err instanceof ErrorBuilder) {\n\t\tself.content(err);\n\t\treturn self;\n\t}\n\n\tvar result = F.error(typeof(err) === 'string' ? new Error(err) : err, self.name, self.uri);\n\n\tif (err === undefined)\n\t\treturn result;\n\n\tif (self.subscribe) {\n\t\tself.subscribe.exception = err;\n\t\tself.exception = err;\n\t}\n\n\treturn self;\n};\n\nController.prototype.invalid = function(status) {\n\tvar self = this;\n\n\tif (status)\n\t\tself.status = status;\n\n\tvar builder = new ErrorBuilder();\n\tsetImmediate(n => self.content(builder));\n\treturn builder;\n};\n\n/**\n * Registers a new problem\n * @param {String} message\n * @return {Controller}\n */\nController.prototype.wtf = Controller.prototype.problem = function(message) {\n\tF.problem(message, this.name, this.uri, this.ip);\n\treturn this;\n};\n\n/**\n * Registers a new change\n * @param {String} message\n * @return {Controller}\n */\nController.prototype.change = function(message) {\n\tF.change(message, this.name, this.uri, this.ip);\n\treturn this;\n};\n\n/**\n * Trace\n * @param {String} message\n * @return {Controller}\n */\nController.prototype.trace = function(message) {\n\tF.trace(message, this.name, this.uri, this.ip);\n\treturn this;\n};\n\n/**\n * Transfer to new route\n * @param {String} url Relative URL.\n * @param {String Array} flags Route flags (optional).\n * @return {Boolean}\n */\nController.prototype.transfer = function(url, flags) {\n\n\tvar self = this;\n\tvar length = F.routes.web.length;\n\tvar path = framework_internal.routeSplit(url.trim());\n\n\tvar isSystem = url[0] === '#';\n\tvar noFlag = !flags || flags.length === 0 ? true : false;\n\tvar selected = null;\n\n\tself.req.$isAuthorized = true;\n\n\tfor (var i = 0; i < length; i++) {\n\n\t\tvar route = F.routes.web[i];\n\n\t\tif (route.isASTERIX) {\n\t\t\tif (!framework_internal.routeCompare(path, route.url, isSystem, true))\n\t\t\t\tcontinue;\n\t\t} else {\n\t\t\tif (!framework_internal.routeCompare(path, route.url, isSystem))\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tif (noFlag) {\n\t\t\tselected = route;\n\t\t\tbreak;\n\t\t}\n\n\t\tif (route.flags && route.flags.length) {\n\t\t\tvar result = framework_internal.routeCompareFlags(route.flags, flags, true);\n\t\t\tif (result === -1)\n\t\t\t\tself.req.$isAuthorized = false;\n\t\t\tif (result < 1)\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tselected = route;\n\t\tbreak;\n\t}\n\n\n\tif (!selected)\n\t\treturn false;\n\n\tself.cancel();\n\tself.req.path = EMPTYARRAY;\n\tself.subscribe.isTransfer = true;\n\tself.subscribe.success();\n\tself.subscribe.route = selected;\n\tself.subscribe.execute(404);\n\treturn true;\n\n};\n\nController.prototype.cancel = function() {\n\tthis.isCanceled = true;\n\treturn this;\n};\n\nController.prototype.log = function() {\n\tF.log.apply(framework, arguments);\n\treturn this;\n};\n\nController.prototype.logger = function() {\n\tF.logger.apply(framework, arguments);\n\treturn this;\n};\n\nController.prototype.meta = function() {\n\tvar self = this;\n\n\tif (arguments[0])\n\t\tself.repository[REPOSITORY_META_TITLE] = arguments[0];\n\n\tif (arguments[1])\n\t\tself.repository[REPOSITORY_META_DESCRIPTION] = arguments[1];\n\n\tif (arguments[2] && arguments[2].length)\n\t\tself.repository[REPOSITORY_META_KEYWORDS] = arguments[2] instanceof Array ? arguments[2].join(', ') : arguments[2];\n\n\tif (arguments[3])\n\t\tself.repository[REPOSITORY_META_IMAGE] = arguments[3];\n\n\treturn self;\n};\n\nController.prototype.$dns = function(value) {\n\n\tvar builder = '';\n\tvar length = arguments.length;\n\n\tfor (var i = 0; i < length; i++)\n\t\tbuilder += '<link rel=\"dns-prefetch\" href=\"' + this._preparehostname(arguments[i]) + '\" />';\n\n\tthis.head(builder);\n\treturn '';\n};\n\nController.prototype.$prefetch = function() {\n\n\tvar builder = '';\n\tvar length = arguments.length;\n\n\tfor (var i = 0; i < length; i++)\n\t\tbuilder += '<link rel=\"prefetch\" href=\"' + this._preparehostname(arguments[i]) + '\" />';\n\n\tthis.head(builder);\n\treturn '';\n};\n\nController.prototype.$prerender = function(value) {\n\n\tvar builder = '';\n\tvar length = arguments.length;\n\n\tfor (var i = 0; i < length; i++)\n\t\tbuilder += '<link rel=\"prerender\" href=\"' + this._preparehostname(arguments[i]) + '\" />';\n\n\tthis.head(builder);\n\treturn '';\n};\n\nController.prototype.$next = function(value) {\n\tthis.head('<link rel=\"next\" href=\"' + this._preparehostname(value) + '\" />');\n\treturn '';\n};\n\nController.prototype.$prev = function(value) {\n\tthis.head('<link rel=\"prev\" href=\"' + this._preparehostname(value) + '\" />');\n\treturn '';\n};\n\nController.prototype.$canonical = function(value) {\n\tthis.head('<link rel=\"canonical\" href=\"' + this._preparehostname(value) + '\" />');\n\treturn '';\n};\n\nController.prototype.$meta = function() {\n\tvar self = this;\n\n\tif (arguments.length) {\n\t\tself.meta.apply(self, arguments);\n\t\treturn '';\n\t}\n\n\tF.emit('controller-render-meta', self);\n\tvar repository = self.repository;\n\treturn F.onMeta.call(self, repository[REPOSITORY_META_TITLE], repository[REPOSITORY_META_DESCRIPTION], repository[REPOSITORY_META_KEYWORDS], repository[REPOSITORY_META_IMAGE]);\n};\n\nController.prototype.title = function(value) {\n\tthis.$title(value);\n\treturn this;\n};\n\nController.prototype.description = function(value) {\n\tthis.$description(value);\n\treturn this;\n};\n\nController.prototype.keywords = function(value) {\n\tthis.$keywords(value);\n\treturn this;\n};\n\nController.prototype.author = function(value) {\n\tthis.$author(value);\n\treturn this;\n};\n\nController.prototype.$title = function(value) {\n\tif (value)\n\t\tthis.repository[REPOSITORY_META_TITLE] = value;\n\treturn '';\n};\n\nController.prototype.$title2 = function(value) {\n\tvar current = this.repository[REPOSITORY_META_TITLE];\n\tif (value)\n\t\tthis.repository[REPOSITORY_META_TITLE] = (current ? current : '') + value;\n\treturn '';\n};\n\nController.prototype.$description = function(value) {\n\tif (value)\n\t\tthis.repository[REPOSITORY_META_DESCRIPTION] = value;\n\treturn '';\n};\n\nController.prototype.$keywords = function(value) {\n\tif (value && value.length)\n\t\tthis.repository[REPOSITORY_META_KEYWORDS] = value instanceof Array ? value.join(', ') : value;\n\treturn '';\n};\n\nController.prototype.$author = function(value) {\n\tif (value)\n\t\tthis.repository[REPOSITORY_META_AUTHOR] = value;\n\treturn '';\n};\n\nController.prototype.sitemap_navigation = function(name, language) {\n\treturn F.sitemap_navigation(name, language || this.language);\n};\n\nController.prototype.sitemap_url = function(name, a, b, c, d, e, f) {\n\tif (!name)\n\t\tname = this.repository[REPOSITORY_SITEMAP];\n\tvar item = F.sitemap(name, true, this.language);\n\treturn item ? item.url.format(a, b, c, d, e, f) : '';\n};\n\nController.prototype.sitemap_name = function(name, a, b, c, d, e, f) {\n\tif (!name)\n\t\tname = this.repository[REPOSITORY_SITEMAP];\n\tvar item = F.sitemap(name, true, this.language);\n\treturn item ? item.name.format(a, b, c, d, e, f) : '';\n};\n\nController.prototype.sitemap_change = function(name, type, a, b, c, d, e, f) {\n\n\tvar self = this;\n\tvar sitemap = self.repository[REPOSITORY_SITEMAP];\n\n\tif (!sitemap)\n\t\tsitemap = self.sitemap(name);\n\n\tif (!sitemap.$cloned) {\n\t\tsitemap = U.clone(sitemap);\n\t\tsitemap.$cloned = true;\n\t\tself.repository[REPOSITORY_SITEMAP] = sitemap;\n\t}\n\n\tvar isFn = typeof(a) === 'function';\n\n\tfor (var i = 0, length = sitemap.length; i < length; i++) {\n\n\t\tvar item = sitemap[i];\n\t\tif (item.id !== name)\n\t\t\tcontinue;\n\n\t\tvar tmp = item[type];\n\n\t\tif (isFn)\n\t\t\titem[type] = a(item[type]);\n\t\telse if (type === 'name')\n\t\t\titem[type] = item.formatName ? item[type].format(a, b, c, d, e, f) : a;\n\t\telse if (type === 'url')\n\t\t\titem[type] = item.formatUrl ? item[type].format(a, b, c, d, e, f) : a;\n\t\telse\n\t\t\titem[type] = a;\n\n\t\tif (type === 'name' && self.repository[REPOSITORY_META_TITLE] === tmp)\n\t\t\tself.repository[REPOSITORY_META_TITLE] = item[type];\n\n\t\treturn self;\n\t}\n\n\treturn self;\n};\n\nController.prototype.sitemap_replace = function(name, title, url) {\n\tvar self = this;\n\tvar sitemap = self.repository[REPOSITORY_SITEMAP];\n\tif (!sitemap)\n\t\tsitemap = self.sitemap(name);\n\n\tif (!sitemap.$cloned) {\n\t\tsitemap = U.clone(sitemap);\n\t\tsitemap.$cloned = true;\n\t\tself.repository[REPOSITORY_SITEMAP] = sitemap;\n\t}\n\n\tfor (var i = 0, length = sitemap.length; i < length; i++) {\n\t\tvar item = sitemap[i];\n\t\tif (item.id !== name)\n\t\t\tcontinue;\n\t\tvar is = self.repository[REPOSITORY_META_TITLE] === item.name;\n\t\titem.name = typeof(title) === 'function' ? title(item.name) : item.formatName ? item.name.format(title) : title;\n\t\titem.url = typeof(url) === 'function' ? url(item.url) : item.formatUrl ? item.url.format(url) : url;\n\t\tif (is)\n\t\t\tself.repository[REPOSITORY_META_TITLE] = item.name;\n\t\treturn self;\n\t}\n\n\treturn self;\n};\n\nController.prototype.$sitemap_change = function(name, type, value, format) {\n\tthis.sitemap_change.apply(this, arguments);\n\treturn '';\n};\n\nController.prototype.$sitemap_replace = function(name, title, url, format) {\n\tthis.sitemap_replace.apply(this, arguments);\n\treturn '';\n};\n\nController.prototype.sitemap = function(name) {\n\tvar self = this;\n\tvar sitemap;\n\n\tif (name instanceof Array) {\n\t\tself.repository[REPOSITORY_SITEMAP] = name;\n\t\treturn self;\n\t}\n\n\tif (!name) {\n\t\tsitemap = self.repository[REPOSITORY_SITEMAP];\n\t\treturn sitemap ? sitemap : self.repository.sitemap || EMPTYARRAY;\n\t}\n\n\tsitemap = F.sitemap(name, false, self.language);\n\tself.repository[REPOSITORY_SITEMAP] = sitemap;\n\tif (!self.repository[REPOSITORY_META_TITLE]) {\n\t\tsitemap = sitemap.last();\n\t\tif (sitemap)\n\t\t\tself.repository[REPOSITORY_META_TITLE] = sitemap.name;\n\t}\n\n\treturn self.repository[REPOSITORY_SITEMAP];\n};\n\nController.prototype.$sitemap = function(name) {\n\tvar self = this;\n\tself.sitemap.apply(self, arguments);\n\treturn '';\n};\n\nController.prototype.module = function(name) {\n\treturn F.module(name);\n};\n\nController.prototype.layout = function(name) {\n\tvar self = this;\n\tself.layoutName = name;\n\treturn self;\n};\n\nController.prototype.theme = function(name) {\n\tvar self = this;\n\tself.themeName = name;\n\treturn self;\n};\n\n/**\n * Layout setter for views\n * @param {String} name Layout name\n * @return {String}\n */\nController.prototype.$layout = function(name) {\n\tvar self = this;\n\tself.layoutName = name;\n\treturn '';\n};\n\nController.prototype.model = function(name) {\n\treturn F.model(name);\n};\n\n/**\n * Send e-mail\n * @param {String or Array} address E-mail address.\n * @param {String} subject E-mail subject.\n * @param {String} view View name.\n * @param {Object} model Optional.\n * @param {Function(err)} callback Optional.\n * @return {MailMessage}\n */\nController.prototype.mail = function(address, subject, view, model, callback) {\n\n\tif (typeof(model) === 'function') {\n\t\tcallback = model;\n\t\tmodel = null;\n\t}\n\n\tvar self = this;\n\n\tif (typeof(self.language) === 'string')\n\t\tsubject = subject.indexOf('@(') === -1 ? F.translate(self.language, subject) : F.translator(self.language, subject);\n\n\t// Backup layout\n\tvar layoutName = self.layoutName;\n\tvar body = self.view(view, model, true);\n\tself.layoutName = layoutName;\n\treturn F.onMail(address, subject, body, callback);\n};\n\n/*\n\tCheck if ETag or Last Modified has modified\n\t@compare {String or Date}\n\t@strict {Boolean} :: if strict then use equal date else use great than date (default: false)\n\n\tif @compare === {String} compare if-none-match\n\tif @compare === {Date} compare if-modified-since\n\n\treturn {Boolean};\n*/\nController.prototype.notModified = function(compare, strict) {\n\treturn F.notModified(this.req, this.res, compare, strict);\n};\n\n/*\n\tSet last modified header or Etag\n\t@value {String or Date}\n\n\tif @value === {String} set ETag\n\tif @value === {Date} set LastModified\n\n\treturn {Controller};\n*/\nController.prototype.setModified = function(value) {\n\tF.setModified(this.req, this.res, value);\n\treturn this;\n};\n\n/**\n * Sets expire headers\n * @param {Date} date\n */\nController.prototype.setExpires = function(date) {\n\tdate && this.res.setHeader('Expires', date.toUTCString());\n\treturn this;\n};\n\nController.prototype.$template = function(name, model, expire, key) {\n\treturn this.$viewToggle(true, name, model, expire, key);\n};\n\nController.prototype.$templateToggle = function(visible, name, model, expire, key) {\n\treturn this.$viewToggle(visible, name, model, expire, key);\n};\n\nController.prototype.$view = function(name, model, expire, key) {\n\treturn this.$viewToggle(true, name, model, expire, key);\n};\n\nController.prototype.$viewCompile = function(body, model) {\n\tvar self = this;\n\tvar layout = self.layoutName;\n\tself.layoutName = '';\n\tvar value = self.viewCompile(body, model, null, true);\n\tself.layoutName = layout;\n\treturn value || '';\n};\n\nController.prototype.$viewToggle = function(visible, name, model, expire, key) {\n\n\tif (!visible)\n\t\treturn '';\n\n\tvar self = this;\n\tvar cache;\n\n\tif (expire) {\n\t\tcache = '$view.' + name + '.' + (key || '');\n\t\tvar output = self.cache.read2(cache);\n\t\tif (output)\n\t\t\treturn output;\n\t}\n\n\tvar layout = self.layoutName;\n\tself.layoutName = '';\n\tvar value = self.view(name, model, null, true);\n\tself.layoutName = layout;\n\n\tif (!value)\n\t\treturn '';\n\n\texpire && self.cache.add(cache, value, expire);\n\treturn value;\n};\n\n/**\n * Adds a place into the places.\n * @param {String} name A place name.\n * @param {String} arg1 A content 1, optional\n * @param {String} arg2 A content 2, optional\n * @param {String} argN A content 2, optional\n * @return {String/Controller} String is returned when the method contains only `name` argument\n */\nController.prototype.place = function(name) {\n\n\tvar key = REPOSITORY_PLACE + '_' + name;\n\tvar length = arguments.length;\n\n\tif (length === 1)\n\t\treturn this.repository[key] || '';\n\n\tvar output = '';\n\tfor (var i = 1; i < length; i++) {\n\t\tvar val = arguments[i];\n\n\t\tif (val)\n\t\t\tval = val.toString();\n\t\telse\n\t\t\tval = '';\n\n\t\tif (val.endsWith('.js'))\n\t\t\tval = '<script src=\"' + val + '\"></script>';\n\n\t\toutput += val;\n\t}\n\n\tthis.repository[key] = (this.repository[key] || '') + output;\n\treturn this;\n};\n\n/**\n * Adds a content into the section\n * @param {String} name A section name.\n * @param {String} value A content.\n * @param {Boolean} replace Optional, default `false` otherwise concats contents.\n * @return {String/Controller} String is returned when the method contains only `name` argument\n */\nController.prototype.section = function(name, value, replace) {\n\n\tvar key = '$section_' + name;\n\n\tif (value === undefined)\n\t\treturn this.repository[key];\n\n\tif (replace) {\n\t\tthis.repository[key] = value;\n\t\treturn this;\n\t}\n\n\tif (this.repository[key])\n\t\tthis.repository[key] += value;\n\telse\n\t\tthis.repository[key] = value;\n\n\treturn this;\n};\n\nController.prototype.$place = function() {\n\tvar self = this;\n\tif (arguments.length === 1)\n\t\treturn self.place.apply(self, arguments);\n\tself.place.apply(self, arguments);\n\treturn '';\n};\n\nController.prototype.$url = function(host) {\n\treturn host ? this.req.hostname(this.url) : this.url;\n};\n\nController.prototype.$helper = function(name) {\n\treturn this.helper.apply(this, arguments);\n};\n\nfunction querystring_encode(value, def) {\n\treturn value != null ? value instanceof Date ? encodeURIComponent(value.format()) : typeof(value) === 'string' ? encodeURIComponent(value) : value.toString() : def || '';\n}\n\n// @{href({ key1: 1, key2: 2 })}\n// @{href('key', 'value')}\nController.prototype.href = function(key, value) {\n\tvar self = this;\n\n\tif (!arguments.length) {\n\t\tvar val = Qs.stringify(self.query);\n\t\treturn val ? '?' + val : '';\n\t}\n\n\tvar type = typeof(key);\n\tvar obj;\n\n\tif (type === 'string') {\n\n\t\tvar cachekey = '$href' + key;\n\t\tvar str = self[cachekey] || '';\n\n\t\tif (!str) {\n\n\t\t\tobj = U.copy(self.query);\n\t\t\tfor (var i = 2; i < arguments.length; i++)\n\t\t\t\tobj[arguments[i]] = undefined;\n\n\t\t\tobj[key] = '\\0';\n\n\t\t\tvar arr = Object.keys(obj);\n\t\t\tfor (var i = 0, length = arr.length; i < length; i++) {\n\t\t\t\tvar val = obj[arr[i]];\n\t\t\t\tif (val !== undefined)\n\t\t\t\t\tstr += (str ? '&' : '') + arr[i] + '=' + (key === arr[i] ? '\\0' : querystring_encode(val));\n\t\t\t}\n\t\t\tself[cachekey] = str;\n\t\t}\n\n\t\tstr = str.replace('\\0', querystring_encode(value, self.query[key]));\n\n\t\tfor (var i = 2; i < arguments.length; i++) {\n\t\t\tvar beg = str.indexOf(arguments[i] + '=');\n\t\t\tif (beg === -1)\n\t\t\t\tcontinue;\n\t\t\tvar end = str.indexOf('&', beg);\n\t\t\tstr = str.substring(0, beg) + str.substring(end === -1 ? str.length : end + 1);\n\t\t}\n\n\t\treturn str ? '?' + str : '';\n\t}\n\n\tif (value) {\n\t\tobj = U.copy(self.query);\n\t\tU.extend(obj, value);\n\t}\n\n\tif (value != null)\n\t\tobj[key] = value;\n\n\tobj = Qs.stringify(obj);\n\n\tif (value === undefined && type === 'string')\n\t\tobj += (obj ? '&' : '') + key;\n\n\treturn self.url + (obj ? '?' + obj : '');\n};\n\nController.prototype.$checked = function(bool, charBeg, charEnd) {\n\treturn this.$isValue(bool, charBeg, charEnd, 'checked=\"checked\"');\n};\n\nController.prototype.$disabled = function(bool, charBeg, charEnd) {\n\treturn this.$isValue(bool, charBeg, charEnd, 'disabled=\"disabled\"');\n};\n\nController.prototype.$selected = function(bool, charBeg, charEnd) {\n\treturn this.$isValue(bool, charBeg, charEnd, 'selected=\"selected\"');\n};\n\n/**\n * Fake function for assign value\n * @private\n * @param {Object} value Value to eval.\n * return {String} Returns empty string.\n */\nController.prototype.$set = function(value) {\n\treturn '';\n};\n\nController.prototype.$readonly = function(bool, charBeg, charEnd) {\n\treturn this.$isValue(bool, charBeg, charEnd, 'readonly=\"readonly\"');\n};\n\nController.prototype.$header = function(name, value) {\n\tthis.header(name, value);\n\treturn '';\n};\n\nController.prototype.$text = function(model, name, attr) {\n\treturn this.$input(model, 'text', name, attr);\n};\n\nController.prototype.$password = function(model, name, attr) {\n\treturn this.$input(model, 'password', name, attr);\n};\n\nController.prototype.$hidden = function(model, name, attr) {\n\treturn this.$input(model, 'hidden', name, attr);\n};\n\nController.prototype.$radio = function(model, name, value, attr) {\n\n\tif (typeof(attr) === 'string') {\n\t\tvar label = attr;\n\t\tattr = SINGLETON('!$radio');\n\t\tattr.label = label;\n\t}\n\n\tattr.value = value;\n\treturn this.$input(model, 'radio', name, attr);\n};\n\nController.prototype.$checkbox = function(model, name, attr) {\n\n\tif (typeof(attr) === 'string') {\n\t\tvar label = attr;\n\t\tattr = SINGLETON('!$checkbox');\n\t\tattr.label = label;\n\t}\n\n\treturn this.$input(model, 'checkbox', name, attr);\n};\n\nController.prototype.$textarea = function(model, name, attr) {\n\n\tvar builder = '<textarea';\n\n\tif (typeof(attr) !== 'object')\n\t\tattr = EMPTYOBJECT;\n\n\tbuilder += ' name=\"' + name + '\" id=\"' + (attr.id || name) + ATTR_END;\n\n\tfor (var key in attr) {\n\t\tswitch (key) {\n\t\t\tcase 'name':\n\t\t\tcase 'id':\n\t\t\t\tbreak;\n\t\t\tcase 'required':\n\t\t\tcase 'disabled':\n\t\t\tcase 'readonly':\n\t\t\tcase 'value':\n\t\t\t\tbuilder += ' ' + key + '=\"' + key + ATTR_END;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbuilder += ' ' + key + '=\"' + attr[key].toString().encode() + ATTR_END;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (model === undefined)\n\t\treturn builder + '></textarea>';\n\n\treturn builder + '>' + ((model[name] || attr.value) || '') + '</textarea>';\n};\n\nController.prototype.$input = function(model, type, name, attr) {\n\n\tvar builder = ['<input'];\n\n\tif (typeof(attr) !== 'object')\n\t\tattr = EMPTYOBJECT;\n\n\tvar val = attr.value || '';\n\n\tbuilder += ' type=\"' + type + ATTR_END;\n\n\tif (type === 'radio')\n\t\tbuilder += ' name=\"' + name + ATTR_END;\n\telse\n\t\tbuilder += ' name=\"' + name + '\" id=\"' + (attr.id || name) + ATTR_END;\n\n\tif (attr.autocomplete) {\n\t\tif (attr.autocomplete === true || attr.autocomplete === 'on')\n\t\t\tbuilder += ' autocomplete=\"on\"';\n\t\telse\n\t\t\tbuilder += ' autocomplete=\"off\"';\n\t}\n\n\tfor (var key in attr) {\n\t\tswitch (key) {\n\t\t\tcase 'name':\n\t\t\tcase 'id':\n\t\t\tcase 'type':\n\t\t\tcase 'autocomplete':\n\t\t\tcase 'checked':\n\t\t\tcase 'value':\n\t\t\tcase 'label':\n\t\t\t\tbreak;\n\t\t\tcase 'required':\n\t\t\tcase 'disabled':\n\t\t\tcase 'readonly':\n\t\t\tcase 'autofocus':\n\t\t\t\tbuilder += ' ' + key + '=\"' + key + ATTR_END;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbuilder += ' ' + key + '=\"' + attr[key].toString().encode() + ATTR_END;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tvar value = '';\n\n\tif (model !== undefined) {\n\t\tvalue = model[name];\n\n\t\tif (type === 'checkbox') {\n\t\t\tif (value == '1' || value === 'true' || value === true || value === 'on')\n\t\t\t\tbuilder += ' checked=\"checked\"';\n\t\t\tvalue = val || '1';\n\t\t}\n\n\t\tif (type === 'radio') {\n\n\t\t\tval = (val || '').toString();\n\n\t\t\tif (value.toString() === val)\n\t\t\t\tbuilder += ' checked=\"checked\"';\n\n\t\t\tvalue = val || '';\n\t\t}\n\t}\n\n\tif (value === undefined)\n\t\tbuilder += ' value=\"' + (attr.value || '').toString().encode() + ATTR_END;\n\telse\n\t\tbuilder += ' value=\"' + (value || '').toString().encode() + ATTR_END;\n\n\tbuilder += ' />';\n\treturn attr.label ? ('<label>' + builder + ' <span>' + attr.label + '</span></label>') : builder;\n};\n\nController.prototype._preparehostname = function(value) {\n\tif (!value)\n\t\treturn value;\n\tvar tmp = value.substring(0, 5);\n\treturn tmp !== 'http:' && tmp !== 'https' && (tmp[0] !== '/' || tmp[1] !== '/') ? this.host(value) : value;\n};\n\nController.prototype.head = function() {\n\n\tvar self = this;\n\n\tif (!arguments.length) {\n\t\t// OBSOLETE: this is useless\n\t\t// F.emit('controller-render-head', self);\n\t\tvar author = self.repository[REPOSITORY_META_AUTHOR] || self.config.author;\n\t\treturn (author ? '<meta name=\"author\" content=\"' + author + '\" />' : '') + (self.repository[REPOSITORY_HEAD] || '') + (self.repository[REPOSITORY_COMPONENTS] ? F.components.links : '');\n\t}\n\n\tvar header = (self.repository[REPOSITORY_HEAD] || '');\n\n\tfor (var i = 0; i < arguments.length; i++) {\n\n\t\tvar val = arguments[i];\n\t\tvar key = '$head-' + val;\n\n\t\tif (self.repository[key])\n\t\t\tcontinue;\n\n\t\tself.repository[key] = true;\n\n\t\tif (val[0] === '<') {\n\t\t\theader += val;\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar tmp = val.substring(0, 7);\n\t\tvar is = (tmp[0] !== '/' && tmp[1] !== '/') && tmp !== 'http://' && tmp !== 'https:/';\n\t\tvar ext = U.getExtension(val);\n\t\tif (ext === 'css')\n\t\t\theader += '<link type=\"text/css\" rel=\"stylesheet\" href=\"' + (is ? self.routeStyle(val) : val) + '\" />';\n\t\telse if (ext === 'js')\n\t\t\theader += '<script src=\"' + (is ? self.routeScript(val) : val) + '\"></script>';\n\t}\n\n\tself.repository[REPOSITORY_HEAD] = header;\n\treturn self;\n};\n\nController.prototype.$head = function() {\n\tthis.head.apply(this, arguments);\n\treturn '';\n};\n\nController.prototype.$isValue = function(bool, charBeg, charEnd, value) {\n\tif (!bool)\n\t\treturn '';\n\tcharBeg = charBeg || ' ';\n\tcharEnd = charEnd || '';\n\treturn charBeg + value + charEnd;\n};\n\nController.prototype.$modified = function(value) {\n\n\tvar self = this;\n\tvar type = typeof(value);\n\tvar date;\n\n\tif (type === 'number') {\n\t\tdate = new Date(value);\n\t} else if (type === 'string') {\n\n\t\tvar d = value.split(' ');\n\n\t\tdate = d[0].split('-');\n\t\tvar time = (d[1] || '').split(':');\n\n\t\tvar year = U.parseInt(date[0] || '');\n\t\tvar month = U.parseInt(date[1] || '') - 1;\n\t\tvar day = U.parseInt(date[2] || '') - 1;\n\n\t\tif (month < 0)\n\t\t\tmonth = 0;\n\n\t\tif (day < 0)\n\t\t\tday = 0;\n\n\t\tvar hour = U.parseInt(time[0] || '');\n\t\tvar minute = U.parseInt(time[1] || '');\n\t\tvar second = U.parseInt(time[2] || '');\n\n\t\tdate = new Date(year, month, day, hour, minute, second, 0);\n\t} else if (U.isDate(value))\n\t\tdate = value;\n\n\tdate && self.setModified(date);\n\treturn '';\n};\n\nController.prototype.$etag = function(value) {\n\tthis.setModified(value);\n\treturn '';\n};\n\nController.prototype.$options = function(arr, selected, name, value) {\n\n\tvar type = typeof(arr);\n\tif (!arr)\n\t\treturn '';\n\n\tvar isObject = false;\n\tvar tmp = null;\n\n\tif (!(arr instanceof Array) && type === 'object') {\n\t\tisObject = true;\n\t\ttmp = arr;\n\t\tarr = Object.keys(arr);\n\t}\n\n\tif (!U.isArray(arr))\n\t\tarr = [arr];\n\n\tselected = selected || '';\n\n\tvar options = '';\n\n\tif (!isObject) {\n\t\tif (value === undefined)\n\t\t\tvalue = value || name || 'value';\n\t\tif (name === undefined)\n\t\t\tname = name || 'name';\n\t}\n\n\tvar isSelected = false;\n\tvar length = 0;\n\n\tlength = arr.length;\n\n\tfor (var i = 0; i < length; i++) {\n\n\t\tvar o = arr[i];\n\t\tvar type = typeof(o);\n\t\tvar text = '';\n\t\tvar val = '';\n\t\tvar sel = false;\n\n\t\tif (isObject) {\n\t\t\tif (name === true) {\n\t\t\t\tval = tmp[o];\n\t\t\t\ttext = o;\n\t\t\t\tif (!value)\n\t\t\t\t\tvalue = '';\n\t\t\t} else {\n\t\t\t\tval = o;\n\t\t\t\ttext = tmp[o];\n\t\t\t\tif (!text)\n\t\t\t\t\ttext = '';\n\t\t\t}\n\n\t\t} else if (type === 'object') {\n\n\t\t\ttext = (o[name] || '');\n\t\t\tval = (o[value] || '');\n\n\t\t\tif (typeof(text) === 'function')\n\t\t\t\ttext = text(i);\n\n\t\t\tif (typeof(val) === 'function')\n\t\t\t\tval = val(i, text);\n\n\t\t} else {\n\t\t\ttext = o;\n\t\t\tval = o;\n\t\t}\n\n\t\tif (!isSelected) {\n\t\t\tsel = val == selected;\n\t\t\tisSelected = sel;\n\t\t}\n\n\t\toptions += '<option value=\"' + val.toString().encode() + '\"' + (sel ? ' selected=\"selected\"' : '') + '>' + text.toString().encode() + '</option>';\n\t}\n\n\treturn options;\n};\n\n/**\n * Append <script> TAG\n * @private\n * @return {String}\n */\nController.prototype.$script = function() {\n\treturn arguments.length === 1 ? this.$js(arguments[0]) : this.$js.apply(this, arguments);\n};\n\n/**\n * Append <script> TAG\n * @private\n * @return {String}\n */\nController.prototype.$js = function() {\n\tvar self = this;\n\tvar builder = '';\n\tfor (var i = 0; i < arguments.length; i++)\n\t\tbuilder += self.routeScript(arguments[i], true);\n\treturn builder;\n};\n\n/**\n * Append <script> or <style> TAG\n * @private\n * @return {String}\n */\nController.prototype.$absolute = function(files, base) {\n\n\tvar self = this;\n\tvar builder;\n\tvar ftype;\n\n\tif (!base)\n\t\tbase = self.hostname();\n\n\tif (files instanceof Array) {\n\n\t\tftype = U.getExtension(files[0]);\n\t\tbuilder = '';\n\n\t\tfor (var i = 0, length = files.length; i < length; i++) {\n\t\t\tswitch (ftype) {\n\t\t\t\tcase 'js':\n\t\t\t\t\tbuilder += self.routeScript(files[i], true, base);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'css':\n\t\t\t\t\tbuilder += self.routeStyle(files[i], true, base);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbuilder += self.routeStatic(files[i], base);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn builder;\n\t}\n\n\tftype = U.getExtension(files);\n\n\tswitch (ftype) {\n\t\tcase 'js':\n\t\t\treturn self.routeScript(files, true, base);\n\t\tcase 'css':\n\t\t\treturn self.routeStyle(files, true, base);\n\t}\n\n\treturn self.routeStatic(files, base);\n};\n\nController.prototype.$import = function() {\n\n\tvar self = this;\n\tvar builder = '';\n\n\tfor (var i = 0; i < arguments.length; i++) {\n\t\tvar filename = arguments[i];\n\n\t\tif (filename === 'head') {\n\t\t\tbuilder += self.head();\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (filename === 'meta') {\n\t\t\tbuilder += self.$meta();\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (filename === 'components')\n\t\t\tcontinue;\n\n\t\tvar extension = filename.substring(filename.lastIndexOf('.'));\n\t\tvar tag = filename[0] !== '!';\n\t\tif (!tag)\n\t\t\tfilename = filename.substring(1);\n\n\t\tif (filename[0] === '#')\n\t\t\textension = '.js';\n\n\t\tswitch (extension) {\n\t\t\tcase '.js':\n\t\t\t\tbuilder += self.routeScript(filename, tag);\n\t\t\t\tbreak;\n\t\t\tcase '.css':\n\t\t\t\tbuilder += self.routeStyle(filename, tag);\n\t\t\t\tbreak;\n\t\t\tcase '.ico':\n\t\t\t\tbuilder += self.$favicon(filename);\n\t\t\t\tbreak;\n\t\t\tcase '.mp4':\n\t\t\tcase '.avi':\n\t\t\tcase '.ogv':\n\t\t\tcase '.webm':\n\t\t\tcase '.mov':\n\t\t\tcase '.mpg':\n\t\t\tcase '.mpe':\n\t\t\tcase '.mpeg':\n\t\t\tcase '.m4v':\n\t\t\t\tbuilder += self.routeVideo(filename);\n\t\t\t\tbreak;\n\t\t\tcase '.jpg':\n\t\t\tcase '.gif':\n\t\t\tcase '.png':\n\t\t\tcase '.jpeg':\n\t\t\t\tbuilder += self.routeImage(filename);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbuilder += self.routeStatic(filename);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn builder;\n};\n\n/**\n * Append <link> TAG\n * @private\n * @return {String}\n */\nController.prototype.$css = function() {\n\n\tvar self = this;\n\tvar builder = '';\n\n\tfor (var i = 0; i < arguments.length; i++)\n\t\tbuilder += self.routeStyle(arguments[i], true);\n\n\treturn builder;\n};\n\nController.prototype.$image = function(name, width, height, alt, className) {\n\n\tvar style = '';\n\n\tif (typeof(width) === 'object') {\n\t\theight = width.height;\n\t\talt = width.alt;\n\t\tclassName = width.class;\n\t\tstyle = width.style;\n\t\twidth = width.width;\n\t}\n\n\tvar builder = '<img src=\"' + this.routeImage(name) + ATTR_END;\n\n\tif (width > 0)\n\t\tbuilder += ' width=\"' + width + ATTR_END;\n\n\tif (height > 0)\n\t\tbuilder += ' height=\"' + height + ATTR_END;\n\n\tif (alt)\n\t\tbuilder += ' alt=\"' + alt.encode() + ATTR_END;\n\n\tif (className)\n\t\tbuilder += ' class=\"' + className + ATTR_END;\n\n\tif (style)\n\t\tbuilder += ' style=\"' + style + ATTR_END;\n\n\treturn builder + ' border=\"0\" />';\n};\n\n/**\n * Create URL: DOWNLOAD (<a href=\"...\" download=\"...\")\n * @private\n * @param {String} filename\n * @param {String} innerHTML\n * @param {String} downloadName Optional.\n * @param {String} className Optional.\n * @return {String}\n */\nController.prototype.$download = function(filename, innerHTML, downloadName, className) {\n\tvar builder = '<a href=\"' + F.routeDownload(filename) + ATTR_END;\n\n\tif (downloadName)\n\t\tbuilder += ' download=\"' + downloadName + ATTR_END;\n\n\tif (className)\n\t\tbuilder += ' class=\"' + className + ATTR_END;\n\n\treturn builder + '>' + (innerHTML || filename) + '</a>';\n};\n\n/**\n * Serialize object into the JSON\n * @private\n * @param {Object} obj\n * @param {String} id Optional.\n * @param {Boolean} beautify Optional.\n * @return {String}\n */\nController.prototype.$json = function(obj, id, beautify, replacer) {\n\n\tif (typeof(id) === 'boolean') {\n\t\treplacer = beautify;\n\t\tbeautify = id;\n\t\tid = null;\n\t}\n\n\tif (typeof(beautify) === 'function') {\n\t\treplacer = beautify;\n\t\tbeautify = false;\n\t}\n\n\tvar value = beautify ? JSON.stringify(obj, replacer, 4) : JSON.stringify(obj, replacer);\n\treturn id ? ('<script type=\"application/json\" id=\"' + id + '\">' + value + '</script>') : value;\n};\n\n/**\n * Append FAVICON tag\n * @private\n * @param {String} name\n * @return {String}\n */\nController.prototype.$favicon = function(name) {\n\n\tvar contentType = 'image/x-icon';\n\n\tif (name == null)\n\t\tname = 'favicon.ico';\n\n\tvar key = 'favicon#' + name;\n\tif (F.temporary.other[key])\n\t\treturn F.temporary.other[key];\n\n\tif (name.lastIndexOf('.png') !== -1)\n\t\tcontentType = 'image/png';\n\telse if (name.lastIndexOf('.gif') !== -1)\n\t\tcontentType = 'image/gif';\n\n\treturn F.temporary.other[key] = '<link rel=\"shortcut icon\" href=\"' + F.routeStatic('/' + name) + '\" type=\"' + contentType + '\" />';\n};\n\n/**\n * Route static file helper\n * @private\n * @param {String} current\n * @param {String} name\n * @param {Function} fn\n * @return {String}\n */\nController.prototype._routeHelper = function(name, fn) {\n\treturn fn.call(framework, prepare_staticurl(name, false), this.themeName);\n};\n\n/**\n * Create URL: JavaScript\n * @param {String} name\n * @param {Boolean} tag Append tag?\n * @return {String}\n */\nController.prototype.routeScript = function(name, tag, path) {\n\n\tif (name === undefined)\n\t\tname = 'default.js';\n\n\tvar url;\n\n\t// isomorphic\n\tif (name[0] === '#') {\n\t\tvar tmp = F.isomorphic[name.substring(1)];\n\t\tif (tmp)\n\t\t\turl = tmp.url;\n\t\telse {\n\t\t\tF.error('Isomorphic library {0} doesn\\'t exist.'.format(name.substring(1)));\n\t\t\treturn '';\n\t\t}\n\t} else {\n\t\turl = this._routeHelper(name, F.routeScript);\n\t\tif (path && U.isRelative(url))\n\t\t\turl = F.isWindows ? U.join(path, url) : U.join(path, url).substring(1);\n\t}\n\n\treturn tag ? '<script src=\"' + url + '\"></script>' : url;\n};\n\n/**\n * Create URL: CSS\n * @param {String} name\n * @param {Boolean} tag Append tag?\n * @return {String}\n */\nController.prototype.routeStyle = function(name, tag, path) {\n\tvar self = this;\n\n\tif (name === undefined)\n\t\tname = 'default.css';\n\n\tvar url = self._routeHelper(name, F.routeStyle);\n\tif (path && U.isRelative(url))\n\t\turl = F.isWindows ? U.join(path, url) : U.join(path, url).substring(1);\n\n\treturn tag ? '<link type=\"text/css\" rel=\"stylesheet\" href=\"' + url + '\" />' : url;\n};\n\n/**\n * Create URL: IMG\n * @param {String} name\n * @return {String}\n */\nController.prototype.routeImage = function(name) {\n\treturn this._routeHelper(name, F.routeImage);\n};\n\n/**\n * Create URL: VIDEO\n * @param {String} name\n * @return {String}\n */\nController.prototype.routeVideo = function(name) {\n\treturn this._routeHelper(name, F.routeVideo);\n};\n\n/**\n * Create URL: FONT\n * @param {String} name\n * @return {String}\n */\nController.prototype.routeFont = function(name) {\n\treturn F.routeFont(name);\n};\n\n/**\n * Create URL: DOWNLOAD\n * @param {String} name\n * @return {String}\n */\nController.prototype.routeDownload = function(name) {\n\treturn this._routeHelper(name, F.routeDownload);\n};\n\n/**\n * Create URL: static files (by the config['static-url'])\n * @param {String} name\n * @return {String}\n */\nController.prototype.routeStatic = function(name, path) {\n\tvar url = this._routeHelper(name, F.routeStatic);\n\tif (path && U.isRelative(url))\n\t\treturn F.isWindows ? U.join(path, url) : U.join(path, url).substring(1);\n\treturn url;\n};\n\n/**\n * Creates a string from the view\n * @param {String} name A view name without `.html` extension.\n * @param {Object} model A model, optional.\n * @return {String}\n */\nController.prototype.template = function(name, model) {\n\treturn this.view(name, model, true);\n};\n\n/**\n * Renders a custom helper to a string\n * @param {String} name A helper name.\n * @return {String}\n */\nController.prototype.helper = function(name) {\n\tvar helper = F.helpers[name];\n\tif (!helper)\n\t\treturn '';\n\n\tvar params = [];\n\tfor (var i = 1; i < arguments.length; i++)\n\t\tparams.push(arguments[i]);\n\n\treturn helper.apply(this, params);\n};\n\n/**\n * Response JSON\n * @param {Object} obj\n * @param {Object} headers Custom headers, optional.\n * @param {Boolean} beautify Beautify JSON.\n * @param {Function(key, value)} replacer JSON replacer.\n * @return {Controller}\n */\nController.prototype.json = function(obj, headers, beautify, replacer) {\n\tvar self = this;\n\n\tif (self.res.success || self.res.headersSent || !self.isConnected)\n\t\treturn self;\n\n\t// Checks the HEAD method\n\tif (self.req.method === 'HEAD') {\n\t\tself.subscribe.success();\n\t\tF.responseContent(self.req, self.res, self.status, EMPTYBUFFER, 'application/json', self.config['allow-gzip'], headers);\n\t\tF.stats.response.json++;\n\t\treturn self;\n\t}\n\n\tif (typeof(headers) === 'boolean') {\n\t\treplacer = beautify;\n\t\tbeautify = headers;\n\t}\n\n\tvar type = 'application/json';\n\n\tif (obj instanceof framework_builders.ErrorBuilder) {\n\t\tself.req.$language && !obj.isResourceCustom && obj.setResource(self.req.$language);\n\t\tif (obj.contentType)\n\t\t\ttype = obj.contentType;\n\t\tobj = obj.output();\n\t\tF.stats.response.errorBuilder++;\n\t} else {\n\n\t\tif (framework_builders.isSchema(obj))\n\t\t\tobj = obj.$clean();\n\n\t\tif (beautify)\n\t\t\tobj = JSON.stringify(obj, replacer, 4);\n\t\telse\n\t\t\tobj = JSON.stringify(obj, replacer);\n\t}\n\n\tself.subscribe.success();\n\tF.responseContent(self.req, self.res, self.status, obj, type, self.config['allow-gzip'], headers);\n\tF.stats.response.json++;\n\tself.precache && self.precache(obj, type, headers);\n\treturn self;\n};\n\n/**\n * Responds with JSONP\n * @param {String} name A method name.\n * @param {Object} obj Object to serialize.\n * @param {Object} headers A custom headers.\n * @param {Boolean} beautify Should be the JSON prettified? Optional, default `false`\n * @param {Function} replacer Optional, the JSON replacer.\n * @return {Controller}\n */\nController.prototype.jsonp = function(name, obj, headers, beautify, replacer) {\n\tvar self = this;\n\n\tif (self.res.success || self.res.headersSent || !self.isConnected)\n\t\treturn self;\n\n\t// Checks the HEAD method\n\tif (self.req.method === 'HEAD') {\n\t\tself.subscribe.success();\n\t\tF.responseContent(self.req, self.res, self.status, EMPTYBUFFER, 'application/x-javascript', self.config['allow-gzip'], headers);\n\t\tF.stats.response.json++;\n\t\treturn self;\n\t}\n\n\tif (typeof(headers) === 'boolean') {\n\t\treplacer = beautify;\n\t\tbeautify = headers;\n\t}\n\n\tif (!name)\n\t\tname = 'callback';\n\n\tif (obj instanceof framework_builders.ErrorBuilder) {\n\t\tself.req.$language && !obj.isResourceCustom && obj.setResource(self.req.$language);\n\t\tobj = obj.json(beautify);\n\t\tF.stats.response.errorBuilder++;\n\t} else {\n\n\t\tif (framework_builders.isSchema(obj))\n\t\t\tobj = obj.$clean();\n\n\t\tif (beautify)\n\t\t\tobj = JSON.stringify(obj, replacer, 4);\n\t\telse\n\t\t\tobj = JSON.stringify(obj, replacer);\n\t}\n\n\tself.subscribe.success();\n\tF.responseContent(self.req, self.res, self.status, name + '(' + obj + ')', 'application/x-javascript', self.config['allow-gzip'], headers);\n\tF.stats.response.json++;\n\tself.precache && self.precache(name + '(' + obj + ')', 'application/x-javascript', headers);\n\treturn self;\n};\n\n/**\n * Creates View or JSON callback\n * @param {String} view Optional, undefined or null returns JSON.\n * @return {Function}\n */\nController.prototype.callback = function(view) {\n\tvar self = this;\n\treturn function(err, data) {\n\n\t\tvar is = err instanceof framework_builders.ErrorBuilder;\n\n\t\t// NoSQL embedded database\n\t\tif (data === undefined && !U.isError(err) && !is) {\n\t\t\tdata = err;\n\t\t\terr = null;\n\t\t}\n\n\t\tif (err) {\n\t\t\tif (is && !view) {\n\t\t\t\tself.req.$language && !err.isResourceCustom && err.setResource(self.req.$language);\n\t\t\t\treturn self.content(err);\n\t\t\t}\n\t\t\treturn is && err.unexpected ? self.view500(err) : self.view404(err);\n\t\t}\n\n\t\tif (typeof(view) === 'string')\n\t\t\tself.view(view, data);\n\t\telse\n\t\t\tself.json(data);\n\t};\n};\n\nController.prototype.custom = function() {\n\tthis.subscribe.success();\n\tif (this.res.success || this.res.headersSent || !this.isConnected)\n\t\treturn false;\n\tF.responseCustom(this.req, this.res);\n\treturn true;\n};\n\n/**\n * Prevents cleaning uploaded files (need to call `controller.clear()` manually).\n * @param {Boolean} enable Optional, default `true`.\n * @return {Controller}\n */\nController.prototype.noClear = function(enable) {\n\tthis.req._manual = enable === undefined ? true : enable;\n\treturn this;\n};\n\nController.prototype.content = function(contentBody, contentType, headers) {\n\n\tvar self = this;\n\tif (self.res.success || self.res.headersSent || !self.isConnected)\n\t\treturn self;\n\n\tif (contentBody instanceof ErrorBuilder) {\n\t\tvar tmp = contentBody.output();\n\t\tif (!contentType)\n\t\t\tcontentType = contentBody.contentType || 'application/json';\n\t\tcontentBody = tmp;\n\t\tF.stats.response.errorBuilder++;\n\t}\n\n\tself.subscribe.success();\n\tF.responseContent(self.req, self.res, self.status, contentBody, contentType || CONTENTTYPE_TEXTPLAIN, self.config['allow-gzip'], headers);\n\n\tif (self.precache && self.status === 200) {\n\t\tself.layout('');\n\t\tself.precache(contentBody, contentType || CONTENTTYPE_TEXTPLAIN, headers, true);\n\t}\n\n\treturn self;\n};\n\n/**\n * Responds with plain/text body\n * @param {String} body A response body (object is serialized into the JSON automatically).\n * @param {Boolean} headers A custom headers.\n * @return {Controller}\n */\nController.prototype.plain = function(body, headers) {\n\tvar self = this;\n\n\tif (self.res.success || self.res.headersSent || !self.isConnected)\n\t\treturn self;\n\n\t// Checks the HEAD method\n\tif (self.req.method === 'HEAD') {\n\t\tself.subscribe.success();\n\t\tF.responseContent(self.req, self.res, self.status, EMPTYBUFFER, CONTENTTYPE_TEXTPLAIN, self.config['allow-gzip'], headers);\n\t\tF.stats.response.plain++;\n\t\treturn self;\n\t}\n\n\tvar type = typeof(body);\n\n\tif (body == null)\n\t\tbody = '';\n\telse if (type === 'object') {\n\t\tif (framework_builders.isSchema(body))\n\t\t\tbody = body.$clean();\n\t\tbody = body ? JSON.stringify(body, null, 4) : '';\n\t} else\n\t\tbody = body ? body.toString() : '';\n\n\tself.subscribe.success();\n\tF.responseContent(self.req, self.res, self.status, body, CONTENTTYPE_TEXTPLAIN, self.config['allow-gzip'], headers);\n\tF.stats.response.plain++;\n\tself.precache && self.precache(body, CONTENTTYPE_TEXTPLAIN, headers);\n\treturn self;\n};\n\n/**\n * Creates an empty response\n * @param {Object/Number} headers A custom headers or a custom HTTP status.\n * @return {Controller}\n */\nController.prototype.empty = function(headers) {\n\tvar self = this;\n\n\tif (self.res.success || self.res.headersSent || !self.isConnected)\n\t\treturn self;\n\n\tvar code = 200;\n\n\tif (typeof(headers) === 'number') {\n\t\tcode = headers;\n\t\theaders = null;\n\t}\n\n\tself.subscribe.success();\n\tF.responseContent(self.req, self.res, code, EMPTYBUFFER, CONTENTTYPE_TEXTPLAIN, false, headers);\n\tF.stats.response.empty++;\n\treturn self;\n};\n\n/**\n * Destroys a request (closes it)\n * @param {String} problem Optional.\n * @return {Controller}\n */\nController.prototype.destroy = function(problem) {\n\tvar self = this;\n\n\tproblem && self.problem(problem);\n\tif (self.res.success || self.res.headersSent || !self.isConnected)\n\t\treturn self;\n\n\tself.subscribe.success();\n\tself.req.connection.destroy();\n\tF.stats.response.destroy++;\n\treturn self;\n};\n\n/**\n * Responds with a file\n * @param {String} filename\n * @param {String} download Optional, a download name.\n * @param {Object} headers Optional, additional headers.\n * @param {Function} done Optinoal, callback.\n * @return {Controller}\n */\nController.prototype.file = function(filename, download, headers, done) {\n\tvar self = this;\n\n\tif (self.res.success || self.res.headersSent || !self.isConnected) {\n\t\tdone && done();\n\t\treturn self;\n\t}\n\n\tif (filename[0] === '~')\n\t\tfilename = filename.substring(1);\n\telse\n\t\tfilename = F.path.public_cache(filename);\n\n\tself.subscribe.success();\n\tF.responseFile(self.req, self.res, filename, download, headers, done);\n\treturn self;\n};\n\n/**\n * Responds with an image\n * @param {String or Stream} filename\n * @param {Function(image)} fnProcess\n * @param {Object} headers Optional, additional headers.\n * @param {Function} done Optional, callback.\n * @return {Controller}\n */\nController.prototype.image = function(filename, fnProcess, headers, done) {\n\tvar self = this;\n\n\tif (self.res.success || self.res.headersSent || !self.isConnected) {\n\t\tdone && done();\n\t\treturn self;\n\t}\n\n\tif (typeof(filename) === 'string') {\n\t\tif (filename[0] === '~')\n\t\t\tfilename = filename.substring(1);\n\t\telse\n\t\t\tfilename = F.path.public_cache(filename);\n\t}\n\n\tself.subscribe.success();\n\tF.responseImage(self.req, self.res, filename, fnProcess, headers, done);\n\treturn self;\n};\n\n/**\n * Responds with a stream\n * @param {String} contentType\n * @param {Stream} stream\n * @param {String} download Optional, a download name.\n * @param {Object} headers Optional, additional headers.\n * @param {Function} done Optinoal, callback.\n * @return {Controller}\n */\nController.prototype.stream = function(contentType, stream, download, headers, done, nocompress) {\n\tvar self = this;\n\n\tif (self.res.success || self.res.headersSent || !self.isConnected) {\n\t\tdone && done();\n\t\treturn self;\n\t}\n\n\tself.subscribe.success();\n\tF.responseStream(self.req, self.res, contentType, stream, download, headers, done, nocompress);\n\treturn self;\n};\n\n/**\n * Throw 400 - Bad request.\n * @param  {String} problem Description of problem (optional)\n * @return {Controller}\n */\nController.prototype.throw400 = Controller.prototype.view400 = function(problem) {\n\treturn controller_error_status(this, 400, problem);\n};\n\n/**\n * Throw 401 - Unauthorized.\n * @param  {String} problem Description of problem (optional)\n * @return {Controller}\n */\nController.prototype.throw401 = Controller.prototype.view401 = function(problem) {\n\treturn controller_error_status(this, 401, problem);\n};\n\n/**\n * Throw 403 - Forbidden.\n * @param  {String} problem Description of problem (optional)\n * @return {Controller}\n */\nController.prototype.throw403 = Controller.prototype.view403 = function(problem) {\n\treturn controller_error_status(this, 403, problem);\n};\n\n/**\n * Throw 404 - Not found.\n * @param  {String} problem Description of problem (optional)\n * @return {Controller}\n */\nController.prototype.throw404 = Controller.prototype.view404 = function(problem) {\n\treturn controller_error_status(this, 404, problem);\n};\n\n/**\n * Throw 500 - Internal Server Error.\n * @param {Error} error\n * @return {Controller}\n */\nController.prototype.throw500 = Controller.prototype.view500 = function(error) {\n\tvar self = this;\n\tF.error(error instanceof Error ? error : new Error((error || '').toString()), self.name, self.req.uri);\n\treturn controller_error_status(self, 500, error);\n};\n\n/**\n * Throw 501 - Not implemented\n * @param  {String} problem Description of the problem (optional)\n * @return {Controller}\n */\nController.prototype.throw501 = Controller.prototype.view501 = function(problem) {\n\treturn controller_error_status(this, 501, problem);\n};\n\n/**\n * Creates a redirect\n * @param {String} url\n * @param {Boolean} permanent Is permanent? Default: `false`\n * @return {Controller}\n */\nController.prototype.redirect = function(url, permanent) {\n\tvar self = this;\n\tself.precache && self.precache(null, null, null);\n\n\tif (self.res.success || self.res.headersSent || !self.isConnected)\n\t\treturn self;\n\n\tHEADERS.redirect.Location = url;\n\tself.subscribe.success();\n\tself.res.success = true;\n\tself.res.writeHead(permanent ? 301 : 302, HEADERS.redirect);\n\tself.res.end();\n\tF._request_stats(false, false);\n\tF.emit('request-end', self.req, self.res);\n\tself.req.clear(true);\n\tF.stats.response.redirect++;\n\treturn self;\n};\n\n/**\n * A binary response\n * @param {Buffer} buffer\n * @param {String} contentType\n * @param {String} type Transformation type: `binary`, `utf8`, `ascii`.\n * @param {String} download Optional, download name.\n * @param {Object} headers Optional, additional headers.\n * @return {Controller}\n */\nController.prototype.binary = function(buffer, contentType, type, download, headers) {\n\tvar self = this;\n\tvar res = self.res;\n\n\tif (self.res.success || self.res.headersSent || !self.isConnected)\n\t\treturn self;\n\n\tif (typeof(type) === 'object') {\n\t\tvar tmp = type;\n\t\ttype = download;\n\t\tdownload = headers;\n\t\theaders = tmp;\n\t}\n\n\tif (typeof(download) === 'object') {\n\t\theaders = download;\n\t\tdownload = headers;\n\t}\n\n\tself.subscribe.success();\n\tF.responseBinary(self.req, res, contentType, buffer, type, download, headers);\n\treturn self;\n};\n\n/**\n * Basic access authentication (baa)\n * @param {String} label\n * @return {Object}\n */\nController.prototype.baa = function(label) {\n\n\tvar self = this;\n\tself.precache && self.precache(null, null, null);\n\n\tif (label === undefined)\n\t\treturn self.req.authorization();\n\n\tvar headers = SINGLETON('!controller.baa');\n\theaders['WWW-Authenticate'] = 'Basic realm=\"' + (label || 'Administration') + '\"';\n\tF.responseContent(self.req, self.res, 401, '401: NOT AUTHORIZED', CONTENTTYPE_TEXTPLAIN, false, headers);\n\tself.subscribe.success();\n\tself.cancel();\n\treturn null;\n};\n\n/**\n * Sends server-sent event message\n * @param {String/Object} data\n * @param {String} eventname Optional, an event name.\n * @param {String} id Optional, a custom ID.\n * @param {Number} retry A reconnection timeout in milliseconds when is an unexpected problem.\n * @return {Controller}\n */\nController.prototype.sse = function(data, eventname, id, retry) {\n\n\tvar self = this;\n\tvar res = self.res;\n\n\tif (!self.isConnected)\n\t\treturn self;\n\n\tif (!self.type && res.success)\n\t\tthrow new Error('Response was sent.');\n\n\tif (self.type > 0 && self.type !== 1)\n\t\tthrow new Error('Response was used.');\n\n\tif (!self.type) {\n\n\t\tself.type = 1;\n\n\t\tif (retry === undefined)\n\t\t\tretry = self.subscribe.route.timeout;\n\n\t\tself.subscribe.success();\n\t\tself.req.on('close', () => self.close());\n\t\tres.success = true;\n\t\tres.writeHead(self.status, HEADERS['sse']);\n\t}\n\n\tif (typeof(data) === 'object')\n\t\tdata = JSON.stringify(data);\n\telse\n\t\tdata = data.replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r');\n\n\tvar newline = '\\n';\n\tvar builder = '';\n\n\tif (eventname)\n\t\tbuilder = 'event: ' + eventname + newline;\n\n\tbuilder += 'data: ' + data + newline;\n\n\tif (id)\n\t\tbuilder += 'id: ' + id + newline;\n\n\tif (retry > 0)\n\t\tbuilder += 'retry: ' + retry + newline;\n\n\tbuilder += newline;\n\tres.write(builder);\n\tF.stats.response.sse++;\n\treturn self;\n};\n\nController.prototype.mmr = function(name, stream, callback) {\n\n\tvar self = this;\n\tvar res = self.res;\n\n\tif (typeof(stream) === 'function') {\n\t\tcallback = stream;\n\t\tstream = name;\n\t}\n\n\tif (!stream)\n\t\tstream = name;\n\n\tif (!self.isConnected || (!self.type && res.success) || (self.type && self.type !== 2)) {\n\t\tcallback = null;\n\t\treturn self;\n\t}\n\n\tif (!self.type) {\n\t\tself.type = 2;\n\t\tself.boundary = '----totaljs' + U.GUID(10);\n\t\tself.subscribe.success();\n\t\tself.req.on('close', () => self.close());\n\t\tres.success = true;\n\t\tHEADERS.mmr[RESPONSE_HEADER_CONTENTTYPE] = 'multipart/x-mixed-replace; boundary=' + self.boundary;\n\t\tres.writeHead(self.status, HEADERS.mmr);\n\t}\n\n\tres.write('--' + self.boundary + NEWLINE + RESPONSE_HEADER_CONTENTTYPE + ': ' + U.getContentType(U.getExtension(name)) + NEWLINE + NEWLINE);\n\tF.stats.response.mmr++;\n\n\tif (typeof(stream) === 'string')\n\t\tstream = Fs.createReadStream(stream);\n\n\tstream.pipe(res, HEADERS.mmrpipe);\n\tCLEANUP(stream, () => callback && callback());\n\treturn self;\n};\n\n/**\n * Close a response\n * @param {Boolean} end\n * @return {Controller}\n */\nController.prototype.close = function(end) {\n\tvar self = this;\n\n\tif (end === undefined)\n\t\tend = true;\n\n\tif (!self.isConnected)\n\t\treturn self;\n\n\tif (self.type) {\n\t\tself.isConnected = false;\n\t\tself.res.success = true;\n\t\tF._request_stats(false, false);\n\t\tF.emit('request-end', self.req, self.res);\n\t\tself.type = 0;\n\t\tend && self.res.end();\n\t\treturn self;\n\t}\n\n\tself.isConnected = false;\n\n\tif (self.res.success)\n\t\treturn self;\n\n\tself.res.success = true;\n\tF._request_stats(false, false);\n\tF.emit('request-end', self.req, self.res);\n\tend && self.res.end();\n\treturn self;\n};\n\n/**\n * Sends an object to another total.js application (POST + JSON)\n * @param {String} url\n * @param {Object} obj\n * @param {Funciton(err, data, code, headers)} callback\n * @param {Number} timeout Timeout, optional default 10 seconds.\n * @return {EventEmitter}\n */\nController.prototype.proxy = function(url, obj, callback, timeout) {\n\n\tvar self = this;\n\tvar tmp;\n\n\tif (typeof(callback) === 'number') {\n\t\ttmp = timeout;\n\t\ttimeout = callback;\n\t\tcallback = tmp;\n\t}\n\n\tif (typeof(obj) === 'function') {\n\t\ttmp = callback;\n\t\tcallback = obj;\n\t\tobj = tmp;\n\t}\n\n\treturn U.request(url, REQUEST_PROXY_FLAGS, obj, function(err, data, code, headers) {\n\t\tif (!callback)\n\t\t\treturn;\n\t\tif ((headers['content-type'] || '').lastIndexOf('/json') !== -1)\n\t\t\tdata = F.onParseJSON(data);\n\t\tcallback.call(self, err, data, code, headers);\n\t}, null, HEADERS['proxy'], ENCODING, timeout || 10000);\n};\n\n/**\n * Creates a proxy between current request and new URL\n * @param {String} url\n * @param {Function(err, response, headers)} callback Optional.\n * @param {Object} headers Optional, additional headers.\n * @param {Number} timeout Optional, timeout (default: 10000)\n * @return {EventEmitter}\n */\nController.prototype.proxy2 = function(url, callback, headers, timeout) {\n\n\tif (typeof(callback) === 'object') {\n\t\ttimeout = headers;\n\t\theaders = callback;\n\t\tcallback = undefined;\n\t}\n\n\tvar self = this;\n\tvar flags = [];\n\tvar req = self.req;\n\tvar type = req.headers['content-type'];\n\tvar h = {};\n\n\tflags.push(req.method);\n\tflags.push('dnscache');\n\n\tif (type === 'application/json')\n\t\tflags.push('json');\n\n\tvar c = req.method[0];\n\tvar tmp;\n\tvar keys;\n\n\tif (c === 'G' || c === 'H' || c === 'O') {\n\t\tif (url.indexOf('?') === -1) {\n\t\t\ttmp = Qs.stringify(self.query);\n\t\t\tif (tmp)\n\t\t\t\turl += '?' + tmp;\n\t\t}\n\t}\n\n\tkeys = Object.keys(req.headers);\n\tfor (var i = 0, length = keys.length; i < length; i++) {\n\t\tswitch (keys[i]) {\n\t\t\tcase 'x-forwarded-for':\n\t\t\tcase 'x-forwarded-protocol':\n\t\t\tcase 'x-nginx-proxy':\n\t\t\tcase 'connection':\n\t\t\tcase 'content-type':\n\t\t\tcase 'host':\n\t\t\tcase 'accept-encoding':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\th[keys[i]] = req.headers[keys[i]];\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (headers) {\n\t\tkeys = Object.keys(headers);\n\t\tfor (var i = 0, length = keys.length; i < length; i++)\n\t\t\th[keys[i]] = headers[keys[i]];\n\t}\n\n\treturn U.request(url, flags, self.body, function(err, data, code, headers) {\n\n\t\tif (err) {\n\t\t\tcallback && callback(err);\n\t\t\tself.invalid().push(err);\n\t\t\treturn;\n\t\t}\n\n\t\tself.status = code;\n\t\tcallback && callback(err, data, code, headers);\n\t\tself.content(data, (headers['content-type'] || 'text/plain').replace(REG_ENCODINGCLEANER, ''));\n\t}, null, h, ENCODING, timeout || 10000);\n};\n\n/**\n * Renders view to response\n * @param {String} name View name without `.html` extension.\n * @param {Object} model A model, optional default: `undefined`.\n * @param {Object} headers A custom headers, optional.\n * @param {Boolean} isPartial When is `true` the method returns rendered HTML as `String`\n * @return {Controller/String}\n */\nController.prototype.view = function(name, model, headers, partial) {\n\n\tvar self = this;\n\n\tif (typeof(name) !== 'string') {\n\t\tpartial = headers;\n\t\theaders = model;\n\t\tmodel = name;\n\t\tname = self.viewname;\n\t} else if (partial === undefined && typeof(headers) === 'boolean') {\n\t\tpartial = headers;\n\t\theaders = null;\n\t}\n\n\tif (!partial && self.res && self.res.success)\n\t\treturn self;\n\n\tif (self.layoutName === undefined)\n\t\tself.layoutName = F.config['default-layout'];\n\tif (self.themeName === undefined)\n\t\tself.themeName = F.config['default-theme'];\n\n\t// theme root `~some_view`\n\t// views root `~~some_view`\n\t// package    `@some_view`\n\t// theme      `=theme/view`\n\n\tvar key = 'view#=' + this.themeName + '/' + self._currentView + '/' + name;\n\tvar filename = F.temporary.other[key];\n\tvar isLayout = self.isLayout;\n\n\tself.isLayout = false;\n\n\t// A small cache\n\tif (!filename) {\n\n\t\t// ~   --> routed into the root of views (if the controller uses a theme then is routed into the root views of the theme)\n\t\t// ~~  --> routed into the root of views (if the controller contains theme)\n\t\t// /   --> routed into the views (skipped)\n\t\t// @   --> routed into the packages\n\t\t// .   --> routed into the opened path\n\t\t// =   --> routed into the theme\n\n\t\tvar c = name[0];\n\t\tvar skip = c === '/' ? 1 : c === '~' && name[1] === '~' ? 4 : c === '~' ? 2 : c === '@' ? 3 : c === '.' ? 5 : c === '=' ? 6 : 0;\n\t\tvar isTheme = false;\n\n\t\tfilename = name;\n\n\t\tif (self.themeName && skip < 3) {\n\t\t\tfilename = '.' + F.path.themes(self.themeName + '/views/' + (isLayout || skip ? '' : self._currentView.substring(1)) + (skip ? name.substring(1) : name)).replace(REG_SANITIZE_BACKSLASH, '/');\n\t\t\tisTheme = true;\n\t\t}\n\n\t\tif (skip === 4) {\n\t\t\tfilename = filename.substring(1);\n\t\t\tname = name.substring(1);\n\t\t\tskip = 2;\n\t\t}\n\n\t\tif (!isTheme && !isLayout && !skip)\n\t\t\tfilename = self._currentView + name;\n\n\t\tif (!isTheme && (skip === 2 || skip === 3))\n\t\t\tfilename = name.substring(1);\n\n\t\tif (skip === 3)\n\t\t\tfilename = '.' + F.path.package(filename);\n\n\t\tif (skip === 6) {\n\t\t\tc = U.parseTheme(filename);\n\t\t\tname = name.substring(name.indexOf('/') + 1);\n\t\t\tfilename = '.' + F.path.themes(c + '/views/' + name).replace(REG_SANITIZE_BACKSLASH, '/');\n\t\t}\n\n\t\tF.temporary.other[key] = filename;\n\t}\n\n\treturn self.$viewrender(filename, framework_internal.viewEngine(name, filename, self), model, headers, partial, isLayout);\n};\n\nController.prototype.viewCompile = function(body, model, headers, partial) {\n\n\tif (headers === true) {\n\t\tpartial = true;\n\t\theaders = undefined;\n\t}\n\n\treturn this.$viewrender('[dynamic view]', framework_internal.viewEngineCompile(body, this.language, this), model, headers, partial);\n};\n\nController.prototype.$viewrender = function(filename, generator, model, headers, partial, isLayout) {\n\n\tvar self = this;\n\tvar err;\n\n\tif (!generator) {\n\n\t\terr = new Error('View \"' + filename + '\" not found.');\n\n\t\tif (partial) {\n\t\t\tF.error(err, self.name, self.uri);\n\t\t\treturn self.outputPartial;\n\t\t}\n\n\t\tif (isLayout) {\n\t\t\tself.subscribe.success();\n\t\t\tF.response500(self.req, self.res, err);\n\t\t\treturn self;\n\t\t}\n\n\t\tself.view500(err);\n\t\treturn self;\n\t}\n\n\tvar value = '';\n\tself.$model = model;\n\n\tif (isLayout)\n\t\tself._currentView = self._defaultView || '';\n\n\tvar helpers = F.helpers;\n\n\ttry {\n\t\tvalue = generator.call(self, self, self.repository, model, self.session, self.query, self.body, self.url, F.global, helpers, self.user, self.config, F.functions, 0, partial ? self.outputPartial : self.output, self.req.cookie, self.req.files, self.req.mobile, EMPTYOBJECT);\n\t} catch (ex) {\n\n\t\terr = new Error('View \"' + filename + '\": ' + ex.message);\n\n\t\tif (!partial) {\n\t\t\tself.view500(err);\n\t\t\treturn self;\n\t\t}\n\n\t\tself.error(err);\n\n\t\tif (self.partial)\n\t\t\tself.outputPartial = '';\n\t\telse\n\t\t\tself.output = '';\n\n\t\tisLayout = false;\n\t\treturn value;\n\t}\n\n\tif (!isLayout && self.precache && self.status === 200 && !partial)\n\t\tself.precache(value, CONTENTTYPE_TEXTHTML, headers, true);\n\n\tif (isLayout || !self.layoutName) {\n\n\t\tself.outputPartial = '';\n\t\tself.output = '';\n\t\tisLayout = false;\n\n\t\tif (partial)\n\t\t\treturn value;\n\n\t\tself.subscribe.success();\n\n\t\tif (!self.isConnected)\n\t\t\treturn self;\n\n\t\tF.responseContent(self.req, self.res, self.status, value, CONTENTTYPE_TEXTHTML, self.config['allow-gzip'], headers);\n\t\tF.stats.response.view++;\n\t\treturn self;\n\t}\n\n\tif (partial)\n\t\tself.outputPartial = value;\n\telse\n\t\tself.output = value;\n\n\tself.isLayout = true;\n\tvalue = self.view(self.layoutName, self.$model, headers, partial);\n\n\tif (partial) {\n\t\tself.outputPartial = '';\n\t\tself.isLayout = false;\n\t\treturn value;\n\t}\n\n\treturn self;\n};\n\n/**\n * Creates a cache for the response without caching layout\n * @param {String} key\n * @param {String} expires Expiration, e.g. `1 minute`\n * @param {Boolean} disabled Disables a caching, optinoal (e.g. for debug mode you can disable a cache), default: `false`\n * @param {Function()} fnTo This method is executed when the content is prepared for the cache.\n * @param {Function()} fnFrom This method is executed when the content is readed from the cache.\n * @return {Controller}\n */\nController.prototype.memorize = function(key, expires, disabled, fnTo, fnFrom) {\n\n\tvar self = this;\n\n\tif (disabled === true) {\n\t\tfnTo();\n\t\treturn self;\n\t}\n\n\tvar output = self.cache.read2(key);\n\tif (!output)\n\t\treturn self.$memorize_prepare(key, expires, disabled, fnTo, fnFrom);\n\n\tif (typeof(disabled) === 'function') {\n\t\tvar tmp = fnTo;\n\t\tfnTo = disabled;\n\t\tfnFrom = tmp;\n\t}\n\n\tself.layoutName = output.layout;\n\tself.themeName = output.theme;\n\n\tif (output.type !== CONTENTTYPE_TEXTHTML) {\n\t\tfnFrom && fnFrom();\n\t\tself.subscribe.success();\n\t\tF.responseContent(self.req, self.res, self.status, output.content, output.type, self.config['allow-gzip'], output.headers);\n\t\treturn;\n\t}\n\n\tswitch (output.type) {\n\t\tcase CONTENTTYPE_TEXTPLAIN:\n\t\t\tF.stats.response.plain++;\n\t\t\treturn self;\n\t\tcase 'application/json':\n\t\t\tF.stats.response.json++;\n\t\t\treturn self;\n\t\tcase CONTENTTYPE_TEXTHTML:\n\t\t\tF.stats.response.view++;\n\t\t\tbreak;\n\t}\n\n\tvar length = output.repository.length;\n\tfor (var i = 0; i < length; i++) {\n\t\tvar key = output.repository[i].key;\n\t\tif (self.repository[key] === undefined)\n\t\t\tself.repository[key] = output.repository[i].value;\n\t}\n\n\tfnFrom && fnFrom();\n\n\tif (!self.layoutName) {\n\t\tself.subscribe.success();\n\t\tself.isConnected && F.responseContent(self.req, self.res, self.status, output.content, output.type, self.config['allow-gzip'], output.headers);\n\t\treturn self;\n\t}\n\n\tself.output = U.createBuffer(output.content);\n\tself.isLayout = true;\n\tself.view(self.layoutName, null);\n\treturn self;\n};\n\nController.prototype.$memorize_prepare = function(key, expires, disabled, fnTo, fnFrom) {\n\n\tvar self = this;\n\tvar pk = '$memorize' + key;\n\n\tif (F.temporary.processing[pk]) {\n\t\tsetTimeout(function() {\n\t\t\t!self.subscribe.isCanceled && self.memorize(key, expires, disabled, fnTo, fnFrom);\n\t\t}, 500);\n\t\treturn self;\n\t}\n\n\tself.precache = function(value, contentType, headers, isView) {\n\n\t\tif (!value && !contentType && !headers) {\n\t\t\tdelete F.temporary.processing[pk];\n\t\t\tself.precache = null;\n\t\t\treturn;\n\t\t}\n\n\t\tvar options = { content: value, type: contentType, layout: self.layoutName, theme: self.themeName };\n\t\tif (headers)\n\t\t\toptions.headers = headers;\n\n\t\tif (isView) {\n\t\t\toptions.repository = [];\n\t\t\tfor (var name in self.repository) {\n\t\t\t\tvar value = self.repository[name];\n\t\t\t\tvalue !== undefined && options.repository.push({ key: name, value: value });\n\t\t\t}\n\t\t}\n\n\t\tself.cache.add(key, options, expires);\n\t\tself.precache = null;\n\t\tdelete F.temporary.processing[pk];\n\t};\n\n\tif (typeof(disabled) === 'function')\n\t\tfnTo = disabled;\n\n\tF.temporary.processing[pk] = true;\n\tfnTo();\n\treturn self;\n};\n\n// *********************************************************************************\n// =================================================================================\n// F.WebSocket\n// =================================================================================\n// *********************************************************************************\n\nconst NEWLINE = '\\r\\n';\nconst SOCKET_RESPONSE = 'HTTP/1.1 101 Switching Protocols\\r\\nUpgrade: websocket\\r\\nConnection: Upgrade\\r\\nSec-WebSocket-Accept: {0}\\r\\n\\r\\n';\nconst SOCKET_RESPONSE_PROTOCOL = 'HTTP/1.1 101 Switching Protocols\\r\\nUpgrade: websocket\\r\\nConnection: Upgrade\\r\\nSec-WebSocket-Accept: {0}\\r\\nSec-WebSocket-Protocol: {1}\\r\\n\\r\\n';\nconst SOCKET_RESPONSE_ERROR = 'HTTP/1.1 403 Forbidden\\r\\nConnection: close\\r\\nX-WebSocket-Reject-Reason: 403 Forbidden\\r\\n\\r\\n';\nconst SOCKET_HASH = '258EAFA5-E914-47DA-95CA-C5AB0DC85B11';\nconst SOCKET_ALLOW_VERSION = [13];\n\nfunction WebSocket(path, name, id) {\n\tthis._keys = [];\n\tthis.id = id;\n\tthis.online = 0;\n\tthis.connections = {};\n\tthis.repository = {};\n\tthis.name = name;\n\tthis.isController = true;\n\tthis.url = U.path(path);\n\tthis.route = null;\n\n\t// on('open', function(client) {});\n\t// on('close', function(client) {});\n\t// on('message', function(client, message) {});\n\t// on('error', function(error, client) {});\n\t// Events.EventEmitter.call(this);\n}\n\nWebSocket.prototype = {\n\n\tget global() {\n\t\treturn F.global;\n\t},\n\n\tget config() {\n\t\treturn F.config;\n\t},\n\n\tget cache() {\n\t\treturn F.cache;\n\t},\n\n\tget isDebug() {\n\t\treturn F.config.debug;\n\t},\n\n\tget path() {\n\t\treturn F.path;\n\t},\n\n\tget fs() {\n\t\treturn F.fs;\n\t},\n\n\tget isSecure() {\n\t\treturn this.req.isSecure;\n\t},\n\n\tget secured() {\n\t\treturn this.req.secured;\n\t},\n}\n\nWebSocket.prototype.__proto__ = Object.create(Events.EventEmitter.prototype, {\n\tconstructor: {\n\t\tvalue: WebSocket,\n\t\tenumberable: false\n\t}\n});\n\n/**\n * Sends a message\n * @param {String} message\n * @param {String Array or Function(id, client)} id\n * @param {String Array or Function(id, client)} blacklist\n * @param {String} raw internal\n * @return {WebSocket}\n */\nWebSocket.prototype.send = function(message, id, blacklist, replacer) {\n\n\tvar keys = this._keys;\n\tif (!keys || !keys.length)\n\t\treturn this;\n\n\tvar data;\n\tvar raw = false;\n\n\tfor (var i = 0, length = keys.length; i < length; i++) {\n\n\t\tvar _id = keys[i];\n\t\tvar conn = this.connections[_id];\n\n\t\tif (id) {\n\t\t\tif (id instanceof Array) {\n\t\t\t\tif (!websocket_valid_array(_id, id))\n\t\t\t\t\tcontinue;\n\t\t\t} else if (id instanceof Function) {\n\t\t\t\tif (!websocket_valid_fn(_id, conn, id))\n\t\t\t\t\tcontinue;\n\t\t\t} else\n\t\t\t\tthrow new Error('Invalid \"id\" argument.');\n\t\t}\n\n\t\tif (blacklist) {\n\t\t\tif (blacklist instanceof Array) {\n\t\t\t\tif (websocket_valid_array(_id, blacklist))\n\t\t\t\t\tcontinue;\n\t\t\t} else if (blacklist instanceof Function) {\n\t\t\t\tif (websocket_valid_fn(_id, conn, blacklist))\n\t\t\t\t\tcontinue;\n\t\t\t} else\n\t\t\t\tthrow new Error('Invalid \"blacklist\" argument.');\n\t\t}\n\n\t\tif (data === undefined) {\n\t\t\tif (conn.type === 3) {\n\t\t\t\traw = true;\n\t\t\t\tdata = JSON.stringify(message, replacer);\n\t\t\t} else\n\t\t\t\tdata = message;\n\t\t}\n\n\t\tconn.send(data, raw);\n\t\tF.stats.response.websocket++;\n\t}\n\n\treturn this;\n};\n\nfunction websocket_valid_array(id, arr) {\n\treturn arr.indexOf(id) !== -1;\n}\n\nfunction websocket_valid_fn(id, client, fn) {\n\treturn fn && fn(id, client) ? true : false;\n}\n\n/**\n * Sends a ping message\n * @return {WebSocket}\n */\nWebSocket.prototype.ping = function() {\n\n\tvar keys = this._keys;\n\tif (!keys)\n\t\treturn this;\n\n\tvar length = keys.length;\n\tif (!length)\n\t\treturn this;\n\n\tthis.$ping = true;\n\tF.stats.other.websocketPing++;\n\n\tfor (var i = 0; i < length; i++)\n\t\tthis.connections[keys[i]].ping();\n\n\treturn this;\n};\n\n/**\n * Closes a connection\n * @param {String Array} id Client id, optional, default `null`.\n * @param {String} message A message for the browser.\n * @param {Number} code Optional default 1000.\n * @return {Websocket}\n */\nWebSocket.prototype.close = function(id, message, code) {\n\n\tvar keys = this._keys;\n\n\tif (!keys)\n\t\treturn this;\n\n\tif (typeof(id) === 'string') {\n\t\tcode = message;\n\t\tmessage = id;\n\t\tid = null;\n\t}\n\n\tvar length = keys.length;\n\tif (!length)\n\t\treturn this;\n\n\tif (!id || !id.length) {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar _id = keys[i];\n\t\t\tthis.connections[_id].close(message, code);\n\t\t\tthis._remove(_id);\n\t\t}\n\t\tthis._refresh();\n\t\treturn this;\n\t}\n\n\tvar is = id instanceof Array;\n\tvar fn = typeof(id) === 'function' ? id : null;\n\n\tfor (var i = 0; i < length; i++) {\n\n\t\tvar _id = keys[i];\n\t\tif (is && id.indexOf(_id) === -1)\n\t\t\tcontinue;\n\n\t\tvar conn = this.connections[_id];\n\t\tif (fn && !fn.call(this, _id, conn))\n\t\t\tcontinue;\n\n\t\tconn.close(message, code);\n\t\tthis._remove(_id);\n\t}\n\n\tthis._refresh();\n\treturn this;\n};\n\n/**\n * Error caller\n * @param {Error/String} err\n * @return {WebSocket/Function}\n */\nWebSocket.prototype.error = function(err) {\n\tvar result = F.error(typeof(err) === 'string' ? new Error(err) : err, this.name, this.path);\n\treturn err === undefined ? result : this;\n};\n\n/**\n * Creates a problem\n * @param {String} message\n * @return {WebSocket}\n */\nWebSocket.prototype.wtf = WebSocket.prototype.problem = function(message) {\n\tF.problem(message, this.name, this.uri);\n\treturn this;\n};\n\n/**\n * Creates a change\n * @param {String} message\n * @return {WebSocket}\n */\nWebSocket.prototype.change = function(message) {\n\tF.change(message, this.name, this.uri, this.ip);\n\treturn this;\n};\n\n/**\n * The method executes a provided function once per client.\n * @param {Function(connection, index)} fn\n * @return {WebSocket}\n */\nWebSocket.prototype.all = function(fn) {\n\tif (this._keys) {\n\t\tfor (var i = 0, length = this._keys.length; i < length; i++)\n\t\t\tfn(this.connections[this._keys[i]], i);\n\t}\n\treturn this;\n};\n\n/**\n * Finds a connection\n * @param {String} id\n * @return {WebSocketClient}\n */\nWebSocket.prototype.find = function(id) {\n\tvar self = this;\n\n\tif (!self._keys)\n\t\treturn self;\n\n\tvar length = self._keys.length;\n\tvar isFn = typeof(id) === 'function';\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar connection = self.connections[self._keys[i]];\n\n\t\tif (!isFn) {\n\t\t\tif (connection.id === id)\n\t\t\t\treturn connection;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (id(connection, connection.id))\n\t\t\treturn connection;\n\t}\n\n\treturn null;\n};\n\n/**\n * Destroyes a WebSocket controller\n * @param {String} problem Optional.\n * @return {WebSocket}\n */\nWebSocket.prototype.destroy = function(problem) {\n\tvar self = this;\n\n\tproblem && self.problem(problem);\n\tif (!self.connections && !self._keys)\n\t\treturn self;\n\n\tself.close();\n\tself.emit('destroy');\n\n\tsetTimeout(function() {\n\n\t\tself._keys.forEach(function(key) {\n\t\t\tvar conn = self.connections[key];\n\t\t\tif (conn) {\n\t\t\t\tconn._isClosed = true;\n\t\t\t\tconn.socket.removeAllListeners();\n\t\t\t\tconn.removeAllListeners();\n\t\t\t}\n\t\t});\n\n\t\tself.connections = null;\n\t\tself._keys = null;\n\t\tself.route = null;\n\t\tself.buffer = null;\n\t\tdelete F.connections[self.id];\n\t\tself.removeAllListeners();\n\t}, 1000);\n\n\treturn self;\n};\n\n/**\n * Enables auto-destroy websocket controller when any user is not online\n * @param {Function} callback\n * @return {WebSocket]\n */\nWebSocket.prototype.autodestroy = function(callback) {\n\tvar self = this;\n\tvar key = 'websocket:' + self.id;\n\tself.on('open', () => clearTimeout2(key));\n\tself.on('close', function() {\n\t\t!self.online && setTimeout2(key, function() {\n\t\t\tcallback && callback.call(self);\n\t\t\tself.destroy();\n\t\t}, 5000);\n\t});\n\treturn self;\n};\n\n/**\n * Internal function\n * @return {WebSocket}\n */\nWebSocket.prototype._refresh = function() {\n\tif (this.connections) {\n\t\tthis._keys = Object.keys(this.connections);\n\t\tthis.online = this._keys.length;\n\t} else\n\t\tthis.online = 0;\n\treturn this;\n};\n\n/**\n * Internal function\n * @param {String} id\n * @return {WebSocket}\n */\nWebSocket.prototype._remove = function(id) {\n\tif (this.connections)\n\t\tdelete this.connections[id];\n\treturn this;\n};\n\n/**\n * Internal function\n * @param {WebSocketClient} client\n * @return {WebSocket}\n */\nWebSocket.prototype._add = function(client) {\n\tthis.connections[client._id] = client;\n\treturn this;\n};\n\n/**\n * A resource header\n * @param {String} name A resource name.\n * @param {String} key A resource key.\n * @return {String}\n */\nWebSocket.prototype.resource = function(name, key) {\n\treturn F.resource(name, key);\n};\n\nWebSocket.prototype.log = function() {\n\tF.log.apply(framework, arguments);\n\treturn this;\n};\n\nWebSocket.prototype.logger = function() {\n\tF.logger.apply(framework, arguments);\n\treturn this;\n};\n\nWebSocket.prototype.check = function() {\n\n\tif (!this.$ping)\n\t\treturn this;\n\n\tthis.all(function(client) {\n\t\tif (client.$ping)\n\t\t\treturn;\n\t\tclient.close();\n\t\tF.stats.other.websocketCleaner++;\n\t});\n\n\treturn this;\n};\n\n/**\n * WebSocket controller\n * @param {Request} req\n * @param {Socket} socket\n * @param {String} head\n */\nfunction WebSocketClient(req, socket, head) {\n\tthis.$ping = true;\n\tthis.container;\n\tthis._id;\n\tthis.id = '';\n\tthis.socket = socket;\n\tthis.req = req;\n\t// this.isClosed = false;\n\tthis.errors = 0;\n\tthis.buffer = U.createBufferSize();\n\tthis.length = 0;\n\n\t// 1 = raw - not implemented\n\t// 2 = plain\n\t// 3 = JSON\n\n\tthis.type = 2;\n\t// this._isClosed = false;\n}\n\nWebSocketClient.prototype = {\n\n\tget protocol() {\n\t\treturn (this.req.headers['sec-websocket-protocol'] || '').replace(REG_EMPTY, '').split(',');\n\t},\n\n\tget ip() {\n\t\treturn this.req.ip;\n\t},\n\n\tget get() {\n\t\treturn this.req.query;\n\t},\n\n\tget query() {\n\t\treturn this.req.query;\n\t},\n\n\tget uri() {\n\t\treturn this.req.uri;\n\t},\n\n\tget config() {\n\t\treturn this.container.config;\n\t},\n\n\tget global() {\n\t\treturn this.container.global;\n\t},\n\n\tget session() {\n\t\treturn this.req.session;\n\t},\n\n\tset session(value) {\n\t\tthis.req.session = value;\n\t},\n\n\tget user() {\n\t\treturn this.req.user;\n\t},\n\n\tset user(value) {\n\t\tthis.req.user = value;\n\t}\n};\n\nWebSocketClient.prototype.__proto__ = Object.create(Events.EventEmitter.prototype, {\n\tconstructor: {\n\t\tvalue: WebSocketClient,\n\t\tenumberable: false\n\t}\n});\n\nWebSocketClient.prototype.isWebSocket = true;\n\nWebSocketClient.prototype.cookie = function(name) {\n\treturn this.req.cookie(name);\n};\n\nWebSocketClient.prototype.prepare = function(flags, protocols, allow, length, version) {\n\n\tflags = flags || EMPTYARRAY;\n\tprotocols = protocols || EMPTYARRAY;\n\tallow = allow || EMPTYARRAY;\n\n\tthis.length = length;\n\n\tvar origin = this.req.headers['origin'] || '';\n\tvar length = allow.length;\n\n\tif (length) {\n\t\tif (allow.indexOf('*') === -1) {\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tif (origin.indexOf(allow[i]) === -1)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\tlength = protocols.length;\n\tif (length) {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tif (this.protocol.indexOf(protocols[i]) === -1)\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (SOCKET_ALLOW_VERSION.indexOf(U.parseInt(this.req.headers['sec-websocket-version'])) === -1)\n\t\treturn false;\n\n\tvar header = protocols.length ? SOCKET_RESPONSE_PROTOCOL.format(this._request_accept_key(this.req), protocols.join(', ')) : SOCKET_RESPONSE.format(this._request_accept_key(this.req));\n\tthis.socket.write(U.createBuffer(header, 'binary'));\n\n\tthis._id = (this.ip || '').replace(/\\./g, '') + U.GUID(20);\n\tthis.id = this._id;\n\treturn true;\n};\n\n/**\n * Add a container to client\n * @param {WebSocket} container\n * @return {WebSocketClient}\n */\nWebSocketClient.prototype.upgrade = function(container) {\n\n\tvar self = this;\n\tself.container = container;\n\n\t//self.socket.setTimeout(0);\n\t//self.socket.setNoDelay(true);\n\t//self.socket.setKeepAlive(true, 0);\n\n\tself.socket.on('data', n => self._ondata(n));\n\tself.socket.on('error', n => self._onerror(n));\n\tself.socket.on('close', () => self._onclose());\n\tself.socket.on('end', () => self._onclose());\n\tself.container._add(self);\n\tself.container._refresh();\n\n\tF.emit('websocket-begin', self.container, self);\n\tself.container.emit('open', self);\n\treturn self;\n};\n\n/**\n * Internal handler written by Jozef Gula\n * @param {Buffer} data\n * @return {Framework}\n */\nWebSocketClient.prototype._ondata = function(data) {\n\n\tif (data)\n\t\tthis.buffer = Buffer.concat([this.buffer, data]);\n\n\tif (this.buffer.length > this.length) {\n\t\tthis.errors++;\n\t\tthis.container.emit('error', new Error('Maximum request length exceeded.'), this);\n\t\treturn;\n\t}\n\n\tswitch (this.buffer[0] & 0x0f) {\n\t\tcase 0x01:\n\t\t\t// text message or JSON message\n\t\t\tthis.type !== 1 && this.parse();\n\t\t\tbreak;\n\t\tcase 0x02:\n\t\t\t// binary message\n\t\t\tthis.type === 1 && this.parse();\n\t\t\tbreak;\n\t\tcase 0x08:\n\t\t\t// close\n\t\t\tthis.close();\n\t\t\tbreak;\n\t\tcase 0x09:\n\t\t\t// ping, response pong\n\t\t\tthis.socket.write(U.getWebSocketFrame(0, '', 0x0A));\n\t\t\tthis.buffer = U.createBufferSize();\n\t\t\tthis.$ping = true;\n\t\t\tbreak;\n\t\tcase 0x0a:\n\t\t\t// pong\n\t\t\tthis.$ping = true;\n\t\t\tthis.buffer = U.createBufferSize();\n\t\t\tbreak;\n\t}\n};\n\n// MIT\n// Written by Jozef Gula\nWebSocketClient.prototype.parse = function() {\n\n\tvar bLength = this.buffer[1];\n\tif (((bLength & 0x80) >> 7) !== 1)\n\t\treturn this;\n\n\tvar length = U.getMessageLength(this.buffer, F.isLE);\n\tvar index = (this.buffer[1] & 0x7f);\n\n\tindex = (index == 126) ? 4 : (index == 127 ? 10 : 2);\n\tif ((index + length + 4) > (this.buffer.length))\n\t\treturn this;\n\n\tvar mask = U.createBufferSize(4);\n\tthis.buffer.copy(mask, 0, index, index + 4);\n\n\t// TEXT\n\tif (this.type !== 1) {\n\t\tvar output = '';\n\t\tfor (var i = 0; i < length; i++)\n\t\t\toutput += String.fromCharCode(this.buffer[index + 4 + i] ^ mask[i % 4]);\n\n\t\t// JSON\n\t\tif (this.type === 3) {\n\t\t\ttry {\n\t\t\t\toutput = this.container.config['default-websocket-encodedecode'] === true ? $decodeURIComponent(output) : output;\n\t\t\t\toutput.isJSON() && this.container.emit('message', this, F.onParseJSON(output, this.req));\n\t\t\t} catch (ex) {\n\t\t\t\tif (DEBUG) {\n\t\t\t\t\tthis.errors++;\n\t\t\t\t\tthis.container.emit('error', new Error('JSON parser: ' + ex.toString()), this);\n\t\t\t\t}\n\t\t\t}\n\t\t} else\n\t\t\tthis.container.emit('message', this, this.container.config['default-websocket-encodedecode'] === true ? $decodeURIComponent(output) : output);\n\t} else {\n\t\tvar binary = U.createBufferSize(length);\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tbinary[i] = this.buffer[index + 4 + i] ^ mask[i % 4];\n\t\tthis.container.emit('message', this, new Uint8Array(binary).buffer);\n\t}\n\n\tthis.buffer = this.buffer.slice(index + length + 4, this.buffer.length);\n\tthis.buffer.length >= 2 && U.getMessageLength(this.buffer, F.isLE) && this.parse();\n\treturn this;\n};\n\nWebSocketClient.prototype._onerror = function(err) {\n\n\tif (this.isClosed)\n\t\treturn;\n\n\tif (REG_WEBSOCKET_ERROR.test(err.stack)) {\n\t\tthis.isClosed = true;\n\t\tthis._onclose();\n\t} else\n\t\tthis.container.emit('error', err, this);\n};\n\nWebSocketClient.prototype._onclose = function() {\n\tif (this._isClosed)\n\t\treturn;\n\tthis.isClosed = true;\n\tthis._isClosed = true;\n\tthis.container._remove(this._id);\n\tthis.container._refresh();\n\tthis.container.emit('close', this);\n\tthis.socket.removeAllListeners();\n\tthis.removeAllListeners();\n\tF.emit('websocket-end', this.container, this);\n};\n\n/**\n * Sends a message\n * @param {String/Object} message\n * @param {Boolean} raw The message won't be converted e.g. to JSON.\n * @return {WebSocketClient}\n */\nWebSocketClient.prototype.send = function(message, raw, replacer) {\n\n\tif (this.isClosed)\n\t\treturn this;\n\n\tif (this.type !== 1) {\n\t\tvar data = this.type === 3 ? (raw ? message : JSON.stringify(message, replacer)) : (message || '').toString();\n\t\tif (this.container.config['default-websocket-encodedecode'] === true && data)\n\t\t\tdata = encodeURIComponent(data);\n\t\tthis.socket.write(U.getWebSocketFrame(0, data, 0x01));\n\t} else\n\t\tmessage && this.socket.write(U.getWebSocketFrame(0, new Int8Array(message), 0x02));\n\n\treturn this;\n};\n\n/**\n * Ping message\n * @return {WebSocketClient}\n */\nWebSocketClient.prototype.ping = function() {\n\tif (this.isClosed)\n\t\treturn this;\n\tthis.socket.write(U.getWebSocketFrame(0, '', 0x09));\n\tthis.$ping = false;\n\treturn this;\n};\n\n/**\n * Close connection\n * @param {String} message Message.\n * @param {Number} code WebSocket code.\n * @return {WebSocketClient}\n */\nWebSocketClient.prototype.close = function(message, code) {\n\tif (this.isClosed)\n\t\treturn this;\n\tthis.isClosed = true;\n\tthis.socket.end(U.getWebSocketFrame(code || 1000,  message ? encodeURIComponent(message) : '', 0x08));\n\treturn this;\n};\n\n/**\n * Create a signature for the WebSocket\n * @param {Request} req\n * @return {String}\n */\nWebSocketClient.prototype._request_accept_key = function(req) {\n\tvar sha1 = Crypto.createHash('sha1');\n\tsha1.update((req.headers['sec-websocket-key'] || '') + SOCKET_HASH);\n\treturn sha1.digest('base64');\n};\n\nfunction Backup() {\n\tthis.file = [];\n\tthis.directory = [];\n\tthis.path = '';\n\tthis.read = { key: U.createBufferSize(), value: U.createBufferSize(), status: 0 };\n\tthis.pending = 0;\n\tthis.cache = {};\n\tthis.complete = NOOP;\n\tthis.filter = () => true;\n\tthis.bufKey = U.createBuffer(':');\n\tthis.bufNew = U.createBuffer('\\n');\n}\n\nBackup.prototype.restoreKey = function(data) {\n\n\tvar self = this;\n\tvar read = self.read;\n\n\tif (read.status === 1) {\n\t\tself.restoreValue(data);\n\t\treturn;\n\t}\n\n\tvar index = -1;\n\tvar tmp = data;\n\n\tif (read.status === 2) {\n\t\ttmp = Buffer.concat([read.key, tmp]);\n\t\tindex = tmp.indexOf(self.bufKey);\n\t} else\n\t\tindex = tmp.indexOf(self.bufKey);\n\n\tif (index === -1) {\n\t\tread.key = Buffer.concat([read.key, data]);\n\t\tread.status = 2;\n\t\treturn;\n\t}\n\n\tread.status = 1;\n\tread.key = tmp.slice(0, index);\n\tself.restoreValue(tmp.slice(index + 1));\n\ttmp = null;\n};\n\nBackup.prototype.restoreValue = function(data) {\n\n\tvar self = this;\n\tvar read = self.read;\n\n\tif (read.status !== 1) {\n\t\tself.restoreKey(data);\n\t\treturn;\n\t}\n\n\tvar index = data.indexOf(self.bufNew);\n\tif (index === -1) {\n\t\tread.value = Buffer.concat([read.value, data]);\n\t\treturn;\n\t}\n\n\tread.value = Buffer.concat([read.value, data.slice(0, index)]);\n\tself.restoreFile(read.key.toString('utf8').replace(REG_EMPTY, ''), read.value.toString('utf8').replace(REG_EMPTY, ''));\n\n\tread.status = 0;\n\tread.value = U.createBufferSize();\n\tread.key = U.createBufferSize();\n\n\tself.restoreKey(data.slice(index + 1));\n};\n\nBackup.prototype.restore = function(filename, path, callback, filter) {\n\n\tif (!existsSync(filename)) {\n\t\tcallback && callback(new Error('Package not found.'), path);\n\t\treturn;\n\t}\n\n\tvar self = this;\n\n\tself.filter = filter;\n\tself.cache = {};\n\tself.createDirectory(path, true);\n\tself.path = path;\n\n\tvar stream = Fs.createReadStream(filename);\n\tstream.on('data', buffer => self.restoreKey(buffer));\n\n\tif (!callback) {\n\t\tstream.resume();\n\t\treturn;\n\t}\n\n\tcallback.path = path;\n\n\tstream.on('end', function() {\n\t\tself.callback(callback);\n\t\tstream = null;\n\t});\n\n\tstream.resume();\n};\n\nBackup.prototype.callback = function(cb) {\n\tvar self = this;\n\tif (self.pending <= 0)\n\t\treturn cb(null, cb.path);\n\tsetTimeout(() => self.callback(cb), 100);\n};\n\nBackup.prototype.restoreFile = function(key, value) {\n\tvar self = this;\n\n\tif (typeof(self.filter) === 'function' && !self.filter(key))\n\t\treturn;\n\n\tif (value === '#') {\n\t\tself.createDirectory(key);\n\t\treturn;\n\t}\n\n\tvar p = key;\n\tvar index = key.lastIndexOf('/');\n\n\tif (index !== -1) {\n\t\tp = key.substring(0, index).trim();\n\t\tp && self.createDirectory(p);\n\t}\n\n\tvar buffer = U.createBuffer(value, 'base64');\n\tself.pending++;\n\n\tZlib.gunzip(buffer, function(err, data) {\n\t\tFs.writeFile(Path.join(self.path, key), data, () => self.pending--);\n\t\tbuffer = null;\n\t});\n};\n\nBackup.prototype.createDirectory = function(p, root) {\n\n\tvar self = this;\n\tif (self.cache[p])\n\t\treturn;\n\n\tself.cache[p] = true;\n\n\tif (p[0] === '/')\n\t\tp = p.substring(1);\n\n\tvar is = F.isWindows;\n\n\tif (is) {\n\t\tif (p[p.length - 1] === '\\\\')\n\t\t\tp = p.substring(0, p.length - 1);\n\t} else {\n\t\tif (p[p.length - 1] === '/')\n\t\t\tp = p.substring(0, p.length - 1);\n\t}\n\n\tvar arr = is ? p.replace(/\\//g, '\\\\').split('\\\\') : p.split('/');\n\tvar directory = '';\n\n\tif (is && arr[0].indexOf(':') !== -1)\n\t\tarr.shift();\n\n\tfor (var i = 0, length = arr.length; i < length; i++) {\n\t\tvar name = arr[i];\n\t\tif (is)\n\t\t\tdirectory += (directory ? '\\\\' : '') + name;\n\t\telse\n\t\t\tdirectory += (directory ? '/' : '') + name;\n\n\t\tvar dir = Path.join(self.path, directory);\n\t\tif (root)\n\t\t\tdir = (is ? '\\\\' : '/') + dir;\n\n\t\t!existsSync(dir) && Fs.mkdirSync(dir);\n\t}\n};\n\n// *********************************************************************************\n// =================================================================================\n// Prototypes\n// =================================================================================\n// *********************************************************************************\n\n/**\n * Add a cookie into the response\n * @param {String} name\n * @param {Object} value\n * @param {Date/String} expires\n * @param {Object} options Additional options.\n * @return {Response}\n */\nhttp.ServerResponse.prototype.cookie = function(name, value, expires, options) {\n\n\tvar self = this;\n\n\tif (self.headersSent || self.success)\n\t\treturn;\n\n\tvar cookieHeaderStart = name + '=';\n\tvar builder = [cookieHeaderStart + value];\n\tvar type = typeof(expires);\n\n\tif (expires && !U.isDate(expires) && type === 'object') {\n\t\toptions = expires;\n\t\texpires = options.expires || options.expire || null;\n\t}\n\n\tif (type === 'string')\n\t\texpires = expires.parseDateExpiration();\n\n\tif (!options)\n\t\toptions = {};\n\n\toptions.path = options.path || '/';\n\texpires &&  builder.push('Expires=' + expires.toUTCString());\n\toptions.domain && builder.push('Domain=' + options.domain);\n\toptions.path && builder.push('Path=' + options.path);\n\toptions.secure && builder.push('Secure');\n\n\tif (options.httpOnly || options.httponly || options.HttpOnly)\n\t\tbuilder.push('HttpOnly');\n\n\tvar arr = self.getHeader('set-cookie') || [];\n\n\t// Cookie, already, can be in array, resulting in duplicate 'set-cookie' header\n\tvar idx = arr.findIndex(cookieStr => cookieStr.startsWith(cookieHeaderStart));\n\tidx !== -1 && arr.splice(idx, 1);\n\tarr.push(builder.join('; '));\n\tself.setHeader('Set-Cookie', arr);\n\treturn self;\n};\n\n/**\n * Disable HTTP cache for current response\n * @return {Response}\n */\nhttp.ServerResponse.prototype.noCache = function() {\n\tvar self = this;\n\tself.removeHeader(RESPONSE_HEADER_CACHECONTROL);\n\tself.removeHeader('Etag');\n\tself.removeHeader('Last-Modified');\n\treturn self;\n};\n\n/**\n * Send\n * @param {Number} code Response status code, optional\n * @param {Object} body Body\n * @param {String} type Content-Type, optional\n * @return {Response}\n */\nhttp.ServerResponse.prototype.send = function(code, body, type) {\n\n\tvar self = this;\n\n\tif (self.headersSent)\n\t\treturn self;\n\n\tself.controller && self.controller.subscribe.success();\n\n\tvar res = self;\n\tvar req = self.req;\n\tvar contentType = type;\n\tvar isHEAD = req.method === 'HEAD';\n\n\tif (body === undefined) {\n\t\tbody = code;\n\t\tcode = 200;\n\t}\n\n\tswitch (typeof(body)) {\n\t\tcase 'string':\n\t\t\tif (!contentType)\n\t\t\t\tcontentType = 'text/html';\n\t\t\tbreak;\n\n\t\tcase 'number':\n\t\t\tif (!contentType)\n\t\t\t\tcontentType = 'text/plain';\n\t\t\tbody = U.httpStatus(body);\n\t\t\tbreak;\n\n\t\tcase 'boolean':\n\t\tcase 'object':\n\t\t\tif (!isHEAD) {\n\t\t\t\tif (body instanceof framework_builders.ErrorBuilder) {\n\t\t\t\t\tbody = obj.output();\n\t\t\t\t\tcontentType = obj.contentType;\n\t\t\t\t\tF.stats.response.errorBuilder++;\n\t\t\t\t} else\n\t\t\t\t\tbody = JSON.stringify(body);\n\t\t\t\tif (!contentType)\n\t\t\t\t\tcontentType = 'application/json';\n\t\t\t}\n\t\t\tbreak;\n\t}\n\n\tvar accept = req.headers['accept-encoding'] || '';\n\tvar headers = {};\n\n\theaders[RESPONSE_HEADER_CACHECONTROL] = 'private';\n\theaders['Vary'] = 'Accept-Encoding' + (req.$mobile ? ', User-Agent' : '');\n\n\t// Safari resolve\n\tif (contentType === 'application/json')\n\t\theaders[RESPONSE_HEADER_CACHECONTROL] = 'private, no-cache, no-store, must-revalidate';\n\n\tif ((/text|application/).test(contentType))\n\t\tcontentType += '; charset=utf-8';\n\n\theaders[RESPONSE_HEADER_CONTENTTYPE] = contentType;\n\tF.responseCustom(req, res);\n\n\tif (!accept && isGZIP(req))\n\t\taccept = 'gzip';\n\n\tvar compress = accept.indexOf('gzip') !== -1;\n\n\tif (isHEAD) {\n\t\tif (compress)\n\t\t\theaders['Content-Encoding'] = 'gzip';\n\t\tres.writeHead(200, headers);\n\t\tres.end();\n\t\treturn self;\n\t}\n\n\tif (!compress) {\n\t\tres.writeHead(code, headers);\n\t\tres.end(body, ENCODING);\n\t\treturn self;\n\t}\n\n\tvar buffer = U.createBuffer(body);\n\tZlib.gzip(buffer, function(err, data) {\n\n\t\tif (err) {\n\t\t\tres.writeHead(code, headers);\n\t\t\tres.end(body, ENCODING);\n\t\t\treturn;\n\t\t}\n\n\t\theaders['Content-Encoding'] = 'gzip';\n\t\tres.writeHead(code, headers);\n\t\tres.end(data, ENCODING);\n\t});\n\n\treturn self;\n};\n\nhttp.ServerResponse.prototype.throw400 = function(problem) {\n\tthis.controller && this.controller.subscribe.success();\n\tF.response400(this.req, this, problem);\n};\n\nhttp.ServerResponse.prototype.setModified = function(value) {\n\tF.setModified(this.req, this, value);\n\treturn this;\n};\n\nhttp.ServerResponse.prototype.throw401 = function(problem) {\n\tthis.controller && this.controller.subscribe.success();\n\tF.response401(this.req, this, problem);\n};\n\nhttp.ServerResponse.prototype.throw403 = function(problem) {\n\tthis.controller && this.controller.subscribe.success();\n\tF.response403(this.req, this, problem);\n};\n\nhttp.ServerResponse.prototype.throw404 = function(problem) {\n\tthis.controller && this.controller.subscribe.success();\n\tF.response404(this.req, this, problem);\n};\n\nhttp.ServerResponse.prototype.throw408 = function(problem) {\n\tthis.controller && this.controller.subscribe.success();\n\tF.response408(this.req, this, problem);\n};\n\nhttp.ServerResponse.prototype.throw431 = function(problem) {\n\tthis.controller && this.controller.subscribe.success();\n\tF.response431(this.req, this, problem);\n};\n\nhttp.ServerResponse.prototype.throw500 = function(error) {\n\tthis.controller && this.controller.subscribe.success();\n\tF.response500(this.req, this, error);\n};\n\nhttp.ServerResponse.prototype.throw501 = function(problem) {\n\tthis.controller && this.controller.subscribe.success();\n\tF.response501(this.req, this, problem);\n};\n\n/**\n * Responds with a static file\n * @param {Function} done Optional, callback.\n * @return {Response}\n */\nhttp.ServerResponse.prototype.continue = function(done) {\n\tvar self = this;\n\tif (self.headersSent) {\n\t\tdone && done();\n\t\treturn self;\n\t}\n\tself.controller && self.controller.subscribe.success();\n\tF.responseStatic(self.req, self, done);\n\treturn self;\n};\n\n/**\n * Response custom content\n * @param {Number} code\n * @param {String} body\n * @param {String} type\n * @param {Boolean} compress Disallows GZIP compression. Optional, default: true.\n * @param {Object} headers Optional, additional headers.\n * @return {Response}\n */\nhttp.ServerResponse.prototype.content = function(code, body, type, compress, headers) {\n\tvar self = this;\n\tif (self.headersSent)\n\t\treturn self;\n\tself.controller && self.controller.subscribe.success();\n\tF.responseContent(self.req, self, code, body, type, compress, headers);\n\treturn self;\n};\n\n/**\n * Response redirect\n * @param {String} url\n * @param {Boolean} permanent Optional, default: false.\n * @return {Framework}\n */\nhttp.ServerResponse.prototype.redirect = function(url, permanent) {\n\tvar self = this;\n\tif (self.headersSent)\n\t\treturn self;\n\tself.controller && self.controller.subscribe.success();\n\tF.responseRedirect(self.req, self, url, permanent);\n\treturn self;\n};\n\n/**\n * Responds with a file\n * @param {String} filename\n * @param {String} download Optional, a download name.\n * @param {Object} headers Optional, additional headers.\n * @param {Function} done Optional, callback.\n * @return {Framework}\n */\nhttp.ServerResponse.prototype.file = function(filename, download, headers, done) {\n\tvar self = this;\n\tif (self.headersSent) {\n\t\tdone && done();\n\t\treturn self;\n\t}\n\tself.controller && self.controller.subscribe.success();\n\tF.responseFile(self.req, self, filename, download, headers, done);\n\treturn self;\n};\n\n/**\n * Responds with a stream\n * @param {String} contentType\n * @param {Stream} stream\n * @param {String} download Optional, a download name.\n * @param {Object} headers Optional, additional headers.\n * @param {Function} done Optional, callback.\n * @return {Framework}\n */\nhttp.ServerResponse.prototype.stream = function(contentType, stream, download, headers, done, nocompress) {\n\tvar self = this;\n\tif (self.headersSent) {\n\t\tdone && done();\n\t\treturn self;\n\t}\n\n\tself.controller && self.controller.subscribe.success();\n\tF.responseStream(self.req, self, contentType, stream, download, headers, done, nocompress);\n\treturn self;\n};\n\n/**\n * Responds with an image\n * @param {String or Stream} filename\n * @param {String} fnProcess\n * @param {Object} headers Optional, additional headers.\n * @param {Function} done Optional, callback.\n * @return {Framework}\n */\nhttp.ServerResponse.prototype.image = function(filename, fnProcess, headers, done) {\n\tvar self = this;\n\tif (self.headersSent) {\n\t\tdone && done();\n\t\treturn self;\n\t}\n\tself.controller && self.controller.subscribe.success();\n\tF.responseImage(self.req, self, filename, fnProcess, headers, done);\n\treturn self;\n};\n\n/**\n * Response JSON\n * @param {Object} obj\n * @return {Response}\n */\nhttp.ServerResponse.prototype.json = function(obj) {\n\tvar self = this;\n\treturn self.send(200, obj, 'application/json');\n};\n\nvar _tmp = http.IncomingMessage.prototype;\n\nhttp.IncomingMessage.prototype = {\n\n\tget ip() {\n\n\t\tvar self = this;\n\t\tif (self._ip)\n\t\t\treturn self._ip;\n\n\t\t//  x-forwarded-for: client, proxy1, proxy2, ...\n\t\tvar proxy = self.headers['x-forwarded-for'];\n\t\tif (proxy)\n\t\t\tself._ip = proxy.split(',', 1)[0] || self.connection.remoteAddress;\n\t\telse if (!self._ip)\n\t\t\tself._ip = self.connection.remoteAddress;\n\n\t\treturn self._ip;\n\t},\n\n\tget query() {\n\t\tvar self = this;\n\t\tif (self._dataGET)\n\t\t\treturn self._dataGET;\n\t\tself._dataGET = F.onParseQuery(self.uri.query, self);\n\t\treturn self._dataGET;\n\t},\n\n\tset query(value) {\n\t\tthis._dataGET = value;\n\t},\n\n\tget subdomain() {\n\n\t\tvar self = this;\n\n\t\tif (self._subdomain)\n\t\t\treturn self._subdomain;\n\n\t\tvar subdomain = self.uri.host.toLowerCase().replace(/^www\\./i, '').split('.');\n\t\tif (subdomain.length > 2)\n\t\t\tself._subdomain = subdomain.slice(0, subdomain.length - 2); // example: [subdomain].domain.com\n\t\telse\n\t\t\tself._subdomain = null;\n\n\t\treturn self._subdomain;\n\t},\n\n\tget host() {\n\t\treturn this.headers['host'];\n\t},\n\n\tget split() {\n\t\tif (this.$path)\n\t\t\treturn this.$path;\n\t\treturn this.$path = framework_internal.routeSplit(this.uri.pathname, true);\n\t},\n\n\tget secured() {\n\t\treturn this.uri.protocol === 'https:' || this.uri.protocol === 'wss:';\n\t},\n\n\tget language() {\n\t\tif (!this.$language)\n\t\t\tthis.$language = (((this.headers['accept-language'] || '').split(';')[0] || '').split(',')[0] || '').toLowerCase();\n\t\treturn this.$language;\n\t},\n\n\tget mobile() {\n\t\tif (this.$mobile === undefined)\n\t\t\tthis.$mobile = REG_MOBILE.test(this.headers['user-agent']);\n\t\treturn this.$mobile;\n\t},\n\n\tget robot() {\n\t\tif (this.$robot === undefined)\n\t\t\tthis.$robot = REG_ROBOT.test(this.headers['user-agent']);\n\t\treturn this.$robot;\n\t},\n\n\tset language(value) {\n\t\tthis.$language = value;\n\t}\n};\n\n// Handle errors of decodeURIComponent\nfunction $decodeURIComponent(value) {\n\ttry\n\t{\n\t\treturn decodeURIComponent(value);\n\t} catch (e) {\n\t\treturn value;\n\t}\n};\n\nhttp.IncomingMessage.prototype.__proto__ = _tmp;\n\n/**\n * Signature request (user-agent + ip + referer + current URL + custom key)\n * @param {String} key Custom key.\n * @return {Request}\n */\nhttp.IncomingMessage.prototype.signature = function(key) {\n\treturn F.encrypt((this.headers['user-agent'] || '') + '#' + this.ip + '#' + this.url + '#' + (key || ''), 'request-signature', false);\n};\n\n/**\n * Disable HTTP cache for current request\n * @return {Request}\n */\nhttp.IncomingMessage.prototype.noCache = function() {\n\tdelete this.headers['if-none-match'];\n\tdelete this.headers['if-modified-since'];\n\treturn this;\n};\n\nhttp.IncomingMessage.prototype.notModified = function(compare, strict) {\n\treturn F.notModified(this, this.res, compare, strict);\n};\n\n/**\n * Read a cookie from current request\n * @param {String} name Cookie name.\n * @return {String} Cookie value (default: '')\n */\nhttp.IncomingMessage.prototype.cookie = function(name) {\n\n\tif (this.cookies)\n\t\treturn $decodeURIComponent(this.cookies[name] || '');\n\n\tvar cookie = this.headers['cookie'];\n\tif (!cookie)\n\t\treturn '';\n\n\tthis.cookies = {};\n\n\tvar arr = cookie.split(';');\n\n\tfor (var i = 0, length = arr.length; i < length; i++) {\n\t\tvar line = arr[i].trim();\n\t\tvar index = line.indexOf('=');\n\t\tif (index !== -1)\n\t\t\tthis.cookies[line.substring(0, index)] = line.substring(index + 1);\n\t}\n\n\treturn $decodeURIComponent(this.cookies[name] || '');\n};\n\n/**\n * Read authorization header\n * @return {Object}\n */\nhttp.IncomingMessage.prototype.authorization = function() {\n\n\tvar authorization = this.headers['authorization'];\n\tif (!authorization)\n\t\treturn HEADERS.authorization;\n\n\tvar result = { user: '', password: '', empty: true };\n\n\ttry {\n\t\tvar arr = U.createBuffer(authorization.replace('Basic ', '').trim(), 'base64').toString(ENCODING).split(':');\n\t\tresult.user = arr[0] || '';\n\t\tresult.password = arr[1] || '';\n\t\tresult.empty = !result.user || !result.password;\n\t} catch (e) {}\n\n\treturn result;\n};\n\n/**\n * Authorization for custom delegates\n * @param  {Function(err, userprofile, isAuthorized)} callback\n * @return {Request}\n */\nhttp.IncomingMessage.prototype.authorize = function(callback) {\n\n\tvar auth = F.onAuthorize;\n\n\tif (!auth) {\n\t\tcallback(null, null, false);\n\t\treturn this;\n\t}\n\n\tvar req = this;\n\n\tauth(req, req.res, req.flags, function(isAuthorized, user) {\n\t\tif (typeof(isAuthorized) !== 'boolean') {\n\t\t\tuser = isAuthorized;\n\t\t\tisAuthorized = !user;\n\t\t}\n\t\treq.isAuthorized = isAuthorized;\n\t\tcallback(null, user, isAuthorized);\n\t});\n\n\treturn this;\n};\n\n/**\n * Clear all uplaoded files\n * @private\n * @param {Boolean} isAuto\n * @return {Request}\n */\nhttp.IncomingMessage.prototype.clear = function(isAuto) {\n\n\tvar self = this;\n\tvar files = self.files;\n\n\tif (!files || (isAuto && self._manual))\n\t\treturn self;\n\n\tself.body = null;\n\tself.query = null;\n\tself.cookies = null;\n\n\tvar length = files.length;\n\tif (!length)\n\t\treturn self;\n\n\tvar arr = [];\n\tfor (var i = 0; i < length; i++)\n\t\tfiles[i].rem && arr.push(files[i].path);\n\n\tF.unlink(arr);\n\tself.files = null;\n\treturn self;\n};\n\n/**\n * Get host name from URL\n * @param {String} path Additional path.\n * @return {String}\n */\nhttp.IncomingMessage.prototype.hostname = function(path) {\n\n\tvar self = this;\n\tvar uri = self.uri;\n\n\tif (path && path[0] !== '/')\n\t\tpath = '/' + path;\n\n\treturn uri.protocol + '//' + uri.hostname + (uri.port && uri.port !== 80 ? ':' + uri.port : '') + (path || '');\n};\n\nvar framework = new Framework();\nglobal.framework = global.F = module.exports = framework;\nglobal.Controller = Controller;\n\nprocess.on('uncaughtException', function(e) {\n\n\tif (e.toString().indexOf('listen EADDRINUSE') !== -1) {\n\t\tif (typeof(process.send) === 'function')\n\t\t\tprocess.send('eaddrinuse');\n\t\tconsole.log('\\nThe IP address and the PORT is already in use.\\nYou must change the PORT\\'s number or IP address.\\n');\n\t\tprocess.exit('SIGTERM');\n\t\treturn;\n\t}\n\n\tif (F.isTest) {\n\t\t// HACK: this method is created dynamically in F.testing();\n\t\tF.testContinue && F.testContinue(e);\n\t\treturn;\n\t}\n\n\tF.error(e, '', null);\n});\n\nfunction fsFileRead(filename, callback) {\n\tU.queue('F.files', F.config['default-maximum-file-descriptors'], function(next) {\n\t\tFs.readFile(filename, function(err, result) {\n\t\t\tnext();\n\t\t\tcallback(err, result);\n\t\t});\n\t});\n};\n\nfunction fsFileExists(filename, callback) {\n\tU.queue('F.files', F.config['default-maximum-file-descriptors'], function(next) {\n\t\tFs.lstat(filename, function(err, stats) {\n\t\t\tnext();\n\t\t\tcallback(!err && stats.isFile(), stats ? stats.size : 0, stats ? stats.isFile() : false, stats);\n\t\t});\n\t});\n};\n\nfunction fsStreamRead(filename, options, callback) {\n\n\tif (!callback) {\n\t\tcallback = options;\n\t\toptions = undefined;\n\t}\n\n\tvar opt;\n\n\tif (options) {\n\t\topt = HEADERS.fsStreamReadRange\n\t\topt.start = options.start;\n\t\topt.end = options.end;\n\t} else\n\t\topt = HEADERS.fsStreamRead;\n\n\tU.queue('F.files', F.config['default-maximum-file-descriptors'], function(next) {\n\t\tvar stream = Fs.createReadStream(filename, opt);\n\t\tstream.on('error', noop);\n\t\tcallback(stream, next);\n\t});\n}\n\n/**\n * Prepare URL address to temporary key (for caching)\n * @param {ServerRequest or String} req\n * @return {String}\n */\nfunction createTemporaryKey(req) {\n\treturn (req.uri ? req.uri.pathname : req).replace(TEMPORARY_KEY_REGEX, '-').substring(1);\n}\n\nprocess.on('SIGTERM', () => F.stop());\nprocess.on('SIGINT', () => F.stop());\nprocess.on('exit', () => F.stop());\n\nprocess.on('message', function(msg, h) {\n\n\tif (typeof(msg) !== 'string') {\n\t\tF.emit('message', msg, h);\n\t\treturn;\n\t}\n\n\tif (msg === 'debugging') {\n\t\tU.wait(() => F.isLoaded, function() {\n\t\t\tF.isLoaded = undefined;\n\t\t\tF.console();\n\t\t}, 10000, 500);\n\t\treturn;\n\t}\n\n\tif (msg === 'reconnect') {\n\t\tF.reconnect();\n\t\treturn;\n\t}\n\n\tif (msg === 'reconfigure') {\n\t\tF._configure();\n\t\tF._configure_versions();\n\t\tF._configure_workflows();\n\t\tF._configure_sitemap();\n\t\tF.emit(msg);\n\t\treturn;\n\t}\n\n\tif (msg === 'reset') {\n\t\t// F.clear();\n\t\tF.cache.clear();\n\t\treturn;\n\t}\n\n\tif (msg === 'stop' || msg === 'exit') {\n\t\tF.stop();\n\t\treturn;\n\t}\n\n\tF.emit('message', msg, h);\n});\n\nfunction prepare_error(e) {\n\treturn (RELEASE || !e) ? '' : ' :: ' + (e instanceof ErrorBuilder ? e.plain() : e.stack ? e.stack.toString() : e.toString());\n}\n\nfunction prepare_filename(name) {\n\treturn name[0] === '@' ? (F.isWindows ? U.combine(F.config['directory-temp'], name.substring(1)) : F.path.package(name.substring(1))) : U.combine('/', name);\n}\n\nfunction prepare_staticurl(url, isDirectory) {\n\tif (!url)\n\t\treturn url;\n\tif (url[0] === '~') {\n\t\tif (isDirectory)\n\t\t\treturn U.path(url.substring(1));\n\t} else if (url.substring(0, 2) === '//' || url.substring(0, 6) === 'http:/' || url.substring(0, 7) === 'https:/')\n\t\treturn url;\n\treturn url;\n}\n\nfunction prepare_isomorphic(name, value) {\n\treturn 'if(window[\"isomorphic\"]===undefined)window.isomorphic=window.I={};isomorphic[\"' + name.replace(/\\.js$/i, '') + '\"]=(function(framework,F,U,utils,Utils,is_client,is_server){var module={},exports=module.exports={};' + value + ';return exports;})(null,null,null,null,null,true,false)';\n}\n\nfunction isGZIP(req) {\n\tvar ua = req.headers['user-agent'];\n\treturn ua && ua.lastIndexOf('Firefox') !== -1;\n}\n\nfunction prepare_viewname(value) {\n\t// Cleans theme name\n\treturn value.substring(value.indexOf('/', 2) + 1);\n}\n\nfunction existsSync(filename, file) {\n\ttry {\n\t\tvar val = Fs.statSync(filename);\n\t\treturn val ? (file ? val.isFile() : true) : false;\n\t} catch (e) {\n\t\treturn false;\n\t}\n}\n\nfunction async_middleware(index, req, res, middleware, callback, options, controller) {\n\n\tif (res.success || res.headersSent) {\n\t\t// Prevents timeout\n\t\tcontroller && controller.subscribe.success();\n\t\tcallback = null;\n\t\treturn;\n\t}\n\n\tvar name = middleware[index++];\n\tif (!name)\n\t\treturn callback && callback();\n\n\tvar item = F.routes.middleware[name];\n\tif (!item) {\n\t\tF.error('Middleware not found: ' + name, null, req.uri);\n\t\treturn async_middleware(index, req, res, middleware, callback, options, controller);\n\t}\n\n\tvar output = item.call(framework, req, res, function(err) {\n\n\t\tif (err) {\n\t\t\tres.throw500(err);\n\t\t\tcallback = null;\n\t\t\treturn;\n\t\t}\n\n\t\tasync_middleware(index, req, res, middleware, callback, options, controller);\n\t}, options, controller);\n\n\tif (output !== false)\n\t\treturn;\n\n\tcallback = null;\n};\n\nglobal.setTimeout2 = function(name, fn, timeout) {\n\tvar key = ':' + name;\n\tF.temporary.internal[key] && clearTimeout(F.temporary.internal[key]);\n\treturn F.temporary.internal[key] = setTimeout(fn, timeout);\n};\n\nglobal.clearTimeout2 = function(name) {\n\tvar key = ':' + name;\n\n\tif (F.temporary.internal[key]) {\n\t\tclearTimeout(F.temporary.internal[key]);\n\t\tF.temporary.internal[key] = undefined;\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\nfunction parseComponent(body, filename) {\n\tvar response = {};\n\n\tresponse.css = '';\n\tresponse.js = '';\n\tresponse.install = '';\n\n\tvar beg = 0;\n\tvar end = 0;\n\n\twhile (true) {\n\t\tbeg = body.indexOf('<script type=\"text/totaljs\">');\n\t\tif (beg === -1)\n\t\t\tbreak;\n\t\tend = body.indexOf('</script>', beg);\n\t\tif (end === -1)\n\t\t\tbreak;\n\t\tresponse.install += (response.install ? '\\n' : '') + body.substring(beg, end).replace(/<(\\/)?script.*?>/g, '');\n\t\tbody = body.substring(0, beg).trim() + body.substring(end + 9).trim();\n\t}\n\n\twhile (true) {\n\t\tbeg = body.indexOf('<style');\n\t\tif (beg === -1)\n\t\t\tbreak;\n\t\tend = body.indexOf('</style>', beg);\n\t\tif (end === -1)\n\t\t\tbreak;\n\t\tresponse.css += (response.css ? '\\n' : '') + body.substring(beg, end).replace(/<(\\/)?style.*?>/g, '');\n\t\tbody = body.substring(0, beg).trim() + body.substring(end + 8).trim();\n\t}\n\n\twhile (true) {\n\t\tbeg = body.indexOf('<script>');\n\t\tif (beg === -1) {\n\t\t\tbeg = body.indexOf('<script type=\"text/javascript\">');\n\t\t\tif (beg === -1)\n\t\t\t\tbreak;\n\t\t}\n\t\tend = body.indexOf('</script>', beg);\n\t\tif (end === -1)\n\t\t\tbreak;\n\t\tresponse.js += (response.js ? '\\n' : '') + body.substring(beg, end).replace(/<(\\/)?script.*?>/g, '');\n\t\tbody = body.substring(0, beg).trim() + body.substring(end + 9).trim();\n\t}\n\n\tif (response.js)\n\t\tresponse.js = framework_internal.compile_javascript(response.js, filename);\n\n\tif (response.css)\n\t\tresponse.css = framework_internal.compile_css(response.css, filename);\n\n\tresponse.body = body;\n\treturn response;\n}\n\n// Default action for workflow routing\nfunction controller_json_workflow(id) {\n\tvar self = this;\n\tself.id = id;\n\tself.$exec(self.route.workflow, self, self.callback());\n}\n\n// Because of controller prototypes\n// It's used in F.view() and F.viewCompile()\nconst EMPTYCONTROLLER = new Controller('', null, null, null, '');\nEMPTYCONTROLLER.isConnected = false;","/home/travis/build/npmtest/node-npmtest-total.js/node_modules/total.js/internal.js":"// Copyright 2012-2016 (c) Peter Širka <petersirka@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/**\n * @module FrameworkInternal\n * @version 2.4.0\n */\n\n'use strict';\n\nconst Crypto = require('crypto');\nconst Fs = require('fs');\nconst ReadStream = Fs.ReadStream;\nconst Stream = require('stream');\nconst ENCODING = 'utf8';\nconst EMPTYARRAY = [];\nconst EMPTYOBJECT = {};\n\nObject.freeze(EMPTYOBJECT);\nObject.freeze(EMPTYARRAY);\n\nconst REG_1 = /[\\n\\r\\t]+/g;\nconst REG_2 = /\\s{2,}/g;\nconst REG_3 = /\\/{1,}/g;\nconst REG_4 = /\\n\\s{2,}./g;\nconst REG_5 = />\\n\\s{1,}</g;\nconst REG_6 = /[\\<\\w\\\"\\u0080-\\u07ff\\u0400-\\u04FF]+\\s{2,}[\\w\\u0080-\\u07ff\\u0400-\\u04FF\\>]+/;\nconst REG_BLOCK_BEG = /\\@\\{block.*?\\}/gi;\nconst REG_BLOCK_END = /\\@\\{end\\}/gi;\nconst REG_SKIP_1 = /\\(\\'|\\\"/;\nconst REG_SKIP_2 = /\\,(\\s)?\\w+/;\nconst HTTPVERBS = { 'get': true, 'post': true, 'options': true, 'put': true, 'delete': true, 'patch': true, 'upload': true, 'head': true, 'trace': true, 'propfind': true };\nconst RENDERNOW = ['self.$import(', 'self.route', 'self.$js(', 'self.$css(', 'self.$favicon(', 'self.$script(', '$STRING(self.resource(', '$STRING(self.RESOURCE(', 'self.translate(', 'language', 'self.sitemap_url(', 'self.sitemap_name('];\nconst REG_NOTRANSLATE = /@\\{notranslate\\}/gi;\nconst REG_NOCOMPRESS = /@\\{nocompress\\s\\w+}/gi;\nconst REG_TAGREMOVE = /[^\\>]\\n\\s{1,}$/;\nconst REG_EMPTY = /\\n|\\r|\\'|\\\\/;\nconst REG_HELPERS = /helpers\\.[a-z0-9A-Z_$]+\\(.*?\\)+/g;\nconst REG_SITEMAP = /\\s+(sitemap_navigation\\(|sitemap\\()+/g;\nconst REG_CSS_1 = /\\n|\\s{2,}/g;\nconst REG_CSS_2 = /\\s?\\{\\s{1,}/g;\nconst REG_CSS_3 = /\\s?\\}\\s{1,}/g;\nconst REG_CSS_4 = /\\s?\\:\\s{1,}/g;\nconst REG_CSS_5 = /\\s?\\;\\s{1,}/g;\nconst REG_CSS_6 = /\\,\\s{1,}/g;\nconst REG_CSS_7 = /\\s\\}/g;\nconst REG_CSS_8 = /\\s\\{/g;\nconst REG_CSS_9 = /\\;\\}/g;\nconst AUTOVENDOR = ['filter', 'appearance', 'column-count', 'column-gap', 'column-rule', 'display', 'transform', 'transform-style', 'transform-origin', 'transition', 'user-select', 'animation', 'perspective', 'animation-name', 'animation-duration', 'animation-timing-function', 'animation-delay', 'animation-iteration-count', 'animation-direction', 'animation-play-state', 'opacity', 'background', 'background-image', 'font-smoothing', 'text-size-adjust', 'backface-visibility', 'box-sizing', 'overflow-scrolling'];\nconst WRITESTREAM = { flags: 'w' };\n\nvar INDEXFILE = 0;\nvar INDEXMIXED = 0;\n\nglobal.$STRING = function(value) {\n\treturn value != null ? value.toString() : '';\n};\n\nglobal.$VIEWCACHE = [];\n\nexports.parseMULTIPART = function(req, contentType, route, tmpDirectory, subscribe) {\n\n\tvar boundary = contentType.split(';')[1];\n\tif (!boundary) {\n\t\tF._request_stats(false, false);\n\t\tF.stats.request.error400++;\n\t\tsubscribe.res.writeHead(400);\n\t\tsubscribe.res.end();\n\t\treturn;\n\t}\n\n\t// For unexpected closing\n\treq.once('close', () => !req.$upload && req.clear());\n\n\tvar parser = new MultipartParser();\n\tvar size = 0;\n\tvar stream;\n\tvar maximumSize = route.length;\n\tvar tmp;\n\tvar close = 0;\n\tvar rm;\n\n\t// Replaces the EMPTYARRAY and EMPTYOBJECT in index.js\n\treq.files = [];\n\treq.body = {};\n\n\tvar path = framework_utils.combine(tmpDirectory, (F.id ? 'i-' + F.id + '_' : '') + 'uploadedfile-');\n\n\t// Why indexOf(.., 2)? Because performance\n\tboundary = boundary.substring(boundary.indexOf('=', 2) + 1);\n\n\treq.buffer_exceeded = false;\n\treq.buffer_has = true;\n\n\tparser.initWithBoundary(boundary);\n\n\tparser.onPartBegin = function() {\n\t\t// Temporary data\n\t\ttmp = new HttpFile();\n\t\ttmp.$data = framework_utils.createBufferSize();\n\t\ttmp.$step = 0;\n\t\ttmp.$is = false;\n\t\ttmp.length = 0;\n\t};\n\n\tparser.onHeaderValue = function(buffer, start, end) {\n\n\t\tif (req.buffer_exceeded)\n\t\t\treturn;\n\n\t\tvar header = buffer.slice(start, end).toString(ENCODING);\n\n\t\tif (tmp.$step === 1) {\n\t\t\tvar index = header.indexOf(';');\n\t\t\tif (index === -1)\n\t\t\t\ttmp.type = header.trim();\n\t\t\telse\n\t\t\t\ttmp.type = header.substring(0, index).trim();\n\n\t\t\ttmp.$step = 2;\n\t\t\treturn;\n\t\t}\n\n\t\tif (tmp.$step !== 0)\n\t\t\treturn;\n\n\t\theader = parse_multipart_header(header);\n\n\t\ttmp.$step = 1;\n\t\ttmp.$is = header[1] !== null;\n\t\ttmp.name = header[0];\n\n\t\tif (!tmp.$is) {\n\t\t\tdestroyStream(stream);\n\t\t\treturn;\n\t\t}\n\n\t\ttmp.filename = header[1];\n\t\ttmp.path = path + (INDEXFILE++) + '.bin';\n\n\t\tstream = Fs.createWriteStream(tmp.path, WRITESTREAM);\n\t\tstream.once('close', () => close--);\n\t\tstream.once('error', (e) => close--);\n\t\tclose++;\n\t};\n\n\tparser.onPartData = function(buffer, start, end) {\n\n\t\tif (req.buffer_exceeded)\n\t\t\treturn;\n\n\t\tvar data = buffer.slice(start, end);\n\t\tvar length = data.length;\n\n\t\tsize += length;\n\n\t\tif (size >= maximumSize) {\n\t\t\treq.buffer_exceeded = true;\n\n\t\t\tif (rm)\n\t\t\t\trm.push(tmp.path);\n\t\t\telse\n\t\t\t\trm = [tmp.path];\n\t\t\treturn;\n\t\t}\n\n\t\tif (!tmp.$is) {\n\t\t\ttmp.$data = Buffer.concat([tmp.$data, data]);\n\t\t\treturn;\n\t\t}\n\n\t\tif (tmp.length) {\n\t\t\tstream.write(data);\n\t\t\ttmp.length += length;\n\t\t\treturn;\n\t\t}\n\n\t\tvar wh = null;\n\n\t\tswitch (tmp.type) {\n\t\t\tcase 'image/jpeg':\n\t\t\t\twh = framework_image.measureJPG(buffer.slice(start));\n\t\t\t\tbreak;\n\t\t\tcase 'image/gif':\n\t\t\t\twh = framework_image.measureGIF(data);\n\t\t\t\tbreak;\n\t\t\tcase 'image/png':\n\t\t\t\twh = framework_image.measurePNG(data);\n\t\t\t\tbreak;\n\t\t\tcase 'image/svg+xml':\n\t\t\t\twh = framework_image.measureSVG(data);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (wh) {\n\t\t\ttmp.width = wh.width;\n\t\t\ttmp.height = wh.height;\n\t\t} else {\n\t\t\ttmp.width = 0;\n\t\t\ttmp.height = 0;\n\t\t}\n\n\t\treq.files.push(tmp);\n\t\tF.emit('upload-begin', req, tmp);\n\t\tstream.write(data);\n\t\ttmp.length += length;\n\t};\n\n\tparser.onPartEnd = function() {\n\n\t\tif (stream) {\n\t\t\tstream.end();\n\t\t\tstream = null;\n\t\t}\n\n\t\tif (req.buffer_exceeded)\n\t\t\treturn;\n\n\t\tif (tmp.$is) {\n\t\t\ttmp.$data = undefined;\n\t\t\ttmp.$is = undefined;\n\t\t\ttmp.$step = undefined;\n\t\t\tF.emit('upload-end', req, tmp);\n\t\t\treturn;\n\t\t}\n\n\t\ttmp.$data = tmp.$data.toString(ENCODING);\n\n\t\tvar temporary = req.body[tmp.name];\n\t\tif (temporary === undefined) {\n\t\t\treq.body[tmp.name] = tmp.$data;\n\t\t} else if (temporary instanceof Array) {\n\t\t\treq.body[tmp.name].push(tmp.$data);\n\t\t} else {\n\t\t\ttemporary = [temporary];\n\t\t\ttemporary.push(tmp.$data);\n\t\t\treq.body[tmp.name] = temporary;\n\t\t}\n\t};\n\n\tparser.onEnd = function() {\n\t\tvar cb = function() {\n\t\t\tif (close) {\n\t\t\t\tsetImmediate(cb);\n\t\t\t} else {\n\t\t\t\trm && F.unlink(rm);\n\t\t\t\tsubscribe.doEnd();\n\t\t\t}\n\t\t};\n\t\tcb();\n\t};\n\n\treq.on('data', chunk => parser.write(chunk));\n\treq.on('end', function() {\n\t\tif (!req.buffer_exceeded)\n\t\t\treq.$upload = true;\n\t\tparser.end();\n\t});\n};\n\nexports.parseMULTIPART_MIXED = function(req, contentType, tmpDirectory, onFile) {\n\n\tvar boundary = contentType.split(';')[1];\n\tif (!boundary) {\n\t\tF._request_stats(false, false);\n\t\tF.stats.request.error400++;\n\t\treq.res.writeHead(400);\n\t\treq.res.end();\n\t\treturn;\n\t}\n\n\t// For unexpected closing\n\treq.once('close', () => !req.$upload && req.clear());\n\n\tvar parser = new MultipartParser();\n\tvar size = 0;\n\tvar close = 0;\n\tvar stream;\n\tvar tmp;\n\tvar counter = 0;\n\tvar path = framework_utils.combine(tmpDirectory, (F.id ? 'i-' + F.id + '_' : '') + 'uploadedmixed-');\n\n\tboundary = boundary.substring(boundary.indexOf('=', 2) + 1);\n\treq.buffer_exceeded = false;\n\treq.buffer_has = true;\n\n\tparser.initWithBoundary(boundary);\n\n\tparser.onPartBegin = function() {\n\t\t// Temporary data\n\t\ttmp = new HttpFile();\n\t\ttmp.$step = 0;\n\t\ttmp.$is = false;\n\t\ttmp.length = 0;\n\t};\n\n\tparser.onHeaderValue = function(buffer, start, end) {\n\n\t\tif (req.buffer_exceeded)\n\t\t\treturn;\n\n\t\tvar header = buffer.slice(start, end).toString(ENCODING);\n\t\tif (tmp.$step === 1) {\n\t\t\tvar index = header.indexOf(';');\n\t\t\tif (index === -1)\n\t\t\t\ttmp.type = header.trim();\n\t\t\telse\n\t\t\t\ttmp.type = header.substring(0, index).trim();\n\t\t\ttmp.$step = 2;\n\t\t\treturn;\n\t\t}\n\n\t\tif (tmp.$step !== 0)\n\t\t\treturn;\n\n\t\theader = parse_multipart_header(header);\n\n\t\ttmp.$step = 1;\n\t\ttmp.$is = header[1] !== null;\n\t\ttmp.name = header[0];\n\n\t\tif (!tmp.$is) {\n\t\t\tdestroyStream(stream);\n\t\t\treturn;\n\t\t}\n\n\t\ttmp.filename = header[1];\n\t\ttmp.path = path + (INDEXMIXED++) + '.bin';\n\n\t\tstream = Fs.createWriteStream(tmp.path, WRITESTREAM);\n\t\tstream.once('close', () => close--);\n\t\tstream.once('error', (e) => close--);\n\t\tclose++;\n\t};\n\n\tparser.onPartData = function(buffer, start, end) {\n\n\t\tif (req.buffer_exceeded)\n\t\t\treturn;\n\n\t\tvar data = buffer.slice(start, end);\n\t\tvar length = data.length;\n\n\t\tsize += length;\n\n\t\tif (!tmp.$is)\n\t\t\treturn;\n\n\t\tif (tmp.length) {\n\t\t\tstream.write(data);\n\t\t\ttmp.length += length;\n\t\t\treturn;\n\t\t}\n\n\t\tstream.write(data);\n\t\ttmp.length += length;\n\t\tonFile(req, tmp, counter++);\n\t};\n\n\tparser.onPartEnd = function() {\n\n\t\tif (stream) {\n\t\t\tstream.end();\n\t\t\tstream = null;\n\t\t}\n\n\t\tif (req.buffer_exceeded || !tmp.$is)\n\t\t\treturn;\n\n\t\ttmp.$is = undefined;\n\t\ttmp.$step = undefined;\n\t};\n\n\tparser.onEnd = function() {\n\t\tvar cb = function() {\n\t\t\tif (close)\n\t\t\t\tsetImmediate(cb);\n\t\t\telse {\n\t\t\t\tonFile(req, null);\n\t\t\t\tF.responseContent(req, req.res, 200, EMPTYBUFFER, 'text/plain', false);\n\t\t\t}\n\t\t};\n\t\tcb();\n\t};\n\n\treq.on('data', chunk => parser.write(chunk));\n\treq.on('end', () => parser.end());\n};\n\nfunction parse_multipart_header(header) {\n\n\tvar arr = new Array(2);\n\tvar find = ' name=\"';\n\tvar length = find.length;\n\tvar beg = header.indexOf(find);\n\tvar tmp = '';\n\n\tif (beg !== -1)\n\t\ttmp = header.substring(beg + length, header.indexOf('\"', beg + length));\n\n\tif (tmp)\n\t\tarr[0] = tmp;\n\telse\n\t\tarr[0] = 'undefined_' + (Math.floor(Math.random() * 100000)).toString();\n\n\tfind = ' filename=\"';\n\tlength = find.length;\n\tbeg = header.indexOf(find);\n\ttmp = '';\n\n\tif (beg !== -1)\n\t\ttmp = header.substring(beg + length, header.indexOf('\"', beg + length));\n\n\tif (tmp)\n\t\tarr[1] = tmp;\n\telse\n\t\tarr[1] = null;\n\n\treturn arr;\n}\n\nexports.routeSplit = function(url, noLower) {\n\n\tvar arr;\n\n\tif (!noLower) {\n\t\tarr = F.temporary.other[url];\n\t\tif (arr)\n\t\t\treturn arr;\n\t}\n\n\tif (!url || url === '/') {\n\t\tarr = ['/'];\n\t\treturn arr;\n\t}\n\n\tvar prev = false;\n\tvar key = '';\n\tvar count = 0;\n\n\tarr = [];\n\n\tfor (var i = 0, length = url.length; i < length; i++) {\n\t\tvar c = url[i];\n\n\t\tif (c === '/') {\n\t\t\tif (key && !prev) {\n\t\t\t\tarr.push(key);\n\t\t\t\tcount++;\n\t\t\t\tkey = '';\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tkey += noLower ? c : c.toLowerCase();\n\t\tprev = c === '/';\n\t}\n\n\tif (key)\n\t\tarr.push(key);\n\telse if (!count)\n\t\tarr.push('/');\n\n\treturn arr;\n};\n\nexports.routeSplitCreate = function(url, noLower) {\n\n\tif (!noLower)\n\t\turl = url.toLowerCase();\n\n\tif (url[0] === '/')\n\t\turl = url.substring(1);\n\n\tif (url[url.length - 1] === '/')\n\t\turl = url.substring(0, url.length - 1);\n\n\tvar count = 0;\n\tvar end = 0;\n\tvar arr = [];\n\n\tfor (var i = 0, length = url.length; i < length; i++) {\n\t\tswitch (url[i]) {\n\t\t\tcase '/':\n\t\t\t\tif (count !== 0)\n\t\t\t\t\tbreak;\n\t\t\t\tarr.push(url.substring(end + (arr.length ? 1 : 0), i));\n\t\t\t\tend = i;\n\t\t\t\tbreak;\n\n\t\t\tcase '{':\n\t\t\t\tcount++;\n\t\t\t\tbreak;\n\n\t\t\tcase '}':\n\t\t\t\tcount--;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t!count && arr.push(url.substring(end + (arr.length ? 1 : 0), url.length));\n\n\tif (arr.length === 1 && !arr[0])\n\t\tarr[0] = '/';\n\n\treturn arr;\n};\n\nexports.routeCompare = function(url, route, isSystem, isAsterix) {\n\n\tvar length = url.length;\n\tvar lengthRoute = route.length;\n\n\tif (lengthRoute !== length && !isAsterix)\n\t\treturn false;\n\n\tif (isAsterix && lengthRoute === 1 && route[0] === '/')\n\t\treturn true;\n\n\tvar skip = length === 1 && url[0] === '/';\n\n\tfor (var i = 0; i < length; i++) {\n\n\t\tvar value = route[i];\n\n\t\tif (!isSystem && isAsterix && value === undefined)\n\t\t\treturn true;\n\n\t\tif (!isSystem && (!skip && value[0] === '{'))\n\t\t\tcontinue;\n\n\t\tif (url[i] !== value)\n\t\t\treturn isSystem ? false : isAsterix ? i >= lengthRoute : false;\n\t}\n\n\treturn true;\n};\n\nexports.routeCompareSubdomain = function(subdomain, arr) {\n\tif ((!subdomain && !arr) || (subdomain && !arr))\n\t\treturn true;\n\tif (!subdomain && arr)\n\t\treturn false;\n\tfor (var i = 0, length = arr.length; i < length; i++) {\n\t\tif (arr[i] === '*')\n\t\t\treturn true;\n\t\tvar index = arr[i].lastIndexOf('*');\n\t\tif (index === -1) {\n\t\t\tif (arr[i] === subdomain)\n\t\t\t\treturn true;\n\t\t} else if (subdomain.indexOf(arr[i].replace('*', '')) !== -1)\n\t\t\treturn true;\n\t}\n\treturn false;\n};\n\nexports.routeCompareFlags = function(arr1, arr2, membertype) {\n\n\tvar hasVerb = false;\n\tvar a1 = arr1;\n\tvar a2 = arr2;\n\tvar l1 = arr1.length;\n\tvar l2 = arr2.length;\n\tvar select = l1 > l2 ? a1 : a2;\n\tvar compare = l1 > l2 ? a2 : a1;\n\tvar length = Math.max(l1, l2);\n\n\tvar AUTHORIZE = 'authorize';\n\tvar UNAUTHORIZE = 'unauthorize';\n\n\tfor (var i = 0; i < length; i++) {\n\n\t\tvar value = select[i];\n\t\tvar c = value[0];\n\n\t\tif (c === '!' || c === '#' || c === '$' || c === '@' || c === '+') // ignore roles\n\t\t\tcontinue;\n\n\t\tif (!membertype && (value === AUTHORIZE || value === UNAUTHORIZE))\n\t\t\tcontinue;\n\n\t\tvar index = compare.indexOf(value);\n\t\tif (index === -1 && !HTTPVERBS[value])\n\t\t\treturn value === AUTHORIZE || value === UNAUTHORIZE ? -1 : 0;\n\n\t\thasVerb = hasVerb || (index !== -1 && HTTPVERBS[value]);\n\t}\n\n\treturn hasVerb ? 1 : 0;\n};\n\nexports.routeCompareFlags2 = function(req, route, membertype) {\n\n\t// membertype 0 -> not specified\n\t// membertype 1 -> auth\n\t// membertype 2 -> unauth\n\n\t// 1. upload --> 0\n\t// 2. doAuth --> 1 or 2\n\n\t// if (membertype && ((membertype !== 1 && route.MEMBER === 1) || (membertype !== 2 && route.MEMBER === 2)))\n\tif (membertype && route.MEMBER && membertype !== route.MEMBER)\n\t\treturn -1;\n\n\tif (!route.isWEBSOCKET) {\n\t\tif ((route.isXHR && !req.xhr) || (route.isMOBILE && !req.mobile) || (route.isROBOT && !req.robot))\n\t\t\treturn 0;\n\t\tvar method = req.method;\n\t\tif (route.method) {\n\t\t\tif (route.method !== method)\n\t\t\t\treturn 0;\n\t\t} else if (!route.flags2[method.toLowerCase()])\n\t\t\treturn 0;\n\t\tif ((route.isREFERER && req.flags.indexOf('referer') === -1) || (!route.isMULTIPLE && route.isJSON && req.flags.indexOf('json') === -1))\n\t\t\treturn 0;\n\t}\n\n\tvar isRole = false;\n\tvar hasRoles = false;\n\n\tfor (var i = 0, length = req.flags.length; i < length; i++) {\n\n\t\tvar flag = req.flags[i];\n\t\tswitch (flag) {\n\t\t\tcase 'json':\n\t\t\t\tcontinue;\n\t\t\tcase 'xml':\n\t\t\t\tif (route.isRAW || route.isXML)\n\t\t\t\t\tcontinue;\n\t\t\t\treturn 0;\n\n\t\t\tcase 'proxy':\n\t\t\t\tif (!route.isPROXY)\n\t\t\t\t\treturn 0;\n\t\t\t\tcontinue;\n\n\t\t\tcase 'debug':\n\t\t\t\tif (!route.isDEBUG && route.isRELEASE)\n\t\t\t\t\treturn 0;\n\t\t\t\tcontinue;\n\n\t\t\tcase 'release':\n\t\t\t\tif (!route.isRELEASE && route.isDEBUG)\n\t\t\t\t\treturn 0;\n\t\t\t\tcontinue;\n\n\t\t\tcase 'referer':\n\t\t\t\tcontinue;\n\n\t\t\tcase 'upload':\n\t\t\t\tif (!route.isUPLOAD)\n\t\t\t\t\treturn 0;\n\t\t\t\tcontinue;\n\n\t\t\tcase 'https':\n\t\t\t\tif (!route.isHTTPS && route.isHTTP)\n\t\t\t\t\treturn 0;\n\t\t\t\tcontinue;\n\n\t\t\tcase 'http':\n\t\t\t\tif (!route.isHTTP && route.isHTTPS)\n\t\t\t\t\treturn 0;\n\t\t\t\tcontinue;\n\n\t\t\tcase 'xhr':\n\t\t\tcase '+xhr':\n\t\t\t\tif (!route.isBOTH && !route.isXHR)\n\t\t\t\t\treturn 0;\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tvar role = flag[0] === '@';\n\n\t\tif (membertype !== 1 && route.MEMBER !== 1) {\n\t\t\tif ((!route.isGET && !role && !route.flags2[flag]) || (route.isROLE && role && !route.flags2[flag]) || (route.isROLE && !role))\n\t\t\t\treturn 0;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Is some role verified?\n\t\tif (role && isRole && !route.isROLE)\n\t\t\tcontinue;\n\n\t\tif (!role && !route.flags2[flag])\n\t\t\treturn 0;\n\n\t\tif (role) {\n\t\t\tif (route.flags2[flag])\n\t\t\t\tisRole = true;\n\t\t\thasRoles = true;\n\t\t}\n\t}\n\n\treturn (route.isROLE && hasRoles) ? isRole ? 1 : -1 : 1;\n};\n\n/**\n * Create arguments for controller's action\n * @param {String Array} routeUrl\n * @param {Object} route\n * @return {String Array}\n */\nexports.routeParam = function(routeUrl, route) {\n\n\tif (!route || !routeUrl || !route.param.length)\n\t\treturn EMPTYARRAY;\n\n\tvar arr = [];\n\n\tfor (var i = 0, length = route.param.length; i < length; i++) {\n\t\tvar value = routeUrl[route.param[i]];\n\t\tarr.push(value === '/' ? '' : value);\n\t}\n\n\treturn arr;\n};\n\nfunction HttpFile() {\n\tthis.name;\n\tthis.filename;\n\tthis.type;\n\tthis.path;\n\tthis.length = 0;\n\tthis.width = 0;\n\tthis.height = 0;\n\tthis.rem = true;\n}\n\nHttpFile.prototype.rename = function(filename, callback) {\n\tvar self = this;\n\tFs.rename(self.path, filename, function(err) {\n\n\t\tif (!err) {\n\t\t\tself.path = filename;\n\t\t\tself.rem = false;\n\t\t}\n\n\t\tcallback && callback(err);\n\t});\n\treturn self;\n};\n\nHttpFile.prototype.copy = function(filename, callback) {\n\n\tvar self = this;\n\n\tif (!callback) {\n\t\tFs.createReadStream(self.path).pipe(Fs.createWriteStream(filename));\n\t\treturn;\n\t}\n\n\tvar reader = Fs.createReadStream(self.path);\n\tvar writer = Fs.createWriteStream(filename);\n\n\treader.on('close', callback);\n\treader.pipe(writer);\n\treturn self;\n};\n\nHttpFile.prototype.$$rename = function(filename) {\n\tvar self = this;\n\treturn function(callback) {\n\t\treturn self.rename(filename, callback);\n\t};\n};\n\nHttpFile.prototype.$$copy = function(filename) {\n\tvar self = this;\n\treturn function(callback) {\n\t\treturn self.copy(filename, callback);\n\t};\n};\n\nHttpFile.prototype.readSync = function() {\n\treturn Fs.readFileSync(this.path);\n};\n\nHttpFile.prototype.read = function(callback) {\n\tvar self = this;\n\tFs.readFile(self.path, callback);\n\treturn self;\n};\n\nHttpFile.prototype.$$read = function() {\n\tvar self = this;\n\treturn function(callback) {\n\t\tself.read(callback);\n\t};\n};\n\nHttpFile.prototype.md5 = function(callback) {\n\tvar self = this;\n\tvar md5 = Crypto.createHash('md5');\n\tvar stream = Fs.createReadStream(self.path);\n\tstream.on('data', (buffer) => md5.update(buffer));\n\tstream.on('error', function(error) {\n\t\tcallback(error, null);\n\t\tcallback = null;\n\t});\n\n\tonFinished(stream, function() {\n\t\tdestroyStream(stream);\n\t\tcallback && callback(null, md5.digest('hex'));\n\t});\n\n\treturn self;\n};\n\nHttpFile.prototype.$$md5 = function() {\n\tvar self = this;\n\treturn function(callback) {\n\t\tself.md5(callback);\n\t};\n};\n\nHttpFile.prototype.stream = function(options) {\n\treturn Fs.createReadStream(this.path, options);\n};\n\nHttpFile.prototype.pipe = function(stream, options) {\n\treturn Fs.createReadStream(this.path, options).pipe(stream, options);\n};\n\nHttpFile.prototype.isImage = function() {\n\treturn this.type.indexOf('image/') !== -1;\n};\n\nHttpFile.prototype.isVideo = function() {\n\treturn this.type.indexOf('video/') !== -1;\n};\n\nHttpFile.prototype.isAudio = function() {\n\treturn this.type.indexOf('audio/') !== -1;\n};\n\nHttpFile.prototype.image = function(im) {\n\tif (im === undefined)\n\t\tim = F.config['default-image-converter'] === 'im';\n\treturn framework_image.init(this.path, im, this.width, this.height);\n};\n\n// *********************************************************************************\n// =================================================================================\n// JS CSS + AUTO-VENDOR-PREFIXES\n// =================================================================================\n// *********************************************************************************\n\nfunction compile_autovendor(css) {\n\tvar avp = '/*auto*/';\n\tvar isAuto = css.substring(0, 100).indexOf(avp) !== -1;\n\tif (isAuto)\n\t\tcss = autoprefixer(css.replace(avp, ''));\n\treturn css.replace(REG_CSS_1, '').replace(REG_CSS_2, '{').replace(REG_CSS_3, '}').replace(REG_CSS_4, ':').replace(REG_CSS_5, ';').replace(REG_CSS_6, function(search, index, text) {\n\t\tfor (var i = index; i > 0; i--) {\n\t\t\tif ((text[i] === '\\'' || text[i] === '\"') && (text[i - 1] === ':'))\n\t\t\t\treturn search;\n\t\t}\n\t\treturn ',';\n\t}).replace(REG_CSS_7, '}').replace(REG_CSS_8, '{').replace(REG_CSS_9, '}').trim();\n}\n\nfunction autoprefixer(value) {\n\n\tvalue = autoprefixer_keyframes(value);\n\n\tvar builder = [];\n\tvar index = 0;\n\tvar property;\n\n\t// properties\n\tfor (var i = 0, length = AUTOVENDOR.length; i < length; i++) {\n\n\t\tproperty = AUTOVENDOR[i];\n\t\tindex = 0;\n\n\t\twhile (index !== -1) {\n\n\t\t\tindex = value.indexOf(property, index + 1);\n\t\t\tif (index === -1)\n\t\t\t\tcontinue;\n\n\t\t\tvar a = value.indexOf(';', index);\n\t\t\tvar b = value.indexOf('}', index);\n\n\t\t\tvar end = Math.min(a, b);\n\t\t\tif (end === -1)\n\t\t\t\tend = Math.max(a, b);\n\n\t\t\tif (end === -1)\n\t\t\t\tcontinue;\n\n\t\t\t// text-transform\n\t\t\tvar isPrefix = value.substring(index - 1, index) === '-';\n\t\t\tif (isPrefix)\n\t\t\t\tcontinue;\n\n\t\t\tvar css = value.substring(index, end);\n\t\t\tend = css.indexOf(':');\n\n\t\t\tif (end === -1 || css.substring(0, end + 1).replace(/\\s/g, '') !== property + ':')\n\t\t\t\tcontinue;\n\n\t\t\tbuilder.push({ name: property, property: css });\n\t\t}\n\t}\n\n\tvar output = [];\n\tvar length = builder.length;\n\n\tfor (var i = 0; i < length; i++) {\n\n\t\tvar name = builder[i].name;\n\t\tproperty = builder[i].property;\n\n\t\tvar plus = property;\n\t\tvar delimiter = ';';\n\t\tvar updated = plus + delimiter;\n\n\t\tif (name === 'opacity') {\n\t\t\tvar opacity = +plus.replace('opacity', '').replace(':', '').replace(/\\s/g, '');\n\t\t\tif (isNaN(opacity))\n\t\t\t\tcontinue;\n\t\t\tupdated += 'filter:alpha(opacity=' + Math.floor(opacity * 100) + ')';\n\t\t\tvalue = value.replacer(property, '@[[' + output.length + ']]');\n\t\t\toutput.push(updated);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (name === 'background' || name === 'background-image') {\n\t\t\tif (property.indexOf('linear-gradient') === -1)\n\t\t\t\tcontinue;\n\t\t\tupdated = plus.replacer('linear-', '-webkit-linear-') + delimiter;\n\t\t\tupdated += plus.replacer('linear-', '-moz-linear-') + delimiter;\n\t\t\tupdated += plus.replacer('linear-', '-o-linear-') + delimiter;\n\t\t\tupdated += plus.replacer('linear-', '-ms-linear-') + delimiter;\n\t\t\tupdated += plus;\n\t\t\tvalue = value.replacer(property, '@[[' + output.length + ']]');\n\t\t\toutput.push(updated);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (name === 'text-overflow') {\n\t\t\tupdated = plus + delimiter;\n\t\t\tupdated += plus.replacer('text-overflow', '-ms-text-overflow');\n\t\t\tvalue = value.replacer(property, '@[[' + output.length + ']]');\n\t\t\toutput.push(updated);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (name === 'display') {\n\t\t\tif (property.indexOf('box') === -1)\n\t\t\t\tcontinue;\n\t\t\tupdated = plus + delimiter;\n\t\t\tupdated += plus.replacer('box', '-webkit-box') + delimiter;\n\t\t\tupdated += plus.replacer('box', '-moz-box');\n\t\t\tvalue = value.replacer(property, '@[[' + output.length + ']]');\n\t\t\toutput.push(updated);\n\t\t\tcontinue;\n\t\t}\n\n\t\tupdated += '-webkit-' + plus + delimiter;\n\t\tupdated += '-moz-' + plus;\n\n\t\tif (name.indexOf('animation') === -1)\n\t\t\tupdated += delimiter + '-ms-' + plus;\n\n\t\tupdated += delimiter + '-o-' + plus;\n\t\tvalue = value.replacer(property, '@[[' + output.length + ']]');\n\t\toutput.push(updated);\n\t}\n\n\tlength = output.length;\n\tfor (var i = 0; i < length; i++)\n\t\tvalue = value.replacer('@[[' + i + ']]', output[i]);\n\n\toutput = null;\n\tbuilder = null;\n\treturn value;\n}\n\nfunction autoprefixer_keyframes(value) {\n\n\tvar builder = [];\n\tvar index = 0;\n\n\twhile (index !== -1) {\n\n\t\tindex = value.indexOf('@keyframes', index + 1);\n\t\tif (index === -1)\n\t\t\tcontinue;\n\n\t\tvar counter = 0;\n\t\tvar end = -1;\n\n\t\tfor (var indexer = index + 10; indexer < value.length; indexer++) {\n\n\t\t\tif (value[indexer] === '{')\n\t\t\t\tcounter++;\n\n\t\t\tif (value[indexer] !== '}')\n\t\t\t\tcontinue;\n\n\t\t\tif (counter > 1) {\n\t\t\t\tcounter--;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tend = indexer;\n\t\t\tbreak;\n\t\t}\n\n\t\tif (end === -1)\n\t\t\tcontinue;\n\n\t\tvar css = value.substring(index, end + 1);\n\t\tbuilder.push({ name: 'keyframes', property: css });\n\t}\n\n\tvar output = [];\n\tvar length = builder.length;\n\n\tfor (var i = 0; i < length; i++) {\n\n\t\tvar name = builder[i].name;\n\t\tvar property = builder[i].property;\n\n\t\tif (name !== 'keyframes')\n\t\t\tcontinue;\n\n\t\tvar plus = property.substring(1);\n\t\tvar delimiter = '\\n';\n\n\t\tvar updated = '@' + plus + delimiter;\n\n\t\tupdated += '@-webkit-' + plus + delimiter;\n\t\tupdated += '@-moz-' + plus + delimiter;\n\t\tupdated += '@-o-' + plus + delimiter;\n\n\t\tvalue = value.replacer(property, '@[[' + output.length + ']]');\n\t\toutput.push(updated);\n\t}\n\n\tlength = output.length;\n\n\tfor (var i = 0; i < length; i++)\n\t\tvalue = value.replace('@[[' + i + ']]', output[i]);\n\n\treturn value;\n}\n\nfunction minify_javascript(data) {\n\n\tvar index = 0;\n\tvar output = [];\n\tvar isCS = false;\n\tvar isCI = false;\n\tvar alpha = /[0-9a-z]/i;\n\tvar white = /\\W/;\n\tvar skip = { '$': true, '_': true };\n\tvar regexp = false;\n\tvar scope;\n\tvar prev;\n\tvar next;\n\tvar last;\n\n\twhile (true) {\n\n\t\tvar c = data[index];\n\t\tvar prev = data[index - 1];\n\t\tvar next = data[index + 1];\n\n\t\tindex++;\n\n\t\tif (c === undefined)\n\t\t\tbreak;\n\n\t\tif (!scope) {\n\n\t\t\tif (!regexp) {\n\t\t\t\tif (c === '/' && next === '*') {\n\t\t\t\t\tisCS = true;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (c === '*' && next === '/') {\n\t\t\t\t\tisCS = false;\n\t\t\t\t\tindex++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (isCS)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tif (c === '/' && next === '/') {\n\t\t\t\t\tisCI = true;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (isCI && (c === '\\n' || c === '\\r')) {\n\t\t\t\t\tisCI = false;\n\t\t\t\t\talpha.test(last) && output.push(' ');\n\t\t\t\t\tlast = '';\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (isCI)\n\t\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (c === '\\t' || c === '\\n' || c === '\\r') {\n\t\t\t\tif (!last || !alpha.test(last))\n\t\t\t\t\tcontinue;\n\t\t\t\toutput.push(' ');\n\t\t\t\tlast = '';\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!regexp && (c === ' ' && (white.test(prev) || white.test(next)))) {\n\t\t\t\tif (!skip[prev] && !skip[next])\n\t\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (regexp) {\n\t\t\t\tif ((last !== '\\\\' && c === '/') || (last === '\\\\' && c === '/' && output[output.length - 2] === '\\\\'))\n\t\t\t\t\tregexp = false;\n\t\t\t} else\n\t\t\t\tregexp = (last === '=' || last === '(' || last === ':' || last === '{' || last === '[' || last === '?') && (c === '/');\n\t\t}\n\n\t\tif (scope && c === '\\\\') {\n\t\t\toutput.push(c);\n\t\t\toutput.push(next);\n\t\t\tindex++;\n\t\t\tlast = next;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!regexp && (c === '\"' || c === '\\'' || c === '`')) {\n\n\t\t\tif (scope && scope !== c) {\n\t\t\t\toutput.push(c);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (c === scope)\n\t\t\t\tscope = 0;\n\t\t\telse\n\t\t\t\tscope = c;\n\t\t}\n\n\t\tif (c === '}' && last === ';')\n\t\t\toutput.pop();\n\n\t\toutput.push(c);\n\t\tlast = c;\n\t}\n\n\treturn output.join('').trim();\n}\n\nexports.compile_css = function(value, filename) {\n\n\tif (global.F) {\n\t\tvalue = modificators(value, filename, 'style');\n\t\tif (F.onCompileStyle)\n\t\t\treturn F.onCompileStyle(filename, value);\n\t}\n\n\ttry {\n\n\t\tvar isVariable = false;\n\n\t\tvalue = nested(value, '', function() {\n\t\t\tisVariable = true;\n\t\t});\n\n\t\tvalue = compile_autovendor(value);\n\n\t\tif (isVariable)\n\t\t\tvalue = variablesCSS(value);\n\n\t\treturn value;\n\t} catch (ex) {\n\t\tF.error(new Error('CSS compiler exception: ' + ex.message));\n\t\treturn '';\n\t}\n};\n\nexports.compile_javascript = function(source, filename) {\n\n\tif (global.F) {\n\t\tsource = modificators(source, filename, 'script');\n\t\tif (F.onCompileScript)\n\t\t\treturn F.onCompileScript(filename, source).trim();\n\t}\n\n\treturn minify_javascript(source);\n};\n\nexports.compile_html = function(source, filename) {\n\treturn compressCSS(compressJS(compressHTML(source, true), 0, filename), 0, filename);\n};\n\n// *********************************************************************************\n// =================================================================================\n// MULTIPART PARSER\n// =================================================================================\n// *********************************************************************************\n\n// Copyright (c) 2010 Hongli Lai\n// Copyright (c) Felix Geisendörfer -> https://github.com/felixge/node-formidable\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nvar Buffer = require('buffer').Buffer,\n\ts = 0,\n\tS = {\n\t\tPARSER_UNINITIALIZED: s++,\n\t\tSTART: s++,\n\t\tSTART_BOUNDARY: s++,\n\t\tHEADER_FIELD_START: s++,\n\t\tHEADER_FIELD: s++,\n\t\tHEADER_VALUE_START: s++,\n\t\tHEADER_VALUE: s++,\n\t\tHEADER_VALUE_ALMOST_DONE: s++,\n\t\tHEADERS_ALMOST_DONE: s++,\n\t\tPART_DATA_START: s++,\n\t\tPART_DATA: s++,\n\t\tPART_END: s++,\n\t\tEND: s++\n\t},\n\n\tf = 1,\n\tFB = {\n\t\tPART_BOUNDARY: f,\n\t\tLAST_BOUNDARY: f *= 2\n\t},\n\n\tLF = 10,\n\tCR = 13,\n\tSPACE = 32,\n\tHYPHEN = 45,\n\tCOLON = 58,\n\tA = 97,\n\tZ = 122,\n\n\tlower = function(c) {\n\t\treturn c | 0x20;\n\t};\n\nfor (s in S) {\n\texports[s] = S[s];\n}\n\nfunction MultipartParser() {\n\tthis.boundary = null;\n\tthis.boundaryChars = null;\n\tthis.lookbehind = null;\n\tthis.state = S.PARSER_UNINITIALIZED;\n\tthis.index = null;\n\tthis.flags = 0;\n}\nexports.MultipartParser = MultipartParser;\n\nMultipartParser.stateToString = function(stateNumber) {\n\tfor (var state in S) {\n\t\tvar number = S[state];\n\t\tif (number === stateNumber) return state;\n\t}\n};\n\nMultipartParser.prototype.initWithBoundary = function(str) {\n\tvar self = this;\n\tself.boundary = framework_utils.createBufferSize(str.length + 4);\n\tself.boundary.write('\\r\\n--', 0, 'ascii');\n\tself.boundary.write(str, 4, 'ascii');\n\tself.lookbehind = framework_utils.createBufferSize(self.boundary.length + 8);\n\tself.state = S.START;\n\tself.boundaryChars = {};\n\tfor (var i = 0; i < self.boundary.length; i++)\n\t\tself.boundaryChars[self.boundary[i]] = true;\n};\n\nMultipartParser.prototype.write = function(buffer) {\n\tvar self = this,\n\t\ti = 0,\n\t\tlen = buffer.length,\n\t\tprevIndex = self.index,\n\t\tindex = self.index,\n\t\tstate = self.state,\n\t\tflags = self.flags,\n\t\tlookbehind = self.lookbehind,\n\t\tboundary = self.boundary,\n\t\tboundaryChars = self.boundaryChars,\n\t\tboundaryLength = self.boundary.length,\n\t\tboundaryEnd = boundaryLength - 1,\n\t\tbufferLength = buffer.length,\n\t\tc,\n\t\tcl,\n\t\tmark = function(name) {\n\t\t\tself[name + 'Mark'] = i;\n\t\t},\n\t\tclear = function(name) {\n\t\t\tdelete self[name + 'Mark'];\n\t\t},\n\t\tcallback = function(name, buffer, start, end) {\n\t\t\tif (start !== undefined && start === end)\n\t\t\t\treturn;\n\t\t\tvar callbackSymbol = 'on' + name.substr(0, 1).toUpperCase() + name.substr(1);\n\t\t\tif (callbackSymbol in self)\n\t\t\t\tself[callbackSymbol](buffer, start, end);\n\t\t},\n\t\tdataCallback = function(name, clear) {\n\t\t\tvar markSymbol = name + 'Mark';\n\t\t\tif (!(markSymbol in self))\n\t\t\t\treturn;\n\t\t\tif (!clear) {\n\t\t\t\tcallback(name, buffer, self[markSymbol], buffer.length);\n\t\t\t\tself[markSymbol] = 0;\n\t\t\t} else {\n\t\t\t\tcallback(name, buffer, self[markSymbol], i);\n\t\t\t\tdelete self[markSymbol];\n\t\t\t}\n\t\t};\n\n\tfor (i = 0; i < len; i++) {\n\t\tc = buffer[i];\n\t\tswitch (state) {\n\t\t\tcase S.PARSER_UNINITIALIZED:\n\t\t\t\treturn i;\n\t\t\tcase S.START:\n\t\t\t\tindex = 0;\n\t\t\t\tstate = S.START_BOUNDARY;\n\t\t\tcase S.START_BOUNDARY:\n\t\t\t\tif (index == boundary.length - 2) {\n\t\t\t\t\tif (c === HYPHEN)\n\t\t\t\t\t\tflags |= FB.LAST_BOUNDARY;\n\t\t\t\t\telse if (c !== CR)\n\t\t\t\t\t\treturn i;\n\t\t\t\t\tindex++;\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (index - 1 === boundary.length - 2) {\n\t\t\t\t\tif (flags & FB.LAST_BOUNDARY && c === HYPHEN) {\n\t\t\t\t\t\tcallback('end');\n\t\t\t\t\t\tstate = S.END;\n\t\t\t\t\t\tflags = 0;\n\t\t\t\t\t} else if (!(flags & FB.LAST_BOUNDARY) && c === LF) {\n\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\tcallback('partBegin');\n\t\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\t} else\n\t\t\t\t\t\treturn i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (c !== boundary[index + 2])\n\t\t\t\t\tindex = -2;\n\t\t\t\tif (c === boundary[index + 2])\n\t\t\t\t\tindex++;\n\t\t\t\tbreak;\n\t\t\tcase S.HEADER_FIELD_START:\n\t\t\t\tstate = S.HEADER_FIELD;\n\t\t\t\tmark('headerField');\n\t\t\t\tindex = 0;\n\t\t\tcase S.HEADER_FIELD:\n\t\t\t\tif (c === CR) {\n\t\t\t\t\tclear('headerField');\n\t\t\t\t\tstate = S.HEADERS_ALMOST_DONE;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t\tif (c === HYPHEN)\n\t\t\t\t\tbreak;\n\n\t\t\t\tif (c === COLON) {\n\t\t\t\t\t// empty header field\n\t\t\t\t\tif (index === 1)\n\t\t\t\t\t\treturn i;\n\t\t\t\t\tdataCallback('headerField', true);\n\t\t\t\t\tstate = S.HEADER_VALUE_START;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcl = lower(c);\n\t\t\t\tif (cl < A || cl > Z)\n\t\t\t\t\treturn i;\n\t\t\t\tbreak;\n\t\t\tcase S.HEADER_VALUE_START:\n\t\t\t\tif (c === SPACE)\n\t\t\t\t\tbreak;\n\t\t\t\tmark('headerValue');\n\t\t\t\tstate = S.HEADER_VALUE;\n\t\t\tcase S.HEADER_VALUE:\n\t\t\t\tif (c === CR) {\n\t\t\t\t\tdataCallback('headerValue', true);\n\t\t\t\t\tcallback('headerEnd');\n\t\t\t\t\tstate = S.HEADER_VALUE_ALMOST_DONE;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase S.HEADER_VALUE_ALMOST_DONE:\n\t\t\t\tif (c !== LF)\n\t\t\t\t\treturn i;\n\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\tbreak;\n\t\t\tcase S.HEADERS_ALMOST_DONE:\n\t\t\t\tif (c !== LF)\n\t\t\t\t\treturn i;\n\t\t\t\tcallback('headersEnd');\n\t\t\t\tstate = S.PART_DATA_START;\n\t\t\t\tbreak;\n\t\t\tcase S.PART_DATA_START:\n\t\t\t\tstate = S.PART_DATA;\n\t\t\t\tmark('partData');\n\t\t\tcase S.PART_DATA:\n\t\t\t\tprevIndex = index;\n\n\t\t\t\tif (!index) {\n\t\t\t\t\t// boyer-moore derrived algorithm to safely skip non-boundary data\n\t\t\t\t\ti += boundaryEnd;\n\t\t\t\t\twhile (i < bufferLength && !(buffer[i] in boundaryChars))\n\t\t\t\t\t\ti += boundaryLength;\n\t\t\t\t\ti -= boundaryEnd;\n\t\t\t\t\tc = buffer[i];\n\t\t\t\t}\n\n\t\t\t\tif (index < boundary.length) {\n\t\t\t\t\tif (boundary[index] === c) {\n\t\t\t\t\t\tif (!index)\n\t\t\t\t\t\t\tdataCallback('partData', true);\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t} else\n\t\t\t\t\t\tindex = 0;\n\t\t\t\t} else if (index === boundary.length) {\n\t\t\t\t\tindex++;\n\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\t// CR = part boundary\n\t\t\t\t\t\tflags |= FB.PART_BOUNDARY;\n\t\t\t\t\t} else if (c === HYPHEN) {\n\t\t\t\t\t\t// HYPHEN = end boundary\n\t\t\t\t\t\tflags |= FB.LAST_BOUNDARY;\n\t\t\t\t\t} else\n\t\t\t\t\t\tindex = 0;\n\t\t\t\t} else if (index - 1 === boundary.length) {\n\t\t\t\t\tif (flags & FB.PART_BOUNDARY) {\n\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\tif (c === LF) {\n\t\t\t\t\t\t\t// unset the PART_BOUNDARY flag\n\t\t\t\t\t\t\tflags &= ~FB.PART_BOUNDARY;\n\t\t\t\t\t\t\tcallback('partEnd');\n\t\t\t\t\t\t\tcallback('partBegin');\n\t\t\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (flags & FB.LAST_BOUNDARY) {\n\t\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\t\tcallback('partEnd');\n\t\t\t\t\t\t\tcallback('end');\n\t\t\t\t\t\t\tstate = S.END;\n\t\t\t\t\t\t\tflags = 0;\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t} else\n\t\t\t\t\t\tindex = 0;\n\t\t\t\t}\n\n\t\t\t\tif (index) {\n\t\t\t\t\t// when matching a possible boundary, keep a lookbehind reference\n\t\t\t\t\t// in case it turns out to be a false lead\n\t\t\t\t\tlookbehind[index - 1] = c;\n\t\t\t\t} else if (prevIndex) {\n\t\t\t\t\t// if our boundary turned out to be rubbish, the captured lookbehind\n\t\t\t\t\t// belongs to partData\n\t\t\t\t\tcallback('partData', lookbehind, 0, prevIndex);\n\t\t\t\t\tprevIndex = 0;\n\t\t\t\t\tmark('partData');\n\t\t\t\t\t// reconsider the current character even so it interrupted the sequence\n\t\t\t\t\t// it could be the beginning of a new sequence\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase S.END:\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn i;\n\t\t}\n\t}\n\n\tdataCallback('headerField');\n\tdataCallback('headerValue');\n\tdataCallback('partData');\n\n\tself.index = index;\n\tself.state = state;\n\tself.flags = flags;\n\n\treturn len;\n};\n\nMultipartParser.prototype.end = function() {\n\n\tvar self = this;\n\n\tvar callback = function(self, name) {\n\t\tvar callbackSymbol = 'on' + name.substr(0, 1).toUpperCase() + name.substr(1);\n\t\tif (callbackSymbol in self)\n\t\t\tself[callbackSymbol]();\n\t};\n\n\tif ((self.state === S.HEADER_FIELD_START && self.index === 0) ||\n\t\t(self.state === S.PART_DATA && self.index == self.boundary.length)) {\n\t\tcallback(self, 'partEnd');\n\t\tcallback(self, 'end');\n\t} else if (self.state != S.END) {\n\t\tcallback(self, 'partEnd');\n\t\tcallback(self, 'end');\n\t\treturn new Error('MultipartParser.end(): stream ended unexpectedly: ' + self.explain());\n\t}\n};\n\nMultipartParser.prototype.explain = function() {\n\treturn 'state = ' + MultipartParser.stateToString(this.state);\n};\n\n// *********************************************************************************\n// =================================================================================\n// VIEW ENGINE\n// =================================================================================\n// *********************************************************************************\n\nfunction view_parse_localization(content, language) {\n\n\tvar is = false;\n\n\tcontent = content.replace(REG_NOTRANSLATE, function(text) {\n\t\tis = true;\n\t\treturn '';\n\t}).trim();\n\n\tif (is)\n\t\treturn content;\n\n\tvar command = view_find_localization(content, 0);\n\tvar output = '';\n\tvar end = 0;\n\n\tif (!command)\n\t\treturn content;\n\n\twhile (command) {\n\t\tif (command)\n\t\t\toutput += content.substring(end ? end + 1 : 0, command.beg) + F.translate(language, command.command);\n\t\tend = command.end;\n\t\tcommand = view_find_localization(content, command.end);\n\t}\n\n\toutput += content.substring(end + 1);\n\treturn output;\n}\n\nfunction view_parse(content, minify, filename, controller) {\n\n\tif (minify)\n\t\tcontent = removeComments(content);\n\n\tvar nocompressHTML = false;\n\tvar nocompressJS = false;\n\tvar nocompressCSS = false;\n\tvar hascomponents = content.indexOf('@{component(') !== -1;\n\n\tcontent = content.replace(REG_NOCOMPRESS, function(text) {\n\n\t\tvar index = text.lastIndexOf(' ');\n\t\tif (index === -1)\n\t\t\treturn '';\n\n\t\tswitch (text.substring(index, text.length - 1).trim()) {\n\t\t\tcase 'all':\n\t\t\t\tnocompressHTML = true;\n\t\t\t\tnocompressJS = true;\n\t\t\t\tnocompressCSS = true;\n\t\t\t\tbreak;\n\t\t\tcase 'html':\n\t\t\t\tnocompressHTML = true;\n\t\t\t\tbreak;\n\t\t\tcase 'js':\n\t\t\tcase 'script':\n\t\t\tcase 'javascript':\n\t\t\t\tnocompressJS = true;\n\t\t\t\tbreak;\n\t\t\tcase 'css':\n\t\t\tcase 'style':\n\t\t\t\tnocompressCSS = true;\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn '';\n\t}).trim();\n\n\tif (!nocompressJS)\n\t\tcontent = compressJS(content, 0, filename);\n\tif (!nocompressCSS)\n\t\tcontent = compressCSS(content, 0, filename);\n\n\tcontent = F._version_prepare(content);\n\n\tvar DELIMITER = '\\'';\n\tvar SPACE = ' ';\n\tvar builder = 'var $EMPTY=\\'\\';var $length=0;var $source=null;var $tmp=index;var $output=$EMPTY';\n\tvar command = view_find_command(content, 0);\n\tvar compressed = '';\n\tvar nocompress = false;\n\tvar isFirst = false;\n\tvar pharse = '';\n\tvar txtindex = -1;\n\n\tfunction escaper(value) {\n\n\t\tvar is = REG_TAGREMOVE.test(value);\n\n\t\tif (!nocompressHTML)\n\t\t\tvalue = compressHTML(value, minify, true);\n\t\telse if (!isFirst) {\n\t\t\tisFirst = true;\n\t\t\tvalue = value.replace(/^\\s+/, '');\n\t\t}\n\n\t\tif (!value)\n\t\t\treturn '$EMPTY';\n\n\t\tif (!nocompressHTML && is)\n\t\t\tvalue += ' ';\n\n\t\ttxtindex = $VIEWCACHE.indexOf(value);\n\n\t\tif (txtindex === -1) {\n\t\t\ttxtindex = $VIEWCACHE.length;\n\t\t\t$VIEWCACHE.push(value);\n\t\t}\n\n\t\treturn '$VIEWCACHE[' + txtindex + ']';\n\t}\n\n\tif (!command)\n\t\tbuilder += '+' + escaper(content);\n\n\tvar old = null;\n\tvar newCommand = '';\n\tvar tmp = '';\n\tvar index = 0;\n\tvar counter = 0;\n\tvar functions = [];\n\tvar functionsName = [];\n\tvar isFN = false;\n\tvar isSECTION = false;\n\tvar isCOMPILATION = false;\n\tvar builderTMP = '';\n\tvar sectionName = '';\n\tvar compileName = '';\n\tvar text;\n\n\twhile (command) {\n\n\t\tif (old) {\n\t\t\ttext = content.substring(old.end + 1, command.beg);\n\t\t\tif (text) {\n\t\t\t\tif (view_parse_plus(builder))\n\t\t\t\t\tbuilder += '+';\n\t\t\t\tbuilder += escaper(text);\n\t\t\t}\n\t\t} else {\n\t\t\ttext = content.substring(0, command.beg);\n\t\t\tif (text) {\n\t\t\t\tif (view_parse_plus(builder))\n\t\t\t\t\tbuilder += '+';\n\t\t\t\tbuilder += escaper(text);\n\t\t\t}\n\t\t}\n\n\t\tvar cmd = content.substring(command.beg + 2, command.end).trim();\n\n\t\tvar cmd8 = cmd.substring(0, 8);\n\t\tvar cmd7 = cmd.substring(0, 7);\n\n\t\tif (cmd === 'continue' || cmd === 'break') {\n\t\t\tbuilder += ';' + cmd + ';';\n\t\t\told = command;\n\t\t\tcommand = view_find_command(content, command.end);\n\t\t\tcontinue;\n\t\t}\n\n\t\tcmd = cmd.replace(REG_HELPERS, function(text) {\n\t\t\tvar index = text.indexOf('(');\n\t\t\treturn index === - 1 ? text : text.substring(0, index) + '.call(self' + (text.endsWith('()') ? ')' : ',' + text.substring(index + 1));\n\t\t});\n\n\t\tpharse = cmd;\n\n\t\tif (cmd[0] === '\\'' || cmd[0] === '\"') {\n\t\t\tbuilder += '+' + DELIMITER + (new Function('self', 'return self.$import(' + cmd[0] + '!' + cmd.substring(1) + ')'))(controller) + DELIMITER;\n\t\t} else if (cmd7 === 'compile' && cmd.lastIndexOf(')') === -1) {\n\n\t\t\tbuilderTMP = builder + '+(F.onCompileView.call(self,\\'' + (cmd8[7] === ' ' ? cmd.substring(8) : '') + '\\',';\n\t\t\tbuilder = '';\n\t\t\tsectionName = cmd.substring(8);\n\t\t\tisCOMPILATION = true;\n\t\t\tisFN = true;\n\n\t\t} else if (cmd8 === 'section ' && cmd.lastIndexOf(')') === -1) {\n\n\t\t\tbuilderTMP = builder;\n\t\t\tbuilder = '+(function(){var $output=$EMPTY';\n\t\t\tsectionName = cmd.substring(8);\n\t\t\tisSECTION = true;\n\t\t\tisFN = true;\n\n\t\t} else if (cmd7 === 'helper ') {\n\n\t\t\tbuilderTMP = builder;\n\t\t\tbuilder = 'function ' + cmd.substring(7).trim() + '{var $output=$EMPTY';\n\t\t\tisFN = true;\n\t\t\tfunctionsName.push(cmd.substring(7, cmd.indexOf('(', 7)).trim());\n\n\t\t} else if (cmd8 === 'foreach ') {\n\n\t\t\tcounter++;\n\n\t\t\tif (cmd.indexOf('foreach var ') !== -1)\n\t\t\t\tcmd = cmd.replace(' var ', SPACE);\n\n\t\t\tcmd = view_prepare_keywords(cmd);\n\t\t\tnewCommand = (cmd.substring(8, cmd.indexOf(SPACE, 8)) || '').trim();\n\t\t\tindex = cmd.trim().indexOf(SPACE, newCommand.length + 10);\n\n\t\t\tif (index === -1)\n\t\t\t\tindex = cmd.indexOf('[', newCommand.length + 10);\n\n\t\t\tbuilder += '+(function(){var $source=' + cmd.substring(index).trim() + ';if(!($source instanceof Array))$source=framework_utils.ObjectToArray($source);if(!$source.length)return $EMPTY;var $length=$source.length;var $output=$EMPTY;var index=0;for(var $i=0;$i<$length;$i++){index=$i;var ' + newCommand + '=$source[$i];$output+=$EMPTY';\n\t\t} else if (cmd === 'end') {\n\n\t\t  if (isFN && counter <= 0) {\n\t\t\t\tcounter = 0;\n\n\t\t\t\tif (isCOMPILATION) {\n\t\t\t\t\tbuilder = builderTMP + 'unescape($EMPTY' + builder + '),model) || $EMPTY)';\n\t\t\t\t\tbuilderTMP = '';\n\t\t\t\t} else if (isSECTION) {\n\t\t\t\t\tbuilder = builderTMP + builder + ';repository[\\'$section_' + sectionName + '\\']=repository[\\'$section_' + sectionName + '\\']?repository[\\'$section_' + sectionName + '\\']+$output:$output;return $EMPTY})()';\n\t\t\t\t\tbuilderTMP = '';\n\t\t\t\t} else {\n\t\t\t\t\tbuilder += ';return $output;}';\n\t\t\t\t\tfunctions.push(builder);\n\t\t\t\t\tbuilder = builderTMP;\n\t\t\t\t\tbuilderTMP = '';\n\t\t\t\t}\n\n\t\t\t\tisSECTION = false;\n\t\t\t\tisCOMPILATION = false;\n\t\t\t\tisFN = false;\n\n\t\t\t} else {\n\t\t\t\tcounter--;\n\t\t\t\tbuilder += '}return $output;})()';\n\t\t\t\tnewCommand = '';\n\t\t\t}\n\n\t\t} else if (cmd.substring(0, 3) === 'if ') {\n\t\t\tbuilder += ';if (' + view_prepare_keywords(cmd).substring(3) + '){$output+=$EMPTY';\n\t\t} else if (cmd7 === 'else if') {\n\t\t\tbuilder += '} else if (' + view_prepare_keywords(cmd).substring(7) + ') {$output+=$EMPTY';\n\t\t} else if (cmd === 'else') {\n\t\t\tbuilder += '} else {$output+=$EMPTY';\n\t\t} else if (cmd === 'endif' || cmd === 'fi') {\n\t\t\tbuilder += '}$output+=$EMPTY';\n\t\t} else {\n\n\t\t\ttmp = view_prepare(command.command, newCommand, functionsName, () => nocompress = true);\n\t\t\tvar can = false;\n\n\t\t\t// Inline rendering is supported only in release mode\n\t\t\tif (RELEASE && tmp.indexOf('+') === -1 && REG_SKIP_1.test(tmp) && !REG_SKIP_2.test(tmp)) {\n\t\t\t\tfor (var a = 0, al = RENDERNOW.length; a < al; a++) {\n\t\t\t\t\tif (tmp.startsWith(RENDERNOW[a])) {\n\t\t\t\t\t\tif (!a) {\n\t\t\t\t\t\t\tvar isMeta = tmp.indexOf('\\'meta\\'') !== -1;\n\t\t\t\t\t\t\tvar isHead = tmp.indexOf('\\'head\\'') !== -1;\n\t\t\t\t\t\t\tvar isComponent = tmp.indexOf('\\'components\\'') !== -1;\n\t\t\t\t\t\t\ttmp = tmp.replace(/\\'(meta|head|components)\\'\\,/g, '').replace(/(\\,\\,|\\,\\)|\\s{1,})/g, '');\n\t\t\t\t\t\t\tif (isMeta || isHead || isComponent) {\n\t\t\t\t\t\t\t\tvar tmpimp = '';\n\t\t\t\t\t\t\t\tif (isMeta)\n\t\t\t\t\t\t\t\t\ttmpimp += (isMeta ? '\\'meta\\'' : '');\n\t\t\t\t\t\t\t\tif (isHead)\n\t\t\t\t\t\t\t\t\ttmpimp += (tmpimp ? ',' : '') + (isHead ? '\\'head\\'' : '');\n\t\t\t\t\t\t\t\tif (isComponent)\n\t\t\t\t\t\t\t\t\ttmpimp += (tmpimp ? ',' : '') + (isComponent ? '\\'components\\'' : '');\n\t\t\t\t\t\t\t\tbuilder += '+self.$import(' + tmpimp + ')';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcan = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (can && !counter) {\n\t\t\t\ttry {\n\t\t\t\t\tvar fn = new Function('self', 'return ' + tmp);\n\t\t\t\t\tbuilder += '+' + DELIMITER + fn(controller).replace(/\\\\/g, '\\\\\\\\').replace(/\\'/g, '\\\\\\'') + DELIMITER;\n\t\t\t\t} catch (e) {\n\n\t\t\t\t\tconsole.log('VIEW EXCEPTION --->', filename, e, tmp);\n\t\t\t\t\tF.errors.push({ error: e.stack, name: filename, url: null, date: new Date() });\n\n\t\t\t\t\tif (view_parse_plus(builder))\n\t\t\t\t\t\tbuilder += '+';\n\t\t\t\t\tbuilder += wrapTryCatch(tmp, command.command, command.line);\n\t\t\t\t}\n\t\t\t} else if (tmp) {\n\t\t\t\tif (view_parse_plus(builder))\n\t\t\t\t\tbuilder += '+';\n\t\t\t\tbuilder += wrapTryCatch(tmp, command.command, command.line);\n\t\t\t}\n\t\t}\n\n\t\told = command;\n\t\tcommand = view_find_command(content, command.end);\n\t}\n\n\tif (old) {\n\t\ttext = content.substring(old.end + 1);\n\t\tif (text)\n\t\t\tbuilder += '+' + escaper(text);\n\t}\n\n\tif (RELEASE)\n\t\tbuilder = builder.replace(/(\\+\\$EMPTY\\+)/g, '+').replace(/(\\$output\\=\\$EMPTY\\+)/g, '$output=').replace(/(\\$output\\+\\=\\$EMPTY\\+)/g, '$output+=').replace(/(\\}\\$output\\+\\=\\$EMPTY)/g, '}').replace(/(\\{\\$output\\+\\=\\$EMPTY\\;)/g, '{').replace(/(\\+\\$EMPTY\\+)/g, '+').replace(/(\\>\\'\\+\\'\\<)/g, '><').replace(/\\'\\+\\'/g, '');\n\n\tvar fn = '(function(self,repository,model,session,query,body,url,global,helpers,user,config,functions,index,output,cookie,files,mobile,settings){var get=query;var post=body;var theme=this.themeName;var language=this.language;var cookie=function(name){return controller.req.cookie(name);};' + (functions.length ? functions.join('') + ';' : '') + 'var controller=self;' + builder + ';return $output;})';\n\ttry {\n\t\tfn = eval(fn);\n\t} catch (e) {\n\t\tthrow new Error(filename + ': ' + e.message.toString());\n\t}\n\treturn fn;\n}\n\nfunction view_prepare_keywords(cmd) {\n\treturn cmd.replace(REG_SITEMAP, text => ' self.' + text.trim());\n}\n\nfunction wrapTryCatch(value, command, line) {\n\treturn F.isDebug ? ('(function(){try{return ' + value + '}catch(e){throw new Error(unescape(\\'' + escape(command) + '\\') + \\' - Line: ' + line + ' - \\' + e.message.toString());}return $EMPTY})()') : value;\n}\n\nfunction view_parse_plus(builder) {\n\tvar c = builder[builder.length - 1];\n\treturn c !== '!' && c !== '?' && c !== '+' && c !== '.' && c !== ':';\n}\n\nfunction view_prepare(command, dynamicCommand, functions) {\n\n\tvar a = command.indexOf('.');\n\tvar b = command.indexOf('(');\n\tvar c = command.indexOf('[');\n\n\tvar max = [];\n\tvar tmp = 0;\n\n\tif (a !== -1)\n\t\tmax.push(a);\n\n\tif (b !== -1)\n\t\tmax.push(b);\n\n\tif (c !== -1)\n\t\tmax.push(c);\n\n\tvar index = Math.min.apply(this, max);\n\n\tif (index === -1)\n\t\tindex = command.length;\n\n\tvar name = command.substring(0, index);\n\tif (name === dynamicCommand)\n\t\treturn '$STRING(' + command + ').encode()';\n\n\tif (name[0] === '!' && name.substring(1) === dynamicCommand)\n\t\treturn '$STRING(' + command.substring(1) + ')';\n\n\tswitch (name) {\n\n\t\tcase 'foreach':\n\t\tcase 'end':\n\t\t\treturn '';\n\n\t\tcase 'section':\n\t\t\ttmp = command.indexOf('(');\n\t\t\treturn tmp === -1 ? '' : '(repository[\\'$section_' + command.substring(tmp + 1, command.length - 1).replace(/\\'|\\\"/g, '') + '\\'] || \\'\\')';\n\n\t\tcase 'log':\n\t\tcase 'LOG':\n\t\t\treturn '(' + (name === 'log' ? 'F.' : '') + command + '?$EMPTY:$EMPTY)';\n\n\t\tcase 'logger':\n\t\tcase 'LOGGER':\n\t\t\treturn '(' + (name === 'logger' ? 'F.' : '') + command + '?$EMPTY:$EMPTY)';\n\n\t\tcase 'console':\n\t\t\treturn '(' + command + '?$EMPTY:$EMPTY)';\n\n\t\tcase '!cookie':\n\t\t\treturn '$STRING(' + command + ')';\n\t\tcase '!isomorphic':\n\t\t\treturn '$STRING(' + command + ')';\n\n\t\tcase 'model':\n\t\tcase 'repository':\n\t\tcase 'get':\n\t\tcase 'post':\n\t\tcase 'query':\n\t\tcase 'global':\n\t\tcase 'session':\n\t\tcase 'user':\n\t\tcase 'config':\n\t\tcase 'controller':\n\t\t\tif (view_is_assign(command))\n\t\t\t\treturn 'self.$set(' + command + ')';\n\t\t\treturn '$STRING(' + command + ').encode()';\n\n\t\tcase 'body':\n\t\t\tif (view_is_assign(command))\n\t\t\t\treturn 'self.$set(' + command + ')';\n\t\t\tif (command.lastIndexOf('.') === -1)\n\t\t\t\treturn 'output';\n\t\t\treturn '$STRING(' + command + ').encode()';\n\n\t\tcase 'files':\n\t\tcase 'mobile':\n\t\tcase 'continue':\n\t\tcase 'break':\n\t\tcase 'language':\n\t\tcase 'TRANSLATE':\n\t\tcase 'helpers':\n\t\t\treturn command;\n\n\t\tcase 'cookie':\n\t\tcase 'isomorphic':\n\t\tcase 'settings':\n\t\tcase 'CONFIG':\n\t\tcase 'function':\n\t\tcase 'MODEL':\n\t\tcase 'SCHEMA':\n\t\tcase 'MODULE':\n\t\tcase 'functions':\n\t\t\treturn '$STRING(' + command + ').encode()';\n\n\t\tcase '!controller':\n\t\tcase '!repository':\n\t\tcase '!get':\n\t\tcase '!post':\n\t\tcase '!body':\n\t\tcase '!query':\n\t\tcase '!global':\n\t\tcase '!session':\n\t\tcase '!user':\n\t\tcase '!config':\n\t\tcase '!functions':\n\t\tcase '!model':\n\t\tcase '!CONFIG':\n\t\tcase '!SCHEMA':\n\t\tcase '!function':\n\t\tcase '!MODEL':\n\t\tcase '!MODULE':\n\t\t\treturn '$STRING(' + command.substring(1) + ')';\n\n\t\tcase 'resource':\n\t\t\treturn '$STRING(self.' + command + ').encode()';\n\t\tcase 'RESOURCE':\n\t\t\treturn '$STRING(self.' + command.toLowerCase() + ').encode()';\n\n\t\tcase '!resource':\n\t\tcase '!RESOURCE':\n\t\t\treturn '$STRING(self.' + command.substring(1) + ')';\n\n\t\tcase 'host':\n\t\tcase 'hostname':\n\t\t\tif (command.indexOf('(') === -1)\n\t\t\t\treturn 'self.host()';\n\t\t\treturn 'self.' + command;\n\n\t\tcase 'href':\n\t\t\tif (command.indexOf('(') === -1)\n\t\t\t\treturn 'self.href()';\n\t\t\treturn 'self.' + command;\n\n\t\tcase 'url':\n\t\t\tif (command.indexOf('(') !== -1)\n\t\t\t\treturn 'self.$' + command;\n\t\t\treturn 'self.' + command;\n\n\t\tcase 'title':\n\t\tcase 'description':\n\t\tcase 'keywords':\n\t\tcase 'author':\n\t\t\tif (command.indexOf('(') !== -1)\n\t\t\t\treturn 'self.$' + command;\n\t\t\treturn '(repository[\\'$' + command + '\\'] || \\'\\').toString().encode()';\n\n\t\tcase 'title2':\n\t\t\treturn 'self.$' + command;;\n\n\t\tcase '!title':\n\t\tcase '!description':\n\t\tcase '!keywords':\n\t\tcase '!author':\n\t\t\treturn '(repository[\\'$' + command.substring(1) + '\\'] || \\'\\')';\n\n\t\tcase 'head':\n\t\t\tif (command.indexOf('(') !== -1)\n\t\t\t\treturn 'self.$' + command;\n\t\t\treturn 'self.' + command + '()';\n\n\t\tcase 'sitemap_url':\n\t\tcase 'sitemap_name':\n\t\tcase 'sitemap_navigation':\n\t\t\treturn 'self.' + command;\n\n\t\tcase 'sitemap':\n\t\tcase 'place':\n\t\t\tif (command.indexOf('(') !== -1)\n\t\t\t\treturn 'self.$' + command;\n\t\t\treturn '(repository[\\'$' + command + '\\'] || \\'\\')';\n\n\t\tcase 'meta':\n\t\t\tif (command.indexOf('(') !== -1)\n\t\t\t\treturn 'self.$' + command;\n\t\t\treturn 'self.$meta()';\n\n\t\tcase 'js':\n\t\tcase 'script':\n\t\tcase 'css':\n\t\tcase 'favicon':\n\t\tcase 'import':\n\t\tcase 'absolute':\n\t\t\treturn 'self.$' + command + (command.indexOf('(') === -1 ? '()' : '');\n\n\t\tcase 'index':\n\t\t\treturn '(' + command + ')';\n\n\t\tcase 'component':\n\t\tcase 'routeJS':\n\t\tcase 'routeCSS':\n\t\tcase 'routeScript':\n\t\tcase 'routeStyle':\n\t\tcase 'routeImage':\n\t\tcase 'routeFont':\n\t\tcase 'routeDownload':\n\t\tcase 'routeVideo':\n\t\tcase 'routeStatic':\n\t\t\treturn 'self.' + command;\n\t\tcase 'translate':\n\t\t\treturn 'self.' + command;\n\t\tcase 'json':\n\t\tcase 'image':\n\t\tcase 'layout':\n\t\tcase 'template':\n\t\tcase 'templateToggle':\n\t\tcase 'view':\n\t\tcase 'viewCompile':\n\t\tcase 'viewToggle':\n\t\tcase 'helper':\n\t\tcase 'download':\n\t\tcase 'selected':\n\t\tcase 'disabled':\n\t\tcase 'checked':\n\t\tcase 'etag':\n\t\tcase 'header':\n\t\tcase 'modified':\n\t\tcase 'options':\n\t\tcase 'readonly':\n\t\tcase 'canonical':\n\t\tcase 'dns':\n\t\tcase 'next':\n\t\tcase 'prefetch':\n\t\tcase 'prerender':\n\t\tcase 'prev':\n\t\tcase 'sitemap_change':\n\t\tcase 'sitemap_replace':\n\t\t\treturn 'self.$' + command;\n\n\t\tcase 'now':\n\t\t\treturn '(new Date()' + command.substring(3) + ')';\n\n\t\tcase 'radio':\n\t\tcase 'text':\n\t\tcase 'checkbox':\n\t\tcase 'hidden':\n\t\tcase 'textarea':\n\t\tcase 'password':\n\t\t\treturn 'self.$' + exports.appendModel(command);\n\n\t\tdefault:\n\t\t\treturn F.helpers[name] ? ('helpers.' + view_insert_call(command)) : ('$STRING(' + (functions.indexOf(name) === -1 ? command[0] === '!' ? command.substring(1) + ')' : command + ').encode()' : command + ')'));\n\t}\n\n\treturn command;\n}\n\nfunction view_insert_call(command) {\n\n\tvar beg = command.indexOf('(');\n\tif (beg === -1)\n\t\treturn command;\n\n\tvar length = command.length;\n\tvar count = 0;\n\n\tfor (var i = beg + 1; i < length; i++) {\n\n\t\tvar c = command[i];\n\n\t\tif (c !== '(' && c !== ')')\n\t\t\tcontinue;\n\n\t\tif (c === '(') {\n\t\t\tcount++;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (count > 0) {\n\t\t\tcount--;\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar arg = command.substring(beg + 1);\n\t\treturn command.substring(0, beg) + '.call(self' + (arg.length > 1 ? ',' + arg : ')');\n\t}\n\n\treturn command;\n}\n\nfunction view_is_assign(value) {\n\n\tvar length = value.length;\n\tvar skip = 0;\n\n\tfor (var i = 0; i < length; i++) {\n\n\t\tvar c = value[i];\n\n\t\tif (c === '[') {\n\t\t\tskip++;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (c === ']') {\n\t\t\tskip--;\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar next = value[i + 1] || '';\n\n\t\tif (c === '+' && (next === '+' || next === '=')) {\n\t\t\tif (!skip)\n\t\t\t\treturn true;\n\t\t}\n\n\t\tif (c === '-' && (next === '-' || next === '=')) {\n\t\t\tif (!skip)\n\t\t\t\treturn true;\n\t\t}\n\n\t\tif (c === '*' && (next === '*' || next === '=')) {\n\t\t\tif (!skip)\n\t\t\t\treturn true;\n\t\t}\n\n\t\tif (c === '=') {\n\t\t\tif (!skip)\n\t\t\t\treturn true;\n\t\t}\n\n\t}\n\n\treturn false;\n}\n\nfunction view_find_command(content, index) {\n\n\tindex = content.indexOf('@{', index);\n\tif (index === -1)\n\t\treturn null;\n\n\tvar length = content.length;\n\tvar count = 0;\n\n\tfor (var i = index + 2; i < length; i++) {\n\t\tvar c = content[i];\n\n\t\tif (c === '{') {\n\t\t\tcount++;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (c !== '}')\n\t\t\tcontinue;\n\t\telse if (count > 0) {\n\t\t\tcount--;\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar command = content.substring(index + 2, i).trim();\n\n\t\t// @{{ SKIP }}\n\t\tif (command[0] === '{')\n\t\t\treturn view_find_command(content, index + 1);\n\n\t\treturn {\n\t\t\tbeg: index,\n\t\t\tend: i,\n\t\t\tline: view_line_counter(content.substr(0, index)),\n\t\t\tcommand: command\n\t\t};\n\t}\n\n\treturn null;\n}\n\nfunction view_line_counter(value) {\n\tvar count = value.match(/\\n/g);\n\treturn count ? count.length : 0;\n}\n\nfunction view_find_localization(content, index) {\n\n\tindex = content.indexOf('@(', index);\n\tif (index === -1)\n\t\treturn null;\n\n\tvar length = content.length;\n\tvar count = 0;\n\n\tfor (var i = index + 2; i < length; i++) {\n\t\tvar c = content[i];\n\n\t\tif (c === '(') {\n\t\t\tcount++;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (c !== ')')\n\t\t\tcontinue;\n\t\telse if (count) {\n\t\t\tcount--;\n\t\t\tcontinue;\n\t\t}\n\n\t\treturn {\n\t\t\tbeg: index,\n\t\t\tend: i,\n\t\t\tcommand: content.substring(index + 2, i).trim()\n\t\t};\n\t}\n\n\treturn null;\n}\n\nfunction removeCondition(text, beg) {\n\n\tif (beg) {\n\t\tif (text[0] === '+')\n\t\t\treturn text.substring(1, text.length);\n\t} else {\n\t\tif (text[text.length - 1] === '+')\n\t\t\treturn text.substring(0, text.length - 1);\n\t}\n\n\treturn text;\n}\n\nfunction removeComments(html) {\n\tvar tagBeg = '<!--';\n\tvar tagEnd = '-->';\n\tvar beg = html.indexOf(tagBeg);\n\tvar end = 0;\n\n\twhile (beg !== -1) {\n\t\tend = html.indexOf(tagEnd, beg + 4);\n\n\t\tif (end === -1)\n\t\t\tbreak;\n\n\t\tvar comment = html.substring(beg, end + 3);\n\t\tif (comment.indexOf('[if') !== -1 || comment.indexOf('[endif') !== -1) {\n\t\t\tbeg = html.indexOf(tagBeg, end + 3);\n\t\t} else {\n\t\t\thtml = html.replacer(comment, '');\n\t\t\tbeg = html.indexOf(tagBeg, beg);\n\t\t}\n\t}\n\n\treturn html;\n}\n\n/**\n * Inline JS compressor\n * @private\n * @param  {String} html HTML.\n * @param  {Number} index Last index.\n * @return {String}\n */\nfunction compressJS(html, index, filename) {\n\n\tif (!F.config['allow-compile-script'])\n\t\treturn html;\n\n\tvar strFrom = '<script type=\"text/javascript\">';\n\tvar strTo = '</script>';\n\n\tvar indexBeg = html.indexOf(strFrom, index || 0);\n\tif (indexBeg === -1) {\n\t\tstrFrom = '<script>';\n\t\tindexBeg = html.indexOf(strFrom, index || 0);\n\t\tif (indexBeg === -1)\n\t\t\treturn html;\n\t}\n\n\tvar indexEnd = html.indexOf(strTo, indexBeg + strFrom.length);\n\tif (indexEnd === -1)\n\t\treturn html;\n\n\tvar js = html.substring(indexBeg, indexEnd + strTo.length).trim();\n\tvar beg = html.indexOf(js);\n\tif (beg === -1)\n\t\treturn html;\n\n\tvar val = js.substring(strFrom.length, js.length - strTo.length).trim();\n\tvar compiled = exports.compile_javascript(val, filename);\n\thtml = html.replacer(js, strFrom + compiled.trim() + strTo.trim());\n\treturn compressJS(html, indexBeg + compiled.length + 9, filename);\n}\n\nfunction compressCSS(html, index, filename) {\n\n\tvar strFrom = '<style type=\"text/css\">';\n\tvar strTo = '</style>';\n\n\tvar indexBeg = html.indexOf(strFrom, index || 0);\n\tif (indexBeg === -1) {\n\t\tstrFrom = '<style>';\n\t\tindexBeg = html.indexOf(strFrom, index || 0);\n\t\tif (indexBeg === -1)\n\t\t\treturn html;\n\t}\n\n\tvar indexEnd = html.indexOf(strTo, indexBeg + strFrom.length);\n\tif (indexEnd === -1)\n\t\treturn html;\n\n\tvar css = html.substring(indexBeg, indexEnd + strTo.length);\n\tvar val = css.substring(strFrom.length, css.length - strTo.length).trim();\n\tvar compiled = exports.compile_css(val, filename);\n\thtml = html.replacer(css, (strFrom + compiled.trim() + strTo).trim());\n\treturn compressCSS(html, indexBeg + compiled.length + 8, filename);\n}\n\nfunction variablesCSS(content) {\n\n\tif (!content)\n\t\treturn content;\n\n\tvar variables = {};\n\n\tcontent = content.replace(/\\$[a-z0-9-_]+\\:.*?;/gi, function(text) {\n\t\tvar index = text.indexOf(':');\n\t\tif (index === -1)\n\t\t\treturn text;\n\t\tvar key = text.substring(0, index).trim();\n\t\tvariables[key] = text.substring(index + 1, text.length - 1).trim();\n\t\treturn '';\n\t});\n\n\tcontent = content.replace(/\\$[a-z0-9-_]+/gi, function(text, position) {\n\t\tvar variable = variables[text];\n\t\treturn variable ? variable : text;\n\t}).trim();\n\n\treturn content;\n}\n\nfunction nested(css, id, variable) {\n\n\tif (!css)\n\t\treturn css;\n\n\tvar index = 0;\n\tvar output = '';\n\tvar A = false;\n\tvar count = 0;\n\tvar beg;\n\tvar begAt;\n\tvar valid = false;\n\tvar plus = '';\n\tvar skip = false;\n\tvar skipImport = '';\n\tvar isComment = false;\n\tvar comment = '';\n\tvar skipView = false;\n\tvar skipType;\n\n\twhile (true) {\n\n\t\tvar a = css[index++];\n\t\tif (!a)\n\t\t\tbreak;\n\n\t\tif (a === '/' && css[index] === '*') {\n\t\t\tisComment = true;\n\t\t\tindex++;\n\t\t\tcomment = '';\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (isComment) {\n\t\t\tcomment += a;\n\t\t\tif (a === '*' && css[index] === '/') {\n\t\t\t\tisComment = false;\n\t\t\t\tindex++;\n\t\t\t\tif (comment === 'auto*')\n\t\t\t\t\toutput += '/*auto*/';\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (a === '\\n' || a === '\\r')\n\t\t\tcontinue;\n\n\t\tif (a === '$' && variable)\n\t\t\tvariable();\n\n\t\tif (a === '@' && css[index] === '{')\n\t\t\tskipView = true;\n\n\t\tif (skipView) {\n\t\t\tplus += a;\n\t\t\tif (a === '}')\n\t\t\t\tskipView = false;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (a === '\\'' || a === '\"') {\n\t\t\tif (a === skipType && css[index] !== '\\\\')\n\t\t\t\tskipType = '';\n\t\t\telse if (!skipType) {\n\t\t\t\tskipType = a;\n\t\t\t}\n\t\t}\n\n\t\tif (skipType) {\n\t\t\tplus += a;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (a === '@') {\n\t\t\tbegAt = index;\n\t\t\tskip = true;\n\t\t}\n\n\t\tif (skip && !skipImport && (a === ';' || a === '{')) {\n\t\t\tskipImport = a;\n\t\t\tif (a === ';') {\n\t\t\t\toutput += css.substring(begAt - 1, index);\n\t\t\t\tskip = false;\n\t\t\t\tplus = '';\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tplus += a;\n\n\t\tif (a === '{') {\n\n\t\t\tif (A) {\n\t\t\t\tcount++;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tA = true;\n\t\t\tcount = 0;\n\t\t\tbeg = index;\n\t\t\tvalid = false;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (a === '}') {\n\n\t\t\tif (count > 0) {\n\t\t\t\tcount--;\n\t\t\t\tvalid = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!valid) {\n\t\t\t\toutput += plus;\n\t\t\t\tplus = '';\n\t\t\t\tA = false;\n\t\t\t\tskip = false;\n\t\t\t\tskipImport = '';\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (skip) {\n\n\t\t\t\tif (plus.indexOf('@keyframes') !== -1) {\n\t\t\t\t\toutput += plus;\n\t\t\t\t} else {\n\t\t\t\t\tbegAt = plus.indexOf('{');\n\t\t\t\t\toutput += plus.substring(0, begAt + 1) + process_nested(plus.substring(begAt), id).trim() + '}';\n\t\t\t\t}\n\n\t\t\t\tA = false;\n\t\t\t\tskip = false;\n\t\t\t\tskipImport = '';\n\t\t\t\tplus = '';\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar ni = beg - 1;\n\t\t\tvar name = '';\n\n\t\t\twhile (true) {\n\t\t\t\tvar b = css[ni--];\n\t\t\t\tif (b === '{')\n\t\t\t\t\tcontinue;\n\t\t\t\tif (b === '}' || b === '\\n' || b === '\\r' || b === undefined || (skipImport && skipImport === b))\n\t\t\t\t\tbreak;\n\t\t\t\tname = b + name;\n\t\t\t}\n\n\t\t\tA = false;\n\t\t\tskip = false;\n\t\t\tskipImport = '';\n\t\t\tplus = '';\n\t\t\toutput += process_nested(css.substring(beg - 1, index), (id || '') + name.trim());\n\t\t}\n\t}\n\n\treturn output + plus;\n}\n\nfunction process_nested(css, name) {\n\tcss = css.trim();\n\tcss = make_nested(css.substring(1, css.length - 1), name);\n\treturn nested(css, name);\n}\n\nfunction make_nested(css, name) {\n\n\tvar index = 0;\n\tvar plus = '';\n\tvar output = '';\n\tvar count = 0;\n\tvar A = false;\n\tvar valid = false;\n\tvar beg;\n\n\n\twhile (true) {\n\t\tvar a = css[index++];\n\n\t\tif (!a)\n\t\t\tbreak;\n\n\t\tif (a === '\\n' || a === '\\r')\n\t\t\tcontinue;\n\n\t\tif (a !== ' ' || plus[plus.length -1] !== ' ')\n\t\t\tplus += a;\n\n\t\tif (a === '{') {\n\n\t\t\tif (A) {\n\t\t\t\tcount++;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tA = true;\n\t\t\tcount = 0;\n\t\t\tbeg = index;\n\t\t\tvalid = false;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (a === '}') {\n\n\t\t\tif (count > 0) {\n\t\t\t\tcount--;\n\t\t\t\tvalid = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!valid) {\n\t\t\t\toutput += name + ' ' + plus.trim();\n\t\t\t\tplus = '';\n\t\t\t\tA = false;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\toutput += plus;\n\t\t}\n\t}\n\n\treturn output;\n}\n\nfunction compressHTML(html, minify, isChunk) {\n\n\tif (!html || !minify)\n\t\treturn html;\n\n\thtml = removeComments(html);\n\n\tvar tags = ['script', 'textarea', 'pre', 'code'];\n\tvar id = '[' + new Date().getTime() + ']#';\n\tvar cache = {};\n\tvar indexer = 0;\n\tvar length = tags.length;\n\tvar chars = 65;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar o = tags[i];\n\n\t\tvar tagBeg = '<' + o;\n\t\tvar tagEnd = '</' + o;\n\n\t\tvar beg = html.indexOf(tagBeg);\n\t\tvar end = 0;\n\t\tvar len = tagEnd.length;\n\n\t\twhile (beg !== -1) {\n\n\t\t\tend = html.indexOf(tagEnd, beg + 3);\n\t\t\tif (end === -1) {\n\t\t\t\tif (isChunk)\n\t\t\t\t\tend = html.length;\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tvar key = id + (indexer++) + String.fromCharCode(chars++);\n\t\t\tif (chars > 90)\n\t\t\t\tchars = 65;\n\n\t\t\tvar value = html.substring(beg, end + len);\n\n\t\t\tif (!i) {\n\t\t\t\tend = value.indexOf('>');\n\t\t\t\tlen = value.indexOf('type=\"text/template\"');\n\n\t\t\t\tif (len < end && len !== -1) {\n\t\t\t\t\tbeg = html.indexOf(tagBeg, beg + tagBeg.length);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tlen = value.indexOf('type=\"text/html\"');\n\n\t\t\t\tif (len < end && len !== -1) {\n\t\t\t\t\tbeg = html.indexOf(tagBeg, beg + tagBeg.length);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tlen = value.indexOf('type=\"text/ng-template\"');\n\n\t\t\t\tif (len < end && len !== -1) {\n\t\t\t\t\tbeg = html.indexOf(tagBeg, beg + tagBeg.length);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcache[key] = value;\n\t\t\thtml = html.replacer(value, key);\n\t\t\tbeg = html.indexOf(tagBeg, beg + tagBeg.length);\n\t\t}\n\t}\n\n\twhile (true) {\n\t\tif (!REG_6.test(html))\n\t\t\tbreak;\n\t\thtml = html.replace(REG_6, text => text.replace(/\\s+/g, ' '));\n\t}\n\n\thtml = html.replace(/>\\n\\s+/g, '>').replace(/(\\w|\\W)\\n\\s+</g, function(text) {\n\t\treturn text.trim().replace(/\\s/g, '');\n\t}).replace(REG_5, '><').replace(REG_4, function(text) {\n\t\tvar c = text[text.length - 1];\n\t\treturn c === '<' ? c : ' ' + c;\n\t}).replace(REG_1, '').replace(REG_2, '');\n\n\tfor (var key in cache)\n\t\thtml = html.replacer(key, cache[key]);\n\n\treturn html;\n}\n\n/**\n * Read file\n * @param {String} path\n * @return {Object}\n */\nfunction viewengine_read(path, controller) {\n\tvar config = F.config;\n\tvar out = path[0] === '.';\n\tvar filename = out ? path.substring(1) : F.path.views(path);\n\tvar key;\n\n\tif (RELEASE) {\n\t\tkey = '404/' + path;\n\t\tvar is = F.temporary.other[key];\n\t\tif (is !== undefined)\n\t\t\treturn null;\n\t}\n\n\tif (existsSync(filename))\n\t\treturn view_parse(view_parse_localization(modificators(Fs.readFileSync(filename).toString('utf8'), filename), controller.language), config['allow-compile-html'], filename, controller);\n\n\tvar index;\n\n\tif (out) {\n\n\t\tif (controller.themeName) {\n\t\t\tindex = filename.lastIndexOf('/');\n\t\t\tif (index !== -1) {\n\t\t\t\tfilename = filename.substring(0, filename.lastIndexOf('/', index - 1)) + filename.substring(index);\n\t\t\t\tif (existsSync(filename))\n\t\t\t\t\treturn view_parse(view_parse_localization(modificators(Fs.readFileSync(filename).toString('utf8'), filename), controller.language), config['allow-compile-html'], filename, controller);\n\t\t\t}\n\t\t}\n\n\t\tif (RELEASE)\n\t\t\tF.temporary.other[key] = null;\n\n\t\treturn null;\n\t}\n\n\tindex = path.lastIndexOf('/');\n\tif (index === -1) {\n\t\tif (RELEASE)\n\t\t\tF.temporary.other[key] = null;\n\t\treturn null;\n\t}\n\n\tfilename = F.path.views(path.substring(index + 1));\n\n\tif (existsSync(filename))\n\t\treturn view_parse(view_parse_localization(modificators(Fs.readFileSync(filename).toString('utf8'), filename), controller.language), config['allow-compile-html'], filename, controller);\n\n\tif (RELEASE)\n\t\tF.temporary.other[key] = null;\n\n\treturn null;\n};\n\nfunction modificators(value, filename, type) {\n\n\tif (!F.modificators)\n\t\treturn value;\n\n\tfor (var i = 0, length = F.modificators.length; i < length; i++) {\n\t\tvar output = F.modificators[i](type || 'view', filename, value);\n\t\tif (output)\n\t\t\tvalue = output;\n\t}\n\n\treturn value;\n};\n\nfunction viewengine_load(name, filename, controller) {\n\n\tvar precompiled = F.routes.views[name];\n\tif (precompiled)\n\t\tfilename = '.' + precompiled.filename;\n\telse\n\t\tfilename += '.html';\n\n\tvar key = 'view#' + filename + (controller.language || '');\n\tvar generator = F.temporary.views[key];\n\tif (generator)\n\t\treturn generator;\n\n\tgenerator = viewengine_read(filename, controller);\n\n\tif (!F.isDebug)\n\t\tF.temporary.views[key] = generator;\n\n\treturn generator;\n}\n\nfunction viewengine_dynamic(content, language, controller, cachekey) {\n\n\tvar generator = cachekey ? (F.temporary.views[cachekey] || null) : null;\n\tif (generator)\n\t\treturn generator;\n\n\tgenerator = view_parse(view_parse_localization(modificators(content, ''), language), F.config['allow-compile-html'], null, controller);\n\n\tif (cachekey && !F.isDebug)\n\t\tF.temporary.views[cachekey] = generator;\n\n\treturn generator;\n};\n\nexports.appendModel = function(str) {\n\tvar index = str.indexOf('(');\n\tif (index === -1)\n\t\treturn str;\n\tvar end = str.substring(index + 1);\n\treturn str.substring(0, index) + '(model' + (end[0] === ')' ? end : ',' + end);\n};\n\nfunction cleanURL(url, index) {\n\tvar o = url.substring(0, index);\n\tvar prev;\n\tvar skip = false;\n\n\tfor (var i = index, length = url.length; i < length; i++) {\n\t\tvar c = url[i];\n\t\tif (c === '/' && prev === '/' && !skip)\n\t\t\tcontinue;\n\t\tprev = c;\n\t\to += c;\n\t}\n\n\treturn o;\n};\n\nexports.preparePath = function(path, remove) {\n\tvar root = F.config['default-root'];\n\tif (!root)\n\t\treturn path;\n\tvar is = path[0] === '/';\n\tif ((is && path[1] === '/') || path[4] === ':' || path[5] === ':')\n\t\treturn path;\n\treturn remove ? path.substring(root.length - 1) : (root + (is ? path.substring(1) : path));\n};\n\nexports.parseURI = function(protocol, req) {\n\n\tvar cache = F.temporary.other[req.host];\n\tvar port;\n\tvar hostname;\n\n\tif (cache) {\n\t\tport = cache.port;\n\t\thostname = cache.hostname;\n\t} else {\n \t\tport = req.host.lastIndexOf(':')\n\t\tif (port === -1) {\n\t\t\tport = null;\n\t\t\thostname = req.host;\n\t\t} else {\n\t\t\thostname = req.host.substring(0, port);\n\t\t\tport = req.host.substring(port + 1);\n\t\t}\n\t\tF.temporary.other[req.host] = { port: port, hostname: hostname };\n\t}\n\n\tvar search = req.url.indexOf('?', 1);\n\tvar query = null;\n\tvar pathname;\n\n\tif (search === -1) {\n\t\tsearch = null;\n\t\tpathname = req.url;\n\t} else {\n\t\tpathname = req.url.substring(0, search);\n\t\tsearch = req.url.substring(search);\n\t\tquery = search.substring(1);\n\t}\n\n\tvar index = pathname.indexOf('//');\n\tif (index !== -1) {\n\t\tpathname = cleanURL(pathname, index);\n\t\treq.url = pathname;\n\t\tif (search)\n\t\t\treq.url += search;\n\t}\n\n\treturn { auth: null, hash: null, host: req.host, hostname: hostname, href: protocol + '://' + req.host + req.url, path: req.url, pathname: pathname, port: port, protocol: protocol + ':', query: query, search: search, slashes: true };\n};\n\n/**\n * Destroy the stream\n * @param {Stream} stream\n * @return {Stream}\n * @author Jonathan Ong <me@jongleberry.com>\n * @license MIT\n * @see {@link https://github.com/stream-utils/destroy}\n */\nfunction destroyStream(stream) {\n\tif (stream instanceof ReadStream) {\n\t\tstream.destroy();\n\t\tif (typeof(stream.close) !== 'function')\n\t\t\treturn stream;\n\t\tstream.on('open', function() {\n\t\t\ttypeof(this.fd) === 'number' && this.close();\n\t\t});\n\t\treturn stream;\n\t}\n\tstream instanceof Stream && typeof(stream.destroy) === 'function' && stream.destroy();\n\treturn stream;\n}\n\n/*\n * ee-first (first, listener)\n * Copyright(c) 2014 Jonathan Ong <me@jongleberry.com>\n * MIT Licensed\n * https://github.com/jonathanong/ee-first\n */\nfunction first(stuff, done) {\n\tvar cleanups = [];\n\tfor (var i = 0, il = stuff.length; i < il; i++) {\n\t\tvar arr = stuff[i];\n\t\tvar ee = arr[0];\n\t\tfor (var j = 1, jl = arr.length; j < jl; j++) {\n\t\t\tvar event = arr[j];\n\t\t\tvar fn = listener(event, callback);\n\t\t\tee.on(event, fn);\n\t\t\tcleanups.push({ ee: ee, event: event, fn: fn });\n\t\t}\n\t}\n\n\tfunction callback() {\n\t\tcleanup();\n\t\tdone.apply(null, arguments);\n\t}\n\n\tfunction cleanup() {\n\t\tvar x;\n\t\tfor (var i = 0, length = cleanups.length; i < length; i++) {\n\t\t\tx = cleanups[i];\n\t\t\tx.ee.removeListener(x.event, x.fn);\n\t\t}\n\t}\n\n\tfunction thunk(fn) {\n\t\tdone = fn;\n\t}\n\n\tthunk.cancel = cleanup;\n\treturn thunk;\n}\n\nfunction listener(event, done) {\n\treturn function(arg1) {\n\t\tvar args = new Array(arguments.length);\n\t\tvar ee = this;\n\t\tvar err = event === 'error' ? arg1 : null;\n\n\t\t// copy args to prevent arguments escaping scope\n\t\tfor (var i = 0; i < args.length; i++)\n\t\t\targs[i] = arguments[i];\n\n\t\tdone(err, ee, event, args);\n\t}\n}\n\n/*\n * on-finished (onFinished, attachFinishedListener, attachListener, createListener, patchAssignSocket, isFinished)\n * Copyright(c) 2013 Jonathan Ong <me@jongleberry.com>\n * Copyright(c) 2014 Douglas Christopher Wilson <doug@somethingdoug.com>\n * MIT Licensed\n * https://github.com/jshttp/on-finished\n */\nfunction onFinished(msg, listener) {\n\tif (isFinished(msg) !== false)\n\t\tsetImmediate(listener, null, msg);\n\telse\n\t\tattachListener(msg, listener);\n\treturn msg;\n}\n\nfunction attachFinishedListener(msg, callback) {\n\tvar eeMsg;\n\tvar eeSocket;\n\tvar finished = false;\n\n\tfunction onFinish(error) {\n\t\teeMsg.cancel();\n\t\teeSocket.cancel();\n\t\tfinished = true;\n\t\tcallback(error);\n\t}\n\n\t// finished on first message event\n\teeMsg = eeSocket = first([[msg, 'end', 'finish']], onFinish);\n\n\tfunction onSocket(socket) {\n\t\t// remove listener\n\t\tmsg.removeListener('socket', onSocket)\n\n\t\tif (finished || eeMsg !== eeSocket)\n\t\t\treturn;\n\n\t\t// finished on first socket event\n\t\teeSocket = first([[socket, 'error', 'close']], onFinish);\n\t}\n\n\t// socket already assigned\n\tif (msg.socket) {\n\t\tonSocket(msg.socket);\n\t\treturn;\n\t}\n\n\t// wait for socket to be assigned\n\tmsg.on('socket', onSocket)\n\n\t// node.js 0.8 patch\n\t!msg.socket && patchAssignSocket(msg, onSocket);\n}\n\nfunction attachListener(msg, listener) {\n\tvar attached = msg.__onFinished;\n\n\t// create a private single listener with queue\n\tif (!attached || !attached.queue) {\n\t\tattached = msg.__onFinished = createListener(msg);\n\t\tattachFinishedListener(msg, attached);\n\t}\n\n\tattached.queue.push(listener);\n}\n\nfunction createListener(msg) {\n\tfunction listener(err) {\n\t\tif (msg.__onFinished === listener)\n\t\t\tmsg.__onFinished = null;\n\t\tif (!listener.queue)\n\t\t\treturn;\n\t\tvar queue = listener.queue;\n\t\tlistener.queue = null\n\t\tfor (var i = 0, length = queue.length; i < length; i++)\n\t\t\tqueue[i](err, msg);\n\t}\n\tlistener.queue = [];\n\treturn listener;\n}\n\nfunction patchAssignSocket(res, callback) {\n\tvar assignSocket = res.assignSocket;\n\tif (typeof(assignSocket) !== 'function')\n\t\treturn;\n\t// res.on('socket', callback) is broken in 0.8\n\tres.assignSocket = function(socket) {\n\t\tassignSocket.call(this, socket);\n\t\tcallback(socket);\n\t};\n}\n\nfunction isFinished(msg) {\n\tvar socket = msg.socket;\n\n\t// OutgoingMessage\n\tif (typeof msg.finished === 'boolean')\n\t\treturn Boolean(msg.finished || (socket && !socket.writable));\n\n\t// IncomingMessage\n\tif (typeof msg.complete === 'boolean')\n\t\treturn Boolean(msg.upgrade || !socket || !socket.readable || (msg.complete && !msg.readable))\n}\n\nexports.encodeUnicodeURL = function(url) {\n\tvar output = url;\n\tfor (var i = 0, length = url.length; i < length; i++) {\n\t\tvar code = url.charCodeAt(i);\n\t\tif (code > 127)\n\t\t\toutput = output.replace(url[i], encodeURIComponent(url[i]));\n\t}\n\treturn output;\n};\n\nexports.parseBlock = function(name, content) {\n\n\t// @{block name}\n\t//\n\t// @{end}\n\n\tif (content.search(REG_BLOCK_BEG) === -1)\n\t\treturn content;\n\n\tvar newline = '\\n';\n\tvar lines = content.split(newline);\n\tvar is = false;\n\tvar skip = false;\n\tvar builder = '';\n\n\tname = (name || '').replace(/\\s/g, '').split(',');\n\n\tfor (var i = 0, length = lines.length; i < length; i++) {\n\n\t\tvar line = lines[i];\n\n\t\tif (!line)\n\t\t\tcontinue;\n\n\t\tif (line.search(REG_BLOCK_END) !== -1) {\n\t\t\tis = false;\n\t\t\tskip = false;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (is) {\n\t\t\tif (skip)\n\t\t\t\tcontinue;\n\t\t\tbuilder += line + newline;\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar index = line.search(REG_BLOCK_BEG);\n\t\tif (!index)\n\t\t\tcontinue;\n\n\t\tif (index === -1) {\n\t\t\tbuilder += line + newline;\n\t\t\tcontinue;\n\t\t}\n\n\t\tis = true;\n\t\tskip = true;\n\n\t\tvar block = line.substring(index + 8, line.indexOf('}', index)).replace(/\\|\\|/g, ',').replace(/\\s/g, '').split(',');\n\t\tfor (var j = 0, jl = block.length; j < jl; j++) {\n\t\t\tif (name.indexOf(block[j]) === -1)\n\t\t\t\tcontinue;\n\t\t\tskip = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn builder.trim();\n};\n\nfunction existsSync(filename) {\n\ttry {\n\t\treturn Fs.statSync(filename) ? true : false;\n\t} catch (e) {\n\t\treturn false;\n\t}\n}\n\nexports.restart = function() {\n\tINDEXMIXED = 0;\n\tINDEXFILE = 0;\n};\n\nexports.viewEngineCompile = viewengine_dynamic;\nexports.viewEngine = viewengine_load;\nexports.parseLocalization = view_parse_localization;\nexports.findLocalization = view_find_localization;\nexports.destroyStream = destroyStream;\nexports.onFinished = onFinished;\nexports.modificators = modificators;\n","/home/travis/build/npmtest/node-npmtest-total.js/node_modules/total.js/builders.js":"// Copyright 2012-2017 (c) Peter Širka <petersirka@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/**\n * @module FrameworkBuilders\n * @version 2.4.0\n */\n\n'use strict';\n\nconst REQUIRED = 'The field \"@\" is invalid.';\nconst DEFAULT_SCHEMA = 'default';\nconst SKIP = { $$schema: true, $$result: true, $$callback: true, $$async: true, $$index: true, $$repository: true, $$can: true, $$controller: true };\nconst REGEXP_CLEAN_EMAIL = /\\s/g;\nconst REGEXP_CLEAN_PHONE = /\\s|\\.|\\-|\\(|\\)/g;\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst Qs = require('querystring');\n\nvar schemas = {};\nvar operations = {};\nvar transforms = { pagination: {}, error: {}, transformbuilder: {}, restbuilder: {} };\n\nfunction SchemaBuilder(name) {\n\tthis.name = name;\n\tthis.collection = {};\n}\n\n/**\n *\n * Get a schema\n * @param {String} name\n * @return {Object}\n */\nSchemaBuilder.prototype.get = function(name) {\n\treturn this.collection[name];\n};\n\n/**\n * Create a new schema\n * @alias\n * @return {SchemaBuilderEntity}\n */\nSchemaBuilder.prototype.create = function(name) {\n\tthis.collection[name] = new SchemaBuilderEntity(this, name);\n\treturn this.collection[name];\n};\n\n/**\n * Removes an existing schema or group of schemas\n * @param {String} name Schema name, optional.\n * @return {SchemaBuilder}\n */\nSchemaBuilder.prototype.remove = function(name) {\n\tif (name) {\n\t\tvar schema = this.collection[name];\n\t\tschema && schema.destroy();\n\t\tschema = null;\n\t\tdelete this.collection[name];\n\t} else {\n\t\tdelete schemas[this.name];\n\t\tthis.collection = null;\n\t}\n};\n\nSchemaBuilder.prototype.destroy = function(name) {\n\treturn this.remove(name);\n};\n\nfunction SchemaBuilderEntity(parent, name) {\n\tthis.parent = parent;\n\tthis.name = name;\n\tthis.primary;\n\tthis.trim = true;\n\tthis.schema = {};\n\tthis.meta = {};\n\tthis.properties = [];\n\tthis.resourcePrefix;\n\tthis.resourceName;\n\tthis.transforms;\n\tthis.workflows;\n\tthis.hooks;\n\tthis.operations;\n\tthis.constants;\n\tthis.onPrepare;\n\tthis.onDefault;\n\tthis.onValidate = F.onValidate;\n\tthis.onSave;\n\tthis.onGet;\n\tthis.onRemove;\n\tthis.onQuery;\n\tthis.onError;\n\tthis.gcache = {};\n\tthis.dependencies;\n\tthis.fields;\n\tthis.fields_allow;\n\tthis.CurrentSchemaInstance = function(){};\n\tthis.CurrentSchemaInstance.prototype = new SchemaInstance();\n\tthis.CurrentSchemaInstance.prototype.$$schema = this;\n}\n\nSchemaBuilderEntity.prototype.allow = function(name) {\n\tvar self = this;\n\n\tif (!self.fields_allow)\n\t\tself.fields_allow = [];\n\n\tfor (var i = 0, length = arguments.length; i < length; i++) {\n\t\tif (arguments[i] instanceof Array)\n\t\t\targuments[i].forEach(item => self.fields_allow.push(item));\n\t\telse\n\t\t\tself.fields_allow.push(arguments[i]);\n\t}\n\treturn self;\n};\n\n/**\n * Define type in schema\n * @param {String|String[]} name\n * @param {Object/String} type\n * @param {Boolean} [required=false] Is required? Default: false.\n * @param {Number|String} [custom] Custom tag for search.\n * @return {SchemaBuilder}\n */\nSchemaBuilderEntity.prototype.define = function(name, type, required, custom) {\n\n\tif (name instanceof Array) {\n\t\tfor (var i = 0, length = name.length; i < length; i++)\n\t\t\tthis.define(name[i], type, required, custom);\n\t\treturn this;\n\t}\n\n\tif (required !== undefined && typeof(required) !== 'boolean') {\n\t\tcustom = required;\n\t\trequired = false;\n\t}\n\n\tif (type instanceof SchemaBuilderEntity)\n\t\ttype = type.name;\n\n\tthis.schema[name] = this.$parse(name, type, required, custom);\n\tswitch (this.schema[name].type) {\n\t\tcase 7:\n\t\t\tif (!this.dependencies)\n\t\t\t\tthis.dependencies = [];\n\t\t\tthis.dependencies.push(name);\n\t\t\tbreak;\n\t}\n\n\tthis.fields = Object.keys(this.schema);\n\n\tif (!required)\n\t\treturn this;\n\n\tif (this.properties == null)\n\t\tthis.properties = [];\n\n\tthis.properties.indexOf(name) === -1 && this.properties.push(name);\n\treturn this;\n};\n\n/**\n * Set primary key\n * @param {String} name\n */\nSchemaBuilderEntity.prototype.setPrimary = function(name) {\n\tthis.primary = name;\n\treturn this;\n};\n\n/**\n * Filters current names of the schema via custom attribute\n * @param {Number/String} custom\n * @param {Object} model Optional\n * @param {Boolean} reverse Reverse results.\n * @return {Array|Object} Returns Array (with property names) if the model is undefined otherwise returns Object Name/Value.\n */\nSchemaBuilderEntity.prototype.filter = function(custom, model, reverse) {\n\n\tif (typeof(model) === 'boolean') {\n\t\tvar tmp = reverse;\n\t\treverse = model;\n\t\tmodel = tmp;\n\t}\n\n\tvar output = model === undefined ? [] : {};\n\tvar type = typeof(custom);\n\tvar isSearch = type === 'string' ? custom[0] === '*' || custom[0] === '%' : false;\n\tvar isReg = false;\n\n\tif (isSearch)\n\t\tcustom = custom.substring(1);\n\telse if (type === 'object')\n\t\tisReg = framework_utils.isRegExp(custom);\n\n\tfor (var prop in this.schema) {\n\n\t\tvar schema = this.schema[prop];\n\t\tif (!schema)\n\t\t\tcontinue;\n\n\t\tvar tv = typeof(schema.custom);\n\n\t\tif (isSearch) {\n\t\t\tif (tv === 'string') {\n\t\t\t\tif (schema.custom.indexOf(custom) === -1) {\n\t\t\t\t\tif (!reverse)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t} else if (reverse)\n\t\t\t\t\tcontinue;\n\t\t\t} else\n\t\t\t\tcontinue;\n\t\t} else if (isReg) {\n\t\t\tif (tv === 'string') {\n\t\t\t\tif (!custom.test(schema.current)) {\n\t\t\t\t\tif (!reverse)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t} else if (reverse)\n\t\t\t\t\tcontinue;\n\t\t\t} else\n\t\t\t\tcontinue;\n\t\t} else if (schema.custom !== custom) {\n\t\t\tif (!reverse)\n\t\t\t\tcontinue;\n\t\t} else if (reverse)\n\t\t\tcontinue;\n\n\t\tif (model === undefined)\n\t\t\toutput.push(prop);\n\t\telse\n\t\t\toutput[prop] = model[prop];\n\t}\n\n\treturn output;\n};\n\nfunction parseLength(lower, result) {\n\tresult.raw = 'string';\n\tvar beg = lower.indexOf('(');\n\tif (beg === -1)\n\t\treturn result;\n\tresult.length = lower.substring(beg + 1, lower.length - 1).parseInt();\n\tresult.raw = lower.substring(0, beg);\n\treturn result;\n}\n\nSchemaBuilderEntity.prototype.$parse = function(name, value, required, custom) {\n\n\tvar type = typeof(value);\n\tvar result = {};\n\n\tresult.raw = value;\n\tresult.type = 0;\n\tresult.length = 0;\n\tresult.required = required ? true : false;\n\tresult.isArray = false;\n\tresult.custom = custom || '';\n\n\t// 0 = undefined\n\t// 1 = integer\n\t// 2 = float\n\t// 3 = string\n\t// 4 = boolean\n\t// 5 = date\n\t// 6 = object\n\t// 7 = custom object\n\n\tif (value === null)\n\t\treturn result;\n\n\tif (value === '[]') {\n\t\tresult.isArray = true;\n\t\treturn result;\n\t}\n\n\tif (type === 'function') {\n\n\t\tif (value === Number) {\n\t\t\tresult.type = 2;\n\t\t\treturn result;\n\t\t}\n\n\t\tif (value === String) {\n\t\t\tresult.type = 3;\n\t\t\treturn result;\n\t\t}\n\n\t\tif (value === Boolean) {\n\t\t\tresult.type = 4;\n\t\t\treturn result;\n\t\t}\n\n\t\tif (value === Date) {\n\t\t\tresult.type = 5;\n\t\t\treturn result;\n\t\t}\n\n\t\tif (value === Array) {\n\t\t\tresult.isArray = true;\n\t\t\treturn result;\n\t\t}\n\n\t\tif (value === Object) {\n\t\t\tresult.type = 6;\n\t\t\treturn result;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tif (type === 'object') {\n\t\tif (value instanceof Array) {\n\t\t\tresult.type = 8; // enum\n\t\t\tresult.subtype = typeof(value[0]);\n\t\t} else\n\t\t\tresult.type = 9; // keyvalue\n\t\treturn result;\n\t}\n\n\tif (value[0] === '[') {\n\t\tvalue = value.substring(1, value.length - 1);\n\t\tresult.isArray = true;\n\t\tresult.raw = value;\n\t}\n\n\tvar lower = value.toLowerCase();\n\n\tif (lower === 'object') {\n\t\tresult.type = 6;\n\t\treturn result;\n\t}\n\n\tif (lower === 'array') {\n\t\tresult.isArray = true;\n\t\treturn result;\n\t}\n\n\tif (lower.contains(['string', 'text', 'varchar', 'nvarchar'])) {\n\t\tresult.type = 3;\n\t\treturn parseLength(lower, result);\n\t}\n\n\tif (lower.indexOf('capitalize') !== -1 || lower.indexOf('camel') !== -1) {\n\t\tresult.type = 3;\n\t\tresult.subtype = 'capitalize';\n\t\treturn parseLength(lower, result);\n\t}\n\n\tif (lower.indexOf('lower') !== -1) {\n\t\tresult.subtype = 'lowercase';\n\t\tresult.type = 3;\n\t\treturn parseLength(lower, result);\n\t}\n\n\tif (lower.indexOf('upper') !== -1) {\n\t\tresult.subtype = 'uppercase';\n\t\tresult.type = 3;\n\t\treturn parseLength(lower, result);\n\t}\n\n\tif (lower === 'uid') {\n\t\tresult.type = 3;\n\t\tresult.length = 20;\n\t\tresult.raw = 'string';\n\t\tresult.subtype = 'uid';\n\t\treturn result;\n\t}\n\n\tif (lower === 'email') {\n\t\tresult.type = 3;\n\t\tresult.length = 120;\n\t\tresult.raw = 'string';\n\t\tresult.subtype = 'email';\n\t\treturn result;\n\t}\n\n\tif (lower === 'json') {\n\t\tresult.type = 3;\n\t\tresult.raw = 'string';\n\t\tresult.subtype = 'json';\n\t\treturn result;\n\t}\n\n\tif (lower === 'url') {\n\t\tresult.type = 3;\n\t\tresult.length = 500;\n\t\tresult.raw = 'string';\n\t\tresult.subtype = 'url';\n\t\treturn result;\n\t}\n\n\tif (lower === 'zip') {\n\t\tresult.type = 3;\n\t\tresult.length = 10;\n\t\tresult.raw = 'string';\n\t\tresult.subtype = 'zip';\n\t\treturn result;\n\t}\n\n\tif (lower === 'phone') {\n\t\tresult.type = 3;\n\t\tresult.length = 20;\n\t\tresult.raw = 'string';\n\t\tresult.subtype = 'phone';\n\t\treturn result;\n\t}\n\n\tif (lower.contains(['int', 'byte'])) {\n\t\tresult.type = 1;\n\t\treturn result;\n\t}\n\n\tif (lower.contains(['decimal', 'number', 'float', 'double'])) {\n\t\tresult.type = 2;\n\t\treturn result;\n\t}\n\n\tif (lower.indexOf('bool') !== -1) {\n\t\tresult.type = 4;\n\t\treturn result;\n\t}\n\n\tif (lower.contains(['date', 'time'])) {\n\t\tresult.type = 5;\n\t\treturn result;\n\t}\n\n\tresult.type = 7;\n\treturn result;\n};\n\nSchemaBuilderEntity.prototype.getDependencies = function() {\n\tvar dependencies = [];\n\n\tfor (var name in this.schema) {\n\n\t\tvar type = this.schema[name];\n\t\tif (typeof(type) !== 'string')\n\t\t\tcontinue;\n\n\t\tvar isArray = type[0] === ']';\n\t\tif (isArray)\n\t\t\ttype = type.substring(1, type.length - 1);\n\n\t\tvar m = this.parent.get(type);\n\t\tm && dependencies.push({ name: name, isArray: isArray, schema: m });\n\t}\n\n\treturn dependencies;\n};\n\n/**\n * Set schema validation\n * @param {String|Array} properties Properties to validate, optional.\n * @param {Function(propertyName, value, path, entityName, model)} fn A validation function.\n * @return {SchemaBuilderEntity}\n */\nSchemaBuilderEntity.prototype.setValidate = function(properties, fn) {\n\n\tif (fn === undefined && properties instanceof Array) {\n\t\tthis.properties = properties;\n\t\treturn this;\n\t}\n\n\tif (typeof(properties) !== 'function') {\n\t\tthis.properties = properties;\n\t\tthis.onValidate = fn;\n\t} else\n\t\tthis.onValidate = properties;\n\n\treturn this;\n};\n\nSchemaBuilderEntity.prototype.setPrefix = function(prefix) {\n\tthis.resourcePrefix = prefix;\n\treturn this;\n};\n\nSchemaBuilderEntity.prototype.setResource = function(name) {\n\tthis.resourceName = name;\n\treturn this;\n};\n\n/**\n * Set the default values for schema\n * @param {Function(propertyName, isntPreparing, entityName)} fn\n * @return {SchemaBuilderEntity}\n */\nSchemaBuilderEntity.prototype.setDefault = function(fn) {\n\tthis.onDefault = fn;\n\treturn this;\n};\n\n/**\n * Set the prepare\n * @param {Function(name, value)} fn Must return a new value.\n * @return {SchemaBuilderEntity}\n */\nSchemaBuilderEntity.prototype.setPrepare = function(fn) {\n\tthis.onPrepare = fn;\n\treturn this;\n};\n\n/**\n * Set save handler\n * @param {Function(error, model, helper, next(value), controller)} fn\n * @return {SchemaBuilderEntity}\n */\nSchemaBuilderEntity.prototype.setSave = function(fn, description) {\n\tthis.onSave = fn;\n\tthis.meta.save = description;\n\treturn this;\n};\n\n\n/**\n * Set error handler\n * @param {Function(error)} fn\n * @return {SchemaBuilderEntity}\n */\nSchemaBuilderEntity.prototype.setError = function(fn) {\n\tthis.onError = fn;\n\treturn this;\n};\n\n/**\n * Set getter handler\n * @param {Function(error, model, helper, next(value), controller)} fn\n * @return {SchemaBuilderEntity}\n */\nSchemaBuilderEntity.prototype.setGet = SchemaBuilderEntity.prototype.setRead = function(fn, description) {\n\tthis.onGet = fn;\n\tthis.meta.get = description;\n\treturn this;\n};\n\n/**\n * Set query handler\n * @param {Function(error, helper, next(value), controller)} fn\n * @param {String} description Optional.\n * @return {SchemaBuilderEntity}\n */\nSchemaBuilderEntity.prototype.setQuery = function(fn, description) {\n\tthis.onQuery = fn;\n\tthis.meta.query = description;\n\treturn this;\n};\n\n/**\n * Set remove handler\n * @param {Function(error, helper, next(value), controller)} fn\n * @param {String} description Optional.\n * @return {SchemaBuilderEntity}\n */\nSchemaBuilderEntity.prototype.setRemove = function(fn, description) {\n\tthis.onRemove = fn;\n\tthis.meta.remove = description;\n\treturn this;\n};\n\n/**\n * Add a new constant for the schema\n * @param {String} name Constant name, optional.\n * @param {Object} value\n * @param {String} description Optional.\n * @return {SchemaBuilderEntity}\n */\nSchemaBuilderEntity.prototype.constant = function(name, value, description) {\n\n\tif (value === undefined)\n\t\treturn this.constants ? this.constants[name] : undefined;\n\n\tif (!this.constants)\n\t\tthis.constants = {};\n\n\tthis.constants[name] = value;\n\tthis.meta['constant#' + name] = description;\n\treturn this;\n};\n\n/**\n * Add a new transformation for the entity\n * @param {String} name Transform name, optional.\n * @param {Function(errorBuilder, model, helper, next([output]), controller)} fn\n * @param {String} description Optional.\n * @return {SchemaBuilderEntity}\n */\nSchemaBuilderEntity.prototype.addTransform = function(name, fn, description) {\n\n\tif (typeof(name) === 'function') {\n\t\tfn = name;\n\t\tname = 'default';\n\t}\n\n\tif (!this.transforms)\n\t\tthis.transforms = {};\n\n\tthis.transforms[name] = fn;\n\tthis.meta['transform#' + name] = description;\n\treturn this;\n};\n\n/**\n * Add a new operation for the entity\n * @param {String} name Operation name, optional.\n * @param {Function(errorBuilder, [model], helper, next([output]), controller)} fn\n * @param {String} description Optional.\n * @return {SchemaBuilderEntity}\n */\nSchemaBuilderEntity.prototype.addOperation = function(name, fn, description) {\n\n\tif (typeof(name) === 'function') {\n\t\tfn = name;\n\t\tname = 'default';\n\t}\n\n\tif (!this.operations)\n\t\tthis.operations = {};\n\n\tthis.operations[name] = fn;\n\tthis.meta['operation#' + name] = description;\n\treturn this;\n};\n\n/**\n * Add a new workflow for the entity\n * @param {String} name Workflow name, optional.\n * @param {Function(errorBuilder, model, helper, next([output]), controller)} fn\n * @param {String} description Optional.\n * @return {SchemaBuilderEntity}\n */\nSchemaBuilderEntity.prototype.addWorkflow = function(name, fn, description) {\n\n\tif (typeof(name) === 'function') {\n\t\tfn = name;\n\t\tname = 'default';\n\t}\n\n\tif (!this.workflows)\n\t\tthis.workflows = {};\n\n\tthis.workflows[name] = fn;\n\tthis.meta['workflow#' + name] = description;\n\treturn this;\n};\n\nSchemaBuilderEntity.prototype.addHook = function(name, fn, description) {\n\n\tif (!this.hooks)\n\t\tthis.hooks = {};\n\n\tif (!this.hooks[name])\n\t\tthis.hooks[name] = [];\n\n\tthis.hooks[name].push({ owner: F.$owner(), fn: fn });\n\tthis.meta['hook#' + name] = description;\n\treturn this;\n};\n\n/**\n * Find an entity in current group\n * @param {String} name\n * @return {SchemaBuilderEntity}\n */\nSchemaBuilderEntity.prototype.find = function(name) {\n\treturn this.parent.get(name);\n};\n\n/**\n * Destroys current entity\n */\nSchemaBuilderEntity.prototype.destroy = function() {\n\tdelete this.parent.collection[this.name];\n\tthis.properties = undefined;\n\tthis.schema = undefined;\n\tthis.onDefault = undefined;\n\tthis.onValidate = undefined;\n\tthis.onSave = undefined;\n\tthis.onRead = undefined;\n\tthis.onGet = undefined;\n\tthis.onRemove = undefined;\n\tthis.onQuery = undefined;\n\tthis.workflows = undefined;\n\tthis.operations = undefined;\n\tthis.transforms = undefined;\n\tthis.meta = undefined;\n\tthis.properties = undefined;\n\tthis.hooks = undefined;\n\tthis.constants = undefined;\n\tthis.onPrepare = undefined;\n\tthis.onError = undefined;\n\tthis.gcache = undefined;\n\tthis.dependencies = undefined;\n\tthis.fields = undefined;\n\tthis.fields_allow = undefined;\n};\n\n/**\n * Execute onSave delegate\n * @param {Object} model\n * @param {Object} helper A helper object, optional.\n * @param {Function(err, result)} callback\n * @param {Controller} controller\n * @param {Boolean} skip Skips preparing and validation, optional.\n * @return {SchemaBuilderEntity}\n */\nSchemaBuilderEntity.prototype.save = function(model, helper, callback, controller, skip) {\n\n\tif (typeof(callback) === 'boolean') {\n\t\tskip = callback;\n\t\tcallback = helper;\n\t\thelper = undefined;\n\t} else if (typeof(helper) === 'function') {\n\t\tcallback = helper;\n\t\thelper = undefined;\n\t}\n\n\tif (typeof(controller) === 'boolean') {\n\t\tvar tmp = skip;\n\t\tskip = controller;\n\t\tcontroller = tmp;\n\t}\n\n\tif (typeof(callback) !== 'function')\n\t\tcallback = function(){};\n\n\tvar self = this;\n\tvar $type = 'save';\n\n\tself.$prepare(model, function(err, model) {\n\n\t\tif (err) {\n\t\t\tcallback(err, model);\n\t\t\treturn;\n\t\t}\n\n\t\tvar builder = new ErrorBuilder();\n\t\tself.resourceName && builder.setResource(self.resourceName);\n\t\tself.resourcePrefix && builder.setPrefix(self.resourcePrefix);\n\t\tif (!isGenerator(self, $type, self.onSave)) {\n\t\t\tself.onSave(builder, model, helper, function(result) {\n\t\t\t\tself.$process(arguments, model, $type, undefined, builder, result, callback);\n\t\t\t}, controller, skip !== true);\n\t\t\treturn self;\n\t\t}\n\n\t\tcallback.success = false;\n\t\tasync.call(self, self.onSave)(function(err) {\n\t\t\tif (!err || callback.success)\n\t\t\t\treturn;\n\t\t\tcallback.success = true;\n\t\t\tbuilder.push(err);\n\t\t\tself.onError && self.onError(builder, model, $type);\n\t\t\tcallback(builder);\n\t\t}, builder, model, helper, function(result) {\n\n\t\t\tif (callback.success)\n\t\t\t\treturn;\n\n\t\t\tif (arguments.length === 2 || (result instanceof Error || result instanceof ErrorBuilder)) {\n\t\t\t\tif ((result instanceof Error || result instanceof ErrorBuilder) && builder !== result)\n\t\t\t\t\tbuilder.push(result);\n\t\t\t\tresult = arguments[1];\n\t\t\t}\n\n\t\t\tvar has = builder.hasError();\n\t\t\thas && self.onError && self.onError(builder, model, $type);\n\t\t\tcallback.success = true;\n\t\t\tcallback(has ? builder : null, result === undefined ? model : result);\n\t\t}, controller, skip !== true);\n\n\t});\n\n\treturn self;\n};\n\nfunction isGenerator(obj, name, fn) {\n\tif (obj.gcache[name])\n\t\treturn obj.gcache[name];\n\treturn obj.gcache[name] = fn.toString().substring(0, 9) === 'function*';\n}\n\n/**\n * Execute onGet delegate\n * @param {Object} helper A helper object, optional.\n * @param {Function(err, result)} callback\n * @return {SchemaBuilderEntity}\n */\nSchemaBuilderEntity.prototype.get = SchemaBuilderEntity.prototype.read = function(helper, callback, controller) {\n\n\tif (typeof(helper) === 'function') {\n\t\tcallback = helper;\n\t\thelper = undefined;\n\t}\n\n\tif (typeof(callback) !== 'function')\n\t\tcallback = function(){};\n\n\tvar self = this;\n\tvar builder = new ErrorBuilder();\n\n\tself.resourceName && builder.setResource(self.resourceName);\n\tself.resourcePrefix && builder.setPrefix(self.resourcePrefix);\n\n\tvar output = self.default();\n\tvar $type = 'get';\n\n\tif (!isGenerator(self, $type, self.onGet)) {\n\t\tself.onGet(builder, output, helper, function(result) {\n\t\t\tself.$process(arguments, output, $type, undefined, builder, result, callback);\n\t\t}, controller);\n\t\treturn self;\n\t}\n\n\tcallback.success = false;\n\tasync.call(self, self.onGet)(function(err) {\n\t\tif (!err || callback.success)\n\t\t\treturn;\n\t\tcallback.success = true;\n\t\tbuilder.push(err);\n\t\tself.onError && self.onError(builder, model, $type);\n\t\tcallback(builder);\n\t}, builder, output, helper, function(result) {\n\n\t\tif (callback.success)\n\t\t\treturn;\n\n\t\tif (arguments.length === 2 || (result instanceof Error || result instanceof ErrorBuilder)) {\n\t\t\tif ((result instanceof Error || result instanceof ErrorBuilder) && builder !== result)\n\t\t\t\tbuilder.push(result);\n\t\t\tresult = arguments[1];\n\t\t}\n\n\t\tcallback.success = true;\n\t\tvar has = builder.hasError();\n\t\thas && self.onError && self.onError(builder, model, $type);\n\t\tcallback(has ? builder : null, result === undefined ? output : result);\n\t}, controller);\n\n\treturn self;\n};\n\n/**\n * Execute onRemove delegate\n * @param {Object} helper A helper object, optional.\n * @param {Function(err, result)} callback\n * @return {SchemaBuilderEntity}\n */\nSchemaBuilderEntity.prototype.remove = function(helper, callback, controller) {\n\n\tif (typeof(helper) === 'function') {\n\t\tcallback = helper;\n\t\thelper = undefined;\n\t}\n\n\tvar self = this;\n\tvar builder = new ErrorBuilder();\n\tvar $type = 'remove';\n\n\tself.resourceName && builder.setResource(self.resourceName);\n\tself.resourcePrefix && builder.setPrefix(self.resourcePrefix);\n\n\tif (!isGenerator(self, $type, self.onRemove)) {\n\t\tself.onRemove(builder, helper, function(result) {\n\t\t\tself.$process(arguments, undefined, $type, undefined, builder, result, callback);\n\t\t}, controller);\n\t\treturn self;\n\t}\n\n\tcallback.success = false;\n\tasync.call(self, self.onRemove)(function(err) {\n\t\tif (!err || callback.success)\n\t\t\treturn;\n\t\tcallback.success = true;\n\t\tbuilder.push(err);\n\t\tself.onError && self.onError(builder, model, $type);\n\t\tcallback(builder);\n\t}, builder, helper, function(result) {\n\n\t\tif (callback.success)\n\t\t\treturn;\n\n\t\tif (arguments.length === 2 || (result instanceof Error || result instanceof ErrorBuilder)) {\n\t\t\tif ((result instanceof Error || result instanceof ErrorBuilder) && builder !== result)\n\t\t\t\tbuilder.push(result);\n\t\t\tresult = arguments[1];\n\t\t}\n\n\t\tvar has = builder.hasError();\n\t\thas && self.onError && self.onError(builder, model, $type);\n\t\tcallback.success = true;\n\t\tcallback(has ? builder : null, result === undefined ? helper : result);\n\t}, controller);\n\n\treturn self;\n};\n\n/**\n * Execute onQuery delegate\n * @param {Object} helper A helper object, optional.\n * @param {Function(err, result)} callback\n * @return {SchemaBuilderEntity}\n */\nSchemaBuilderEntity.prototype.query = function(helper, callback, controller) {\n\n\tif (typeof(helper) === 'function') {\n\t\tcallback = helper;\n\t\thelper = undefined;\n\t}\n\n\tvar self = this;\n\tvar builder = new ErrorBuilder();\n\tvar $type = 'query';\n\n\tself.resourceName && builder.setResource(self.resourceName);\n\tself.resourcePrefix && builder.setPrefix(self.resourcePrefix);\n\n\tif (!isGenerator(self, $type, self.onQuery)) {\n\t\tself.onQuery(builder, helper, function(result) {\n\t\t\tself.$process(arguments, undefined, $type, undefined, builder, result, callback);\n\t\t}, controller);\n\t\treturn self;\n\t}\n\n\tcallback.success = false;\n\n\tasync.call(self, self.onQuery)(function(err) {\n\t\tif (!err || callback.success)\n\t\t\treturn;\n\t\tcallback.success = true;\n\t\tbuilder.push(err);\n\t\tself.onError && self.onError(builder, model, $type);\n\t\tcallback(builder);\n\t}, builder, helper, function(result) {\n\n\t\tif (callback.success)\n\t\t\treturn;\n\n\t\tif (arguments.length === 2 || (result instanceof Error || result instanceof ErrorBuilder)) {\n\t\t\tif ((result instanceof Error || result instanceof ErrorBuilder) && builder !== result)\n\t\t\t\tbuilder.push(result);\n\t\t\tresult = arguments[1];\n\t\t}\n\n\t\tvar has = builder.hasError();\n\t\thas && self.onError && self.onError(builder, model, $type);\n\t\tcallback.success = true;\n\t\tcallback(builder.hasError() ? builder : null, result);\n\t}, controller);\n\n\treturn self;\n};\n\n/**\n * Validate a schema\n * @param {Object} model Object to validate.\n * @param {String} resourcePrefix Prefix for resource key.\n * @param {String} resourceName Resource filename.\n * @param {ErrorBuilder} builder ErrorBuilder, INTERNAL.\n * @return {ErrorBuilder}\n */\nSchemaBuilderEntity.prototype.validate = function(model, resourcePrefix, resourceName, builder, filter, path, index) {\n\n\tvar self = this;\n\n\tif (builder === undefined) {\n\t\tbuilder = new ErrorBuilder();\n\t\tself.resourceName && builder.setResource(self.resourceName);\n\t\tself.resourcePrefix && builder.setPrefix(self.resourcePrefix);\n\t}\n\n\tif (self.resourcePrefix)\n\t\tbuilder.resourcePrefix = self.resourcePrefix;\n\n\tif (self.resourceName)\n\t\tbuilder.resourceName = self.resourceName;\n\n\tif (resourceName)\n\t\tbuilder.resourceName = resourceName;\n\n\tif (resourcePrefix)\n\t\tbuilder.resourcePrefix = resourcePrefix;\n\n\tif (filter)\n\t\tfilter = self.filter(filter);\n\n\tif (path)\n\t\tpath += '.';\n\telse\n\t\tpath = '';\n\n\tframework_utils.validate_builder.call(self, model, builder, self.name, self.parent.collection, self.name, index, filter, path);\n\n\tif (!self.dependencies)\n\t\treturn builder;\n\n\tfor (var i = 0, length = self.dependencies.length; i < length; i++) {\n\t\tvar key = self.dependencies[i];\n\t\tvar schema = self.schema[key];\n\t\tvar s = self.parent.collection[schema.raw];\n\n\t\tif (!s) {\n\t\t\tF.error(new Error('Schema \"' + schema.raw + '\" not found (validation).'));\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!schema.isArray) {\n\t\t\t(model[key] != null || schema.required) && s.validate(model[key], resourcePrefix, resourceName, builder, filter, path + key, j);\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar arr = model[key];\n\t\tfor (var j = 0, jl = arr.length; j < jl; j++)\n\t\t\t(model[key][j] != null || schema.required) && s.validate(model[key][j], resourcePrefix, resourceName, builder, filter, path + key + '[' + j + ']', j);\n\t}\n\n\treturn builder;\n};\n\n/**\n * Create a default object according the schema\n * @alias SchemaBuilderEntity.default()\n * @return {Object}\n */\nSchemaBuilderEntity.prototype.create = function() {\n\treturn this.default();\n};\n\nSchemaBuilderEntity.prototype.Create = function() {\n\treturn this.default();\n};\n\n/**\n * Makes extensible object\n * @param {Object} obj\n * @return {Object}\n */\nSchemaBuilderEntity.prototype.$make = function(obj) {\n\treturn obj; // TODO remove\n};\n\nSchemaBuilderEntity.prototype.$prepare = function(obj, callback) {\n\tif (obj && typeof(obj.$save) === 'function')\n\t\tcallback(null, obj);\n\telse\n\t\tthis.make(obj, (err, model) => callback(err, model));\n\treturn this;\n};\n\n/**\n * Create a default object according the schema\n * @return {SchemaInstance}\n */\nSchemaBuilderEntity.prototype.default = function() {\n\n\tvar obj = this.schema;\n\tif (obj === null)\n\t\treturn null;\n\n\tvar defaults = this.onDefault;\n\tvar item = new this.CurrentSchemaInstance();\n\n\tfor (var property in obj) {\n\n\t\tvar type = obj[property];\n\n\t\tif (defaults) {\n\t\t\tvar def = defaults(property, true, this.name);\n\t\t\tif (def !== undefined) {\n\t\t\t\titem[property] = def;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tswitch (type.type) {\n\t\t\t// undefined\n\t\t\t// object\n\t\t\tcase 0:\n\t\t\tcase 6:\n\t\t\t\titem[property] = type.isArray ? [] : null;\n\t\t\t\tbreak;\n\t\t\t// numbers: integer, float\n\t\t\tcase 1:\n\t\t\tcase 2:\n\t\t\t\titem[property] = type.isArray ? [] : 0;\n\t\t\t\tbreak;\n\t\t\t// string\n\t\t\tcase 3:\n\t\t\t\titem[property] = type.isArray ? [] : '';\n\t\t\t\tbreak;\n\t\t\t// boolean\n\t\t\tcase 4:\n\t\t\t\titem[property] = type.isArray ? [] : false;\n\t\t\t\tbreak;\n\t\t\t// date\n\t\t\tcase 5:\n\t\t\t\titem[property] = type.isArray ? [] : F.datetime;\n\t\t\t\tbreak;\n\t\t\t// schema\n\t\t\tcase 7:\n\n\t\t\t\tif (type.isArray) {\n\t\t\t\t\titem[property] = [];\n\t\t\t\t} else {\n\t\t\t\t\tvar tmp = this.find(type.raw);\n\t\t\t\t\tif (!tmp) {\n\t\t\t\t\t\tF.error(new Error('Schema: \"' + property + '.' + type.raw + '\" not found in \"' + this.parent.name + '\".'));\n\t\t\t\t\t\titem[property] = null;\n\t\t\t\t\t} else\n\t\t\t\t\t\titem[property] = tmp.default();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t// enum + keyvalue\n\t\t\tcase 8:\n\t\t\tcase 9:\n\t\t\t\titem[property] = undefined;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn item;\n};\n\n/**\n * Create schema instance\n * @param {function|object} model\n * @param [filter]\n * @param [callback]\n * @returns {SchemaInstance}\n */\nSchemaBuilderEntity.prototype.make = function(model, filter, callback) {\n\n\tif (typeof(model) === 'function') {\n\t\tmodel.call(this, this);\n\t\treturn this;\n\t}\n\n\tif (typeof(filter) === 'function') {\n\t\tvar tmp = callback;\n\t\tcallback = filter;\n\t\tfilter = tmp;\n\t}\n\n\tvar output = this.prepare(model);\n\tvar builder = this.validate(output, undefined, undefined, undefined, filter);\n\tif (builder.hasError()) {\n\t\tthis.onError && this.onError(builder, model, 'make');\n\t\tcallback && callback(builder, null);\n\t\treturn output;\n\t}\n\n\tcallback && callback(null, output);\n\treturn output;\n};\n\nSchemaBuilderEntity.prototype.load = SchemaBuilderEntity.prototype.make; // Because JSDoc is not works with double asserting\n\nfunction autotrim(context, value) {\n\treturn context.trim ? value.trim() : value;\n}\n\nSchemaBuilderEntity.prototype.$onprepare = function(name, value, index, model) {\n\tif (this.onPrepare) {\n\t\tvar val = this.onPrepare(name, value, index, model);\n\t\treturn val === undefined ? value : val;\n\t}\n\treturn value;\n};\n\n/**\n * Prepare model according to schema\n * @param {Object} model\n * @param {String|Array} [dependencies] INTERNAL.\n * @return {SchemaInstance}\n */\nSchemaBuilderEntity.prototype.prepare = function(model, dependencies) {\n\n\tvar self = this;\n\tvar obj = self.schema;\n\n\tif (obj === null)\n\t\treturn null;\n\n\tif (model == null)\n\t\treturn self.default();\n\n\tvar tmp;\n\tvar entity;\n\tvar item = new self.CurrentSchemaInstance();\n\tvar defaults = self.onDefault;\n\n\tfor (var property in obj) {\n\n\t\tvar val = model[property];\n\n\t\t// IS PROTOTYPE? The problem was in e.g. \"search\" property, because search is in String prototypes.\n\t\tif (!hasOwnProperty.call(model, property))\n\t\t\tval = undefined;\n\n\t\tif (val === undefined && defaults)\n\t\t\tval = defaults(property, false, self.name);\n\n\t\tif (val === undefined)\n\t\t\tval = '';\n\n\t\tvar type = obj[property];\n\t\tvar typeval = typeof(val);\n\n\t\tif (typeval === 'function')\n\t\t\tval = val();\n\n\t\tif (!type.isArray) {\n\t\t\tswitch (type.type) {\n\t\t\t\t// undefined\n\t\t\t\tcase 0:\n\t\t\t\t\tbreak;\n\t\t\t\t// number: integer\n\t\t\t\tcase 1:\n\t\t\t\t\titem[property] = self.$onprepare(property, framework_utils.parseInt(val), undefined, model);\n\t\t\t\t\tbreak;\n\t\t\t\t// number: float\n\t\t\t\tcase 2:\n\t\t\t\t\titem[property] = self.$onprepare(property, framework_utils.parseFloat(val), undefined, model);\n\t\t\t\t\tbreak;\n\n\t\t\t\t// string\n\t\t\t\tcase 3:\n\t\t\t\t\ttmp = val == null ? '' : autotrim(self, val.toString());\n\t\t\t\t\tif (type.length && type.length < tmp.length)\n\t\t\t\t\t\ttmp = tmp.substring(0, type.length);\n\n\t\t\t\t\tswitch (type.subtype) {\n\t\t\t\t\t\tcase 'uid':\n\t\t\t\t\t\t\tif (tmp && !type.required && !tmp.isUID())\n\t\t\t\t\t\t\t\ttmp = '';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'email':\n\t\t\t\t\t\t\ttmp = tmp.toLowerCase().replace(REGEXP_CLEAN_EMAIL, '');\n\t\t\t\t\t\t\tif (tmp && !type.required && !tmp.isEmail())\n\t\t\t\t\t\t\t\ttmp = '';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'url':\n\t\t\t\t\t\t\tif (tmp && !type.required && !tmp.isURL())\n\t\t\t\t\t\t\t\ttmp = '';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'zip':\n\t\t\t\t\t\t\tif (tmp && !type.required && !tmp.isZIP())\n\t\t\t\t\t\t\t\ttmp = '';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'phone':\n\t\t\t\t\t\t\ttmp = tmp.replace(REGEXP_CLEAN_PHONE, '');\n\t\t\t\t\t\t\tif (tmp && !type.required && !tmp.isPhone())\n\t\t\t\t\t\t\t\ttmp = '';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'capitalize':\n\t\t\t\t\t\t\ttmp = tmp.capitalize();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'lowercase':\n\t\t\t\t\t\t\ttmp = tmp.toLowerCase();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'uppercase':\n\t\t\t\t\t\t\ttmp = tmp.toUpperCase();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'json':\n\t\t\t\t\t\t\tif (tmp && !type.required && !tmp.isJSON())\n\t\t\t\t\t\t\t\ttmp = '';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\titem[property] = self.$onprepare(property, tmp, undefined, model);\n\t\t\t\t\tbreak;\n\n\t\t\t\t// boolean\n\t\t\t\tcase 4:\n\t\t\t\t\ttmp = val ? val.toString().toLowerCase() : null;\n\t\t\t\t\titem[property] = self.$onprepare(property, tmp === 'true' || tmp === '1' || tmp === 'on', undefined, model);\n\t\t\t\t\tbreak;\n\n\t\t\t\t// date\n\t\t\t\tcase 5:\n\n\t\t\t\t\ttmp = null;\n\n\t\t\t\t\tif (typeval === 'string') {\n\t\t\t\t\t\tif (val)\n\t\t\t\t\t\t\ttmp = val.trim().parseDate();\n\t\t\t\t\t} else if (typeval === 'number')\n\t\t\t\t\t\ttmp = new Date(val);\n\t\t\t\t\telse\n\t\t\t\t\t\ttmp = val;\n\n\t\t\t\t\tif (framework_utils.isDate(tmp))\n\t\t\t\t\t\ttmp = self.$onprepare(property, tmp, undefined, model)\n\t\t\t\t\telse\n\t\t\t\t\t\ttmp = (defaults ? isUndefined(defaults(property, false, self.name), null) : null);\n\n\t\t\t\t\titem[property] = tmp;\n\t\t\t\t\tbreak;\n\n\t\t\t\t// object\n\t\t\t\tcase 6:\n\t\t\t\t\titem[property] = self.$onprepare(property, model[property], undefined, model);\n\t\t\t\t\tbreak;\n\n\t\t\t\t// enum\n\t\t\t\tcase 8:\n\t\t\t\t\ttmp = self.$onprepare(property, model[property], undefined, model);\n\t\t\t\t\tif (type.subtype === 'number' && typeof(tmp) === 'string')\n\t\t\t\t\t\ttmp = tmp.parseFloat(null);\n\t\t\t\t\titem[property] = tmp != null && type.raw.indexOf(tmp) !== -1 ? tmp : undefined;\n\t\t\t\t\tbreak;\n\n\t\t\t\t// keyvalue\n\t\t\t\tcase 9:\n\t\t\t\t\ttmp = self.$onprepare(property, model[property], undefined, model);\n\t\t\t\t\titem[property] = tmp != null ? type.raw[tmp] : undefined;\n\t\t\t\t\tbreak;\n\n\t\t\t\t// schema\n\t\t\t\tcase 7:\n\n\t\t\t\t\tif (!val) {\n\t\t\t\t\t\tval = (defaults ? isUndefined(defaults(property, false, self.name), null) : null);\n\t\t\t\t\t\t// val = defaults(property, false, self.name);\n\t\t\t\t\t\tif (val === null) {\n\t\t\t\t\t\t\titem[property] = null;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (val && typeof(val.$schema) === 'function') {\n\t\t\t\t\t\ttmp = val.$schema();\n\t\t\t\t\t\tif (tmp && tmp.name && tmp.name === type.raw) {\n\t\t\t\t\t\t\titem[property] = val;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tentity = self.parent.get(type.raw);\n\t\t\t\t\tif (entity) {\n\t\t\t\t\t\titem[property] = entity.prepare(val, undefined);\n\t\t\t\t\t\tdependencies && dependencies.push({ name: type.raw, value: self.$onprepare(property, item[property], undefined, model) });\n\t\t\t\t\t} else\n\t\t\t\t\t\titem[property] = null;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// ARRAY:\n\t\tif (!(val instanceof Array)) {\n\t\t\titem[property] = (defaults ? isUndefined(defaults(property, false, self.name), []) : []);\n\t\t\tcontinue;\n\t\t}\n\n\t\titem[property] = [];\n\t\tfor (var j = 0, sublength = val.length; j < sublength; j++) {\n\n\t\t\t// tmp = model[property][j];\n\t\t\ttmp = val[j];\n\t\t\ttypeval = typeof(tmp);\n\n\t\t\tswitch (type.type) {\n\t\t\t\tcase 0:\n\t\t\t\t\ttmp = self.$onprepare(property, tmp, j, model);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\ttmp = self.$onprepare(property, framework_utils.parseInt(tmp), j, model);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\ttmp = self.$onprepare(property, framework_utils.parseFloat(tmp), j, model);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\ttmp = tmp == null ? '' : autotrim(self, tmp.toString());\n\t\t\t\t\tif (type.length && tmp.length < tmp.length)\n\t\t\t\t\t\ttmp = tmp.substring(0, type.length);\n\n\t\t\t\t\tswitch (type.subtype) {\n\t\t\t\t\t\tcase 'uid':\n\t\t\t\t\t\t\tif (tmp && !type.required && !tmp.isUID())\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'url':\n\t\t\t\t\t\t\tif (tmp && !type.required && !tmp.isURL())\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'email':\n\t\t\t\t\t\t\ttmp = tmp.toLowerCase().replace(REGEXP_CLEAN_EMAIL, '');\n\t\t\t\t\t\t\tif (tmp && !type.required && !tmp.isEmail())\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'phone':\n\t\t\t\t\t\t\ttmp = tmp.replace(REGEXP_CLEAN_PHONE, '');\n\t\t\t\t\t\t\tif (tmp && !type.required && !tmp.isPhone())\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'capitalize':\n\t\t\t\t\t\t\ttmp = tmp.capitalize();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'lowercase':\n\t\t\t\t\t\t\ttmp = tmp.toLowerCase();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'uppercase':\n\t\t\t\t\t\t\ttmp = tmp.toUpperCase();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'json':\n\t\t\t\t\t\t\tif (tmp && !type.required && !tmp.isJSON())\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\ttmp = self.$onprepare(property, tmp, j, model);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 4:\n\t\t\t\t\tif (tmp)\n\t\t\t\t\t\ttmp = tmp.toString().toLowerCase();\n\t\t\t\t\ttmp = self.$onprepare(property, tmp === 'true' || tmp === '1' || tmp === 'on', j, model);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 5:\n\n\t\t\t\t\tif (typeval === 'string') {\n\t\t\t\t\t\tif (tmp)\n\t\t\t\t\t\t\ttmp = tmp.trim().parseDate();\n\t\t\t\t\t} else if (typeval === 'number')\n\t\t\t\t\t\ttmp = new Date(tmp);\n\n\t\t\t\t\tif (framework_utils.isDate(tmp))\n\t\t\t\t\t\ttmp = self.$onprepare(property, tmp, j, model);\n\t\t\t\t\telse\n\t\t\t\t\t\ttmp = undefined;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 6:\n\t\t\t\t\ttmp = self.$onprepare(property, tmp, j, model);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 7:\n\t\t\t\t\tentity = self.parent.get(type.raw);\n\t\t\t\t\tif (entity) {\n\t\t\t\t\t\ttmp = entity.prepare(tmp, dependencies);\n\t\t\t\t\t\tif (dependencies)\n\t\t\t\t\t\t\tdependencies.push({ name: type.raw, value: self.$onprepare(property, tmp, j, model) });\n\t\t\t\t\t} else\n\t\t\t\t\t\ttmp = null;\n\n\t\t\t\t\ttmp = self.$onprepare(property, tmp, j, model);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (tmp === undefined)\n\t\t\t\tcontinue;\n\n\t\t\titem[property].push(tmp);\n\t\t}\n\t}\n\n\tif (self.fields_allow) {\n\t\tfor (var i = 0, length = self.fields_allow.length; i < length; i++) {\n\t\t\tvar name = self.fields_allow[i];\n\t\t\tvar val = model[name];\n\t\t\tif (val !== undefined)\n\t\t\t\titem[name] = val;\n\t\t}\n\t}\n\n\treturn item;\n};\n\n/**\n * Transform an object\n * @param {String} name\n * @param {Object} model\n * @param {Object} helper A helper object, optional.\n * @param {Function(errorBuilder, output, model)} callback\n * @param {Boolean} skip Skips preparing and validation, optional.\n * @return {SchemaBuilderEntity}\n */\nSchemaBuilderEntity.prototype.transform = function(name, model, helper, callback, skip, controller) {\n\n\tvar self = this;\n\n\tif (typeof(name) !== 'string') {\n\t\tcallback = helper;\n\t\thelper = model;\n\t\tmodel = name;\n\t\tname = 'default';\n\t}\n\n\tif (typeof(callback) === 'boolean') {\n\t\tskip = callback;\n\t\tcallback = helper;\n\t\thelper = undefined;\n\t} else if (typeof(helper) === 'function') {\n\t\tcallback = helper;\n\t\thelper = undefined;\n\t}\n\n\tif (typeof(callback) !== 'function')\n\t\tcallback = function(){};\n\n\tvar trans = self.transforms ? self.transforms[name] : undefined;\n\n\tif (!trans) {\n\t\tcallback(new ErrorBuilder().push('', 'Transform \"{0}\" not found.'.format(name)));\n\t\treturn self;\n\t}\n\n\tvar $type = 'transform';\n\n\tif (skip === true) {\n\t\tvar builder = new ErrorBuilder();\n\t\tself.resourceName && builder.setResource(self.resourceName);\n\t\tself.resourcePrefix && builder.setPrefix(self.resourcePrefix);\n\t\ttrans.call(self, builder, model, helper, function(result) {\n\t\t\tself.$process(arguments, model, $type, name, builder, result, callback);\n\t\t}, controller, skip !== true);\n\t\treturn self;\n\t}\n\n\tself.$prepare(model, function(err, model) {\n\n\t\tif (err) {\n\t\t\tcallback(err, model);\n\t\t\treturn;\n\t\t}\n\n\t\tvar builder = new ErrorBuilder();\n\n\t\tself.resourceName && builder.setResource(self.resourceName);\n\t\tself.resourcePrefix && builder.setPrefix(self.resourcePrefix);\n\n\t\tif (!isGenerator(self, 'transform.' + name, trans)) {\n\t\t\ttrans.call(self, builder, model, helper, function(result) {\n\t\t\t\tself.$process(arguments, model, $type, name, builder, result, callback);\n\t\t\t}, controller);\n\t\t\treturn;\n\t\t}\n\n\t\tcallback.success = false;\n\t\tasync.call(self, trans)(function(err) {\n\t\t\tif (!err || callback.success)\n\t\t\t\treturn;\n\t\t\tcallback.success = true;\n\t\t\tbuilder.push(err);\n\t\t\tself.onError && self.onError(builder, model, $type, name);\n\t\t\tcallback(builder);\n\t\t}, builder, model, helper, function(result) {\n\n\t\t\tif (callback.success)\n\t\t\t\treturn;\n\n\t\t\tif (arguments.length === 2 || (result instanceof Error || result instanceof ErrorBuilder)) {\n\t\t\t\tif ((result instanceof Error || result instanceof ErrorBuilder) && builder !== result)\n\t\t\t\t\tbuilder.push(result);\n\t\t\t\tresult = arguments[1];\n\t\t\t}\n\n\t\t\tvar has = builder.hasError();\n\t\t\thas && self.onError && self.onError(builder, model, $type, name);\n\t\t\tcallback.success = true;\n\t\t\tcallback(has ? builder : null, result === undefined ? model : result);\n\t\t}, controller, skip !== true);\n\n\t});\n\n\treturn self;\n};\n\nSchemaBuilderEntity.prototype.transform2 = function(name, helper, callback, controller) {\n\n\tif (typeof(helper) === 'function') {\n\t\tcallback = helper;\n\t\thelper = undefined;\n\t}\n\n\tif (!callback)\n\t\tcallback = function(){};\n\n\treturn this.transform(name, this.create(), helper, callback, true, controller);\n};\n\nSchemaBuilderEntity.prototype.$process = function(arg, model, type, name, builder, result, callback) {\n\n\tvar self = this;\n\n\tif (arg.length > 1 || (result instanceof Error || result instanceof ErrorBuilder)) {\n\t\tif ((result instanceof Error || result instanceof ErrorBuilder || typeof(result) === 'string') && builder !== result)\n\t\t\tbuilder.push(result);\n\t\tresult = arg[1];\n\t}\n\n\tvar has = builder.hasError();\n\thas && self.onError && self.onError(builder, model, type, name);\n\tcallback(has ? builder : null, result === undefined ? model : result, model);\n\treturn self;\n};\n\nSchemaBuilderEntity.prototype.$process_hook = function(model, type, name, builder, result, callback) {\n\tvar self = this;\n\tvar has = builder.hasError();\n\thas && self.onError && self.onError(builder, model, type, name);\n\tcallback(has ? builder : null, model);\n\treturn self;\n};\n\n/**\n * Run a workflow\n * @param {String} name\n * @param {Object} model\n * @param {Object} helper A helper object, optional.\n * @param {Function(errorBuilder, output, model)} callback\n * @param {Boolean} skip Skips preparing and validation, optional.\n * @return {SchemaBuilderEntity}\n */\nSchemaBuilderEntity.prototype.workflow = function(name, model, helper, callback, skip, controller) {\n\n\tvar self = this;\n\n\tif (typeof(name) !== 'string') {\n\t\tcallback = helper;\n\t\thelper = model;\n\t\tmodel = name;\n\t\tname = 'default';\n\t}\n\n\tif (typeof(callback) === 'boolean') {\n\t\tskip = callback;\n\t\tcallback = helper;\n\t\thelper = undefined;\n\t} else if (typeof(helper) === 'function') {\n\t\tcallback = helper;\n\t\thelper = undefined;\n\t}\n\n\tif (typeof(callback) !== 'function')\n\t\tcallback = function(){};\n\n\tvar workflow = self.workflows ? self.workflows[name] : undefined;\n\tif (!workflow) {\n\t\tcallback(new ErrorBuilder().push('', 'Workflow \"{0}\" not found.'.format(name)));\n\t\treturn self;\n\t}\n\n\tvar $type = 'workflow';\n\n\tif (skip === true) {\n\t\tvar builder = new ErrorBuilder();\n\t\tself.resourceName && builder.setResource(self.resourceName);\n\t\tself.resourcePrefix && builder.setPrefix(self.resourcePrefix);\n\t\tworkflow.call(self, builder, model, helper, function(result) {\n\t\t\tself.$process(arguments, model, $type, name, builder, result, callback);\n\t\t}, controller, skip !== true);\n\t\treturn self;\n\t}\n\n\tself.$prepare(model, function(err, model) {\n\n\t\tif (err) {\n\t\t\tcallback(err, model);\n\t\t\treturn;\n\t\t}\n\n\t\tvar builder = new ErrorBuilder();\n\n\t\tself.resourceName && builder.setResource(self.resourceName);\n\t\tself.resourcePrefix && builder.setPrefix(self.resourcePrefix);\n\n\t\tif (!isGenerator(self, 'workflow.' + name, workflow)) {\n\t\t\tworkflow.call(self, builder, model, helper, function(result) {\n\t\t\t\tself.$process(arguments, model, $type, name, builder, result, callback);\n\t\t\t}, controller, skip !== true);\n\t\t\treturn;\n\t\t}\n\n\t\tcallback.success = false;\n\t\tasync.call(self, workflow)(function(err) {\n\t\t\tif (!err || callback.success)\n\t\t\t\treturn;\n\t\t\tcallback.success = true;\n\t\t\tbuilder.push(err);\n\t\t\tself.onError && self.onError(builder, model, $type, name);\n\t\t\tcallback(builder);\n\t\t}, builder, model, helper, function(result) {\n\n\t\t\tif (callback.success)\n\t\t\t\treturn;\n\n\t\t\tif (arguments.length === 2 || (result instanceof Error || result instanceof ErrorBuilder)) {\n\t\t\t\tif ((result instanceof Error || result instanceof ErrorBuilder) && builder !== result)\n\t\t\t\t\tbuilder.push(result);\n\t\t\t\tresult = arguments[1];\n\t\t\t}\n\n\t\t\tvar has = builder.hasError();\n\t\t\thas && self.onError && self.onError(builder, model, $type, name);\n\t\t\tcallback.success = true;\n\t\t\tcallback(has ? builder : null, result === undefined ? model : result);\n\t\t}, controller, skip !== true);\n\t});\n\n\treturn self;\n};\n\nSchemaBuilderEntity.prototype.workflow2 = function(name, helper, callback, controller) {\n\n\tif (typeof(helper) === 'function') {\n\t\tcallback = helper;\n\t\thelper = undefined;\n\t}\n\n\tif (!callback)\n\t\tcallback = function(){};\n\n\treturn this.workflow(name, this.create(), helper, callback, true, controller);\n};\n\n/**\n * Run hooks\n * @param {String} name\n * @param {Object} model\n * @param {Object} helper A helper object, optional.\n * @param {Function(errorBuilder, output, model)} callback\n * @param {Boolean} skip Skips preparing and validation, optional.\n * @return {SchemaBuilderEntity}\n */\nSchemaBuilderEntity.prototype.hook = function(name, model, helper, callback, skip, controller) {\n\n\tvar self = this;\n\n\tif (typeof(name) !== 'string') {\n\t\tcallback = helper;\n\t\thelper = model;\n\t\tmodel = name;\n\t\tname = 'default';\n\t}\n\n\tif (typeof(callback) === 'boolean') {\n\t\tskip = callback;\n\t\tcallback = helper;\n\t\thelper = undefined;\n\t} else if (typeof(helper) === 'function') {\n\t\tcallback = helper;\n\t\thelper = undefined;\n\t}\n\n\tif (typeof(callback) !== 'function')\n\t\tcallback = function(){};\n\n\tvar hook = self.hooks ? self.hooks[name] : undefined;\n\n\tif (!hook || !hook.length) {\n\t\tcallback(null, model);\n\t\treturn self;\n\t}\n\n\tvar $type = 'hook';\n\n\tif (skip === true) {\n\t\tvar builder = new ErrorBuilder();\n\n\t\tself.resourceName && builder.setResource(self.resourceName);\n\t\tself.resourcePrefix && builder.setPrefix(self.resourcePrefix);\n\n\t\tvar output = [];\n\n\t\tasync_wait(hook, function(item, next) {\n\t\t\titem.fn.call(self, builder, model, helper, function(result) {\n\t\t\t\toutput.push(result == undefined ? model : result);\n\t\t\t\tnext();\n\t\t\t}, controller, skip !== true);\n\t\t}, function() {\n\t\t\tself.$process_hook(model, $type, name, builder, output, callback);\n\t\t}, 0);\n\n\t\treturn self;\n\t}\n\n\tself.$prepare(model, function(err, model) {\n\n\t\tif (err) {\n\t\t\tcallback(err, model);\n\t\t\treturn;\n\t\t}\n\n\t\tvar builder = new ErrorBuilder();\n\t\tvar output = [];\n\n\t\tself.resourceName && builder.setResource(self.resourceName);\n\t\tself.resourcePrefix && builder.setPrefix(self.resourcePrefix);\n\n\t\tasync_wait(hook, function(item, next, index) {\n\n\t\t\tif (!isGenerator(self, 'hook.' + name + '.' + index, item.fn)) {\n\t\t\t\titem.fn.call(self, builder, model, helper, function(result) {\n\t\t\t\t\toutput.push(result == undefined ? model : result);\n\t\t\t\t\tnext();\n\t\t\t\t}, controller, skip !== true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcallback.success = false;\n\n\t\t\tasync.call(self, item.fn)(function(err) {\n\t\t\t\tif (!err)\n\t\t\t\t\treturn;\n\t\t\t\tbuilder.push(err);\n\t\t\t\tnext();\n\t\t\t}, builder, model, helper, function(result) {\n\t\t\t\toutput.push(result == undefined ? model : result);\n\t\t\t\tnext();\n\t\t\t}, controller, skip !== true);\n\n\t\t}, function() {\n\t\t\tself.$process_hook(model, $type, name, builder, output, callback);\n\t\t}, 0);\n\t});\n\n\treturn self;\n};\n\nSchemaBuilderEntity.prototype.hook2 = function(name, helper, callback, controller) {\n\n\tif (typeof(helper) === 'function') {\n\t\tcallback = helper;\n\t\thelper = undefined;\n\t}\n\n\tif (!callback)\n\t\tcallback = function(){};\n\n\treturn this.hook(name, this.create(), helper, callback, true, controller);\n};\n\n/**\n * Run an operation\n * @param {String} name\n * @param {Object} model A model object, optional, priority: 2.\n * @param {Object} helper A helper object, optional, priority: 1.\n * @param {Function(errorBuilder, output)} callback\n * @param {Boolean} skip Skips preparing and validation, optional.\n * @return {SchemaBuilderEntity}\n */\nSchemaBuilderEntity.prototype.operation = function(name, model, helper, callback, skip, controller) {\n\n\tvar self = this;\n\n\tvar th = typeof(helper);\n\tvar tc = typeof(callback);\n\n\tif (tc === 'undefined') {\n\t\tif (th === 'function') {\n\t\t\tcallback = helper;\n\t\t\thelper = model;\n\t\t\tmodel = undefined;\n\t\t} else if (th === 'undefined') {\n\t\t\thelper = model;\n\t\t\tmodel = undefined;\n\t\t}\n\t} else if (th === 'undefined') {\n\t\thelper = model;\n\t\tmodel = undefined;\n\t} else if (tc === 'boolean') {\n\t\tskip = callback;\n\t\tcallback = helper;\n\t\thelper = undefined;\n\t}\n\n\tif (typeof(helper) === 'function') {\n\t\tcallback = helper;\n\t\thelper = undefined;\n\t}\n\n\tif (typeof(callback) !== 'function')\n\t\tcallback = function(){};\n\n\tvar operation = self.operations ? self.operations[name] : undefined;\n\n\tif (!operation) {\n\t\tcallback(new ErrorBuilder().push('', 'Operation \"{0}\" not found.'.format(name)));\n\t\treturn self;\n\t}\n\n\tvar builder = new ErrorBuilder();\n\tvar $type = 'operation';\n\n\tself.resourceName && builder.setResource(self.resourceName);\n\tself.resourcePrefix && builder.setPrefix(self.resourcePrefix);\n\n\tif (!isGenerator(self, 'operation.' + name, operation)) {\n\t\toperation.call(self, builder, model, helper, function(result) {\n\t\t\tself.$process(arguments, model, $type, name, builder, result, callback);\n\t\t}, controller, skip !== true);\n\t\treturn self;\n\t}\n\n\tcallback.success = false;\n\tasync.call(self, operation)(function(err) {\n\t\tif (!err || callback.success)\n\t\t\treturn;\n\t\tcallback.success = true;\n\t\tbuilder.push(err);\n\t\tself.onError && self.onError(builder, model, $type, name);\n\t\tcallback(builder);\n\t}, builder, model, helper, function(result) {\n\n\t\tif (callback.success)\n\t\t\treturn;\n\n\t\tif (arguments.length === 2 || (result instanceof Error || result instanceof ErrorBuilder)) {\n\t\t\tif ((result instanceof Error || result instanceof ErrorBuilder) && builder !== result)\n\t\t\t\tbuilder.push(result);\n\t\t\tresult = arguments[1];\n\t\t}\n\n\t\tvar has = builder.hasError();\n\t\thas && self.onError && self.onError(builder, model, $type, name);\n\t\tcallback.success = true;\n\t\tcallback(has ? builder : null, result);\n\t}, controller, skip !== true);\n\n\treturn self;\n};\n\nSchemaBuilderEntity.prototype.operation2 = function(name, helper, callback, controller) {\n\n\tif (typeof(helper) === 'function') {\n\t\tcallback = helper;\n\t\thelper = undefined;\n\t}\n\n\tif (!callback)\n\t\tcallback = function(){};\n\n\treturn this.operation(name, this.create(), helper, callback, true, controller);\n};\n\n/**\n * Clean model (remove state of all schemas in model).\n * @param {Object} m Model.\n * @param {Boolean} isCopied Internal argument.\n * @return {Object}\n */\nSchemaBuilderEntity.prototype.clean = function(m) {\n\treturn clone(m);\n};\n\n// For async operations, because SUCCESS() returns singleton instance everytime\nfunction copy(obj) {\n\treturn F.isSuccess(obj) ? { success: obj.success, value: obj.value } : obj;\n}\n\nfunction clone(obj) {\n\n\tif (!obj)\n\t\treturn obj;\n\n\tvar type = typeof(obj);\n\tif (type !== 'object' || obj instanceof Date)\n\t\treturn obj;\n\n\tvar length;\n\tvar o;\n\n\tif (obj instanceof Array) {\n\n\t\tlength = obj.length;\n\t\to = new Array(length);\n\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\ttype = typeof(obj[i]);\n\t\t\tif (type !== 'object' || obj[i] instanceof Date) {\n\t\t\t\tif (type !== 'function')\n\t\t\t\t\to[i] = obj[i];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\to[i] = clone(obj[i]);\n\t\t}\n\n\t\treturn o;\n\t}\n\n\to = {};\n\n\tfor (var m in obj) {\n\n\t\tif (SKIP[m])\n\t\t\tcontinue;\n\n\t\tvar val = obj[m];\n\n\t\tif (val instanceof SchemaInstance) {\n\t\t\to[m] = clone(val);\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar type = typeof(val);\n\t\tif (type !== 'object' || val instanceof Date) {\n\t\t\tif (type !== 'function')\n\t\t\t\to[m] = val;\n\t\t\tcontinue;\n\t\t}\n\n\t\to[m] = clone(obj[m]);\n\t}\n\n\treturn o;\n}\n\n/**\n * Returns prototype of instances\n * @returns {Object}\n */\nSchemaBuilderEntity.prototype.instancePrototype = function() {\n\treturn this.CurrentSchemaInstance.prototype;\n};\n\n/**\n * SchemaInstance\n * @constructor\n */\nfunction SchemaInstance() {\n}\n\n/**\n * @type {SchemaBuilderEntity}\n */\nSchemaInstance.prototype.$$schema = null;\n\nSchemaInstance.prototype.$async = function(callback, index) {\n\tvar self = this;\n\n\tif (!callback)\n\t\tcallback = function(){};\n\n\tself.$$async = [];\n\tself.$$result = [];\n\tself.$$index = index;\n\tself.$$callback = callback;\n\tself.$$can = true;\n\n\tsetImmediate(function() {\n\t\tself.$$can = false;\n\t\tasync_queue(self.$$async, function() {\n\t\t\tself.$$callback(null, self.$$index !== undefined ? self.$$result[self.$$index] : self.$$result);\n\t\t\tself.$$callback = null;\n\t\t});\n\t});\n\n\treturn self;\n};\n\nSchemaInstance.prototype.$repository = function(name, value) {\n\n\tif (this.$$repository === undefined) {\n\t\tif (value === undefined)\n\t\t\treturn undefined;\n\t\tthis.$$repository = {};\n\t}\n\n\tif (value !== undefined) {\n\t\tthis.$$repository[name] = value;\n\t\treturn value;\n\t}\n\n\treturn this.$$repository[name];\n};\n\nSchemaInstance.prototype.$index = function(index) {\n\tif (typeof(index) === 'string')\n\t\tthis.$$index = (this.$$index || 0).add(index);\n\tthis.$$index = index;\n\treturn this;\n};\n\nSchemaInstance.prototype.$callback = function(callback) {\n\tthis.$$callback = callback;\n\treturn this;\n};\n\nSchemaInstance.prototype.$output = function() {\n\tthis.$$index = this.$$result.length;\n\treturn this;\n};\n\nSchemaInstance.prototype.$push = function(type, name, helper, first) {\n\n\tvar self = this;\n\tvar fn;\n\n\tif (type === 'save' || type === 'remove') {\n\n\t\thelper = name;\n\t\tname = undefined;\n\n\t\tfn = function(next) {\n\t\t\tself.$$schema[type](self, helper, function(err, result) {\n\t\t\t\tself.$$result && self.$$result.push(err ? null : copy(result));\n\t\t\t\tif (!err)\n\t\t\t\t\treturn next();\n\t\t\t\tnext = null;\n\t\t\t\tself.$$async = null;\n\t\t\t\tself.$$callback(err, self.$$result);\n\t\t\t\tself.$$callback = null;\n\t\t\t}, self.$$controller);\n\t\t};\n\n\t} else if (type === 'query' || type === 'get' || type === 'read') {\n\n\t\thelper = name;\n\t\tname = undefined;\n\n\t\tfn = function(next) {\n\t\t\tself.$$schema[type](helper, function(err, result) {\n\t\t\t\tself.$$result && self.$$result.push(err ? null : copy(result));\n\t\t\t\tif (!err)\n\t\t\t\t\treturn next();\n\t\t\t\tnext = null;\n\t\t\t\tself.$$async = null;\n\t\t\t\tself.$$callback(err, self.$$result);\n\t\t\t\tself.$$callback = null;\n\t\t\t}, self.$$controller);\n\t\t};\n\n\t} else {\n\n\t\tfn = function(next) {\n\t\t\tself.$$schema[type](name, self, helper, function(err, result) {\n\t\t\t\tself.$$result && self.$$result.push(err ? null : copy(result));\n\t\t\t\tif (!err)\n\t\t\t\t\treturn next();\n\t\t\t\tnext = null;\n\t\t\t\tself.$$async = null;\n\t\t\t\tself.$$callback(err, self.$$result);\n\t\t\t\tself.$$callback = null;\n\t\t\t}, self.$$controller);\n\t\t};\n\n\t}\n\n\tif (first)\n\t\tself.$$async.unshift(fn);\n\telse\n\t\tself.$$async.push(fn);\n\n\treturn self;\n};\n\nSchemaInstance.prototype.$next = function(type, name, helper) {\n\treturn this.$push(type, name, helper, true);\n};\n\nSchemaInstance.prototype.$exec = function(name, helper, callback) {\n\n\tif (typeof(helper) === 'function') {\n\t\tcallback = helper;\n\t\thelper = undefined;\n\t}\n\n\tvar group = this.$$schema.parent.name;\n\tvar key = group !== 'default' ? group + '/' + this.$$schema.name : this.$$schema.name;\n\tvar workflow = F.workflows[key + '#' + name] || F.workflows[name];\n\n\tif (workflow)\n\t\tworkflow(this, helper || EMPTYOBJECT, callback || NOOP);\n\telse\n\t\tcallback && callback(new ErrorBuilder().push('Workflow \"' + name + '\" not found in workflows.'));\n\n\treturn this;\n};\n\nSchemaInstance.prototype.$save = function(helper, callback) {\n\tif (this.$$can && this.$$async)\n\t\tthis.$push('save', helper);\n\telse\n\t\tthis.$$schema.save(this, helper, callback, this.$$controller);\n\treturn this;\n};\n\nSchemaInstance.prototype.$query = function(helper, callback) {\n\n\tif (this.$$can && this.$$async)\n\t\tthis.$push('query', helper);\n\telse\n\t\tthis.$$schema.query(this, helper, callback, this.$$controller);\n\n\treturn this;\n};\n\nSchemaInstance.prototype.$read = SchemaInstance.prototype.$get = function(helper, callback) {\n\n\tif (this.$$can && this.$$async)\n\t\tthis.$push('get', helper);\n\telse\n\t\tthis.$$schema.get(this, helper, callback, this.$$controller);\n\n\treturn this;\n};\n\nSchemaInstance.prototype.$remove = function(helper, callback) {\n\n\tif (this.$$can && this.$$async)\n\t\tthis.$push('remove', helper);\n\telse\n\t\tthis.$$schema.remove(helper, callback, this.$$controller);\n\n\treturn this;\n};\n\nSchemaInstance.prototype.$default = function() {\n\treturn this.$$schema.default();\n};\n\nSchemaInstance.prototype.$destroy = function() {\n\treturn this.$$schema.destroy();\n};\n\nSchemaInstance.prototype.$transform = function(name, helper, callback) {\n\n\tif (this.$$can && this.$$async)\n\t\tthis.$push('transform', name, helper);\n\telse\n\t\tthis.$$schema.transform(name, this, helper, callback, undefined, this.$$controller);\n\n\treturn this;\n};\n\nSchemaInstance.prototype.$workflow = function(name, helper, callback) {\n\n\tif (this.$$can && this.$$async)\n\t\tthis.$push('workflow', name, helper);\n\telse\n\t\tthis.$$schema.workflow(name, this, helper, callback, undefined, this.$$controller);\n\n\treturn this;\n};\n\nSchemaInstance.prototype.$hook = function(name, helper, callback) {\n\n\tif (this.$$can && this.$$async)\n\t\tthis.$push('hook', name, helper);\n\telse\n\t\tthis.$$schema.hook(name, this, helper, callback, undefined, this.$$controller);\n\n\treturn this;\n};\n\nSchemaInstance.prototype.$operation = function(name, helper, callback) {\n\n\tif (this.$$can && this.$$async)\n\t\tthis.$push('operation', name, helper);\n\telse\n\t\tthis.$$schema.operation(name, this, helper, callback, undefined, this.$$controller);\n\n\treturn this;\n};\n\nSchemaInstance.prototype.$clean = SchemaInstance.prototype.$plain = function() {\n\treturn this.$$schema.clean(this);\n};\n\nSchemaInstance.prototype.$clone = function() {\n\treturn framework_utils.extend(new this.$$schema.CurrentSchemaInstance(), this, true);\n};\n\nSchemaInstance.prototype.$prepare = function() {\n\treturn this.$$schema.prepare(this);\n};\n\nSchemaInstance.prototype.$schema = function() {\n\treturn this.$$schema;\n};\n\nSchemaInstance.prototype.$validate = function(resourcePrefix, resourceName, builder) {\n\treturn this.$$schema.validate(this, resourcePrefix, resourceName, builder);\n};\n\nSchemaInstance.prototype.$constant = function(name) {\n\treturn this.$$schema.constant(name);\n};\n\n/**\n * ErrorBuilder\n * @class\n * @classdesc Object validation.\n * @param {ErrorBuilderOnResource} onResource Resource handler.\n * @property {Number} count Count of errors.\n */\nfunction ErrorBuilder(onResource) {\n\n\tthis.items = [];\n\tthis.transformName = transforms['error_default'];\n\tthis.onResource = onResource;\n\tthis.resourceName = F.config['default-errorbuilder-resource-name'];\n\tthis.resourcePrefix = F.config['default-errorbuilder-resource-prefix'] || '';\n\tthis.isResourceCustom = false;\n\tthis.count = 0;\n\tthis.replacer = [];\n\tthis.isPrepared = false;\n\tthis.contentType = 'application/json';\n\n\t// Hidden: when the .push() contains a classic Error instance\n\t// this.unexpected;\n\n\t!onResource && this._resource();\n}\n\n/**\n * @callback ErrorBuilderOnResource\n * @param {String} name Filename of resource.\n * @param {String} key Resource key.\n * @return {String}\n */\n\n/**\n * UrlBuilder\n * @class\n * @classdesc CRUD parameters in URL.\n */\nfunction UrlBuilder() {\n\tthis.builder = {};\n}\n\nexports.isSchema = function(obj) {\n\treturn obj instanceof SchemaInstance;\n};\n\nexports.eachschema = function(group, fn) {\n\n\tif (fn === undefined) {\n\t\tfn = group;\n\t\tgroup = undefined;\n\t}\n\n\tvar groups = group ? [group] : Object.keys(schemas);\n\tfor (var i = 0, length = groups.length; i < length; i++) {\n\t\tvar schema = schemas[groups[i]];\n\t\tif (!schema)\n\t\t\tcontinue;\n\t\tvar collection = Object.keys(schema.collection);\n\t\tfor (var j = 0, jl = collection.length; j < jl; j++)\n\t\t\tfn(schema.name, schema.collection[collection[j]].name, schema.collection[collection[j]]);\n\t}\n};\n\nexports.getschema = function(group, name, fn, timeout) {\n\n\tif (!name || typeof(name) === 'function') {\n\t\tfn = name;\n\t\tname = group;\n\t\tgroup = DEFAULT_SCHEMA;\n\t}\n\n\tif (fn)\n\t\treturn framework_utils.wait(n => schemas[group], err => fn(err, schemas[group]), timeout || 20000);\n\n\tvar g = schemas[group];\n\treturn g ? g.get(name) : undefined;\n};\n\nexports.newschema = function(group, name) {\n\n\tif (!group)\n\t\tgroup = DEFAULT_SCHEMA;\n\n\tif (!schemas[group])\n\t\tschemas[group] = new SchemaBuilder(group);\n\n\tvar o = schemas[group].create(name);\n\to.owner = F.$owner();\n\treturn o;\n};\n\n/**\n * Remove a schema\n * @param {String} name\n */\nexports.remove = function(name) {\n\tdelete schemas[name];\n};\n\n/**\n * Check if property value is joined to other class\n * @private\n * @param {String} value Property value from Schema definition.\n * @return {Boolean}\n */\nexports.isJoin = function(collection, value) {\n\tif (!value)\n\t\treturn false;\n\tif (value[0] === '[')\n\t\treturn true;\n\tif (collection === undefined)\n\t\treturn false;\n\treturn collection[value] !== undefined;\n};\n\n/**\n * Create validation\n * @param {String} name Schema name.\n * @param {Function|Array} fn Validator Handler or Property names as array for validating.\n * @param {String|Array} properties Valid only these properties, optional.\n * @return {Function|Array}\n */\nexports.validation = function(name, properties, fn) {\n\n\tif (schemas[DEFAULT_SCHEMA] === undefined)\n\t\treturn EMPTYARRAY;\n\n\tvar schema = schemas[DEFAULT_SCHEMA].get(name);\n\tif (schema === undefined)\n\t\treturn EMPTYARRAY;\n\n\tif (fn instanceof Array && typeof(properties) === 'function') {\n\t\tvar tmp = fn;\n\t\tfn = properties;\n\t\tproperties = tmp;\n\t}\n\n\tif (typeof(fn) === 'function') {\n\t\tschema.onValidate = fn;\n\t\tif (properties)\n\t\t\tschema.properties = properties;\n\t\telse\n\t\t\tschema.properties = Object.keys(schema.schema);\n\t\treturn true;\n\t}\n\n\tif (!fn) {\n\t\tvar validator = schema.properties;\n\t\tif (validator === undefined)\n\t\t\treturn Object.keys(schema.schema);\n\t\treturn validator || [];\n\t}\n\n\tschema.onValidate = fn;\n\treturn fn;\n};\n\n/**\n * Validate model\n * @param {String} name Schema name.\n * @param {Object} model Object for validating.\n * @return {ErrorBuilder}\n */\nexports.validate = function(name, model, resourcePrefix, resourceName) {\n\n\tvar schema = schemas[DEFAULT_SCHEMA];\n\tif (schema === undefined)\n\t\treturn null;\n\n\tschema = schema.get(name);\n\tif (schema === undefined)\n\t\treturn null;\n\n\treturn schema.validate(model, resourcePrefix, resourceName);\n};\n\n/**\n * Create default object according to schema\n * @param  {String} name Schema name.\n * @return {Object}\n */\nexports.create = function(name) {\n\treturn exports.defaults(name);\n};\n\n/**\n * Create default object according to schema\n * @param  {String} name Schema name.\n * @return {Object}\n */\nexports.defaults = function(name) {\n\tif (schemas[DEFAULT_SCHEMA] === undefined)\n\t\treturn null;\n\tvar schema = schemas[DEFAULT_SCHEMA].get(name);\n\tif (schema === undefined)\n\t\treturn null;\n\treturn schema.default();\n};\n\n/**\n * Prepare object according to schema\n * @param {String} name Schema name.\n * @param {Object} model Object to prepare.\n * @return {Object} Prepared object.\n */\nexports.prepare = function(name, model) {\n\tif (schemas[DEFAULT_SCHEMA] === undefined)\n\t\treturn null;\n\tvar schema = schemas[DEFAULT_SCHEMA].get(name);\n\tif (schema === undefined)\n\t\treturn null;\n\treturn schema.prepare(model);\n};\n\nfunction isUndefined(value, def) {\n\tif (value === undefined)\n\t\treturn def;\n\treturn value;\n}\n\n// ======================================================\n// PROTOTYPES\n// ======================================================\n\nErrorBuilder.prototype = {\n\n\tget errors() {\n\t\tvar self = this;\n\t\t!self.isPrepared && self.prepare();\n\t\treturn self._transform();\n\t},\n\n\tget error() {\n\t\tvar self = this;\n\t\t!self.isPrepared && self.prepare();\n\t\treturn self._transform();\n\t}\n};\n\n/**\n * Resource setting\n * @param {String} name Resource name.\n * @param {String} prefix Resource prefix.\n * @return {ErrorBuilder}\n */\nErrorBuilder.prototype.resource = function(name, prefix) {\n\tvar self = this;\n\tself.isResourceCustom = true;\n\tself.resourceName = name;\n\tself.resourcePrefix = prefix || '';\n\treturn self._resource();\n};\n\nErrorBuilder.prototype.setContentType = function(type) {\n\tthis.contentType = type;\n\treturn this;\n};\n\nErrorBuilder.prototype.setResource = function(name) {\n\tvar self = this;\n\tself.isResourceCustom = true;\n\tself.resourceName = name;\n\treturn self._resource();\n};\n\nErrorBuilder.prototype.setPrefix = function(name) {\n\tvar self = this;\n\tself.resourcePrefix = name || '';\n\treturn self._resource();\n};\n\n/**\n * Internal: Resource wrapper\n * @private\n * @return {ErrorBuilder}\n */\nErrorBuilder.prototype._resource = function() {\n\tvar self = this;\n\tself.onResource = self._resource_handler;\n\treturn self;\n};\n\nErrorBuilder.prototype._resource_handler = function(name) {\n\tvar self = this;\n\treturn typeof(framework) !== 'undefined' ? F.resource(self.resourceName || 'default', self.resourcePrefix + name) : '';\n}\n\nErrorBuilder.prototype.exception = function(message) {\n\tthis.items.push({ name: '', error: message });\n\treturn this;\n};\n\n/**\n * Add an error\n * @param {String} name  Property name.\n * @param {String|Error} error Error message.\n * @param {String} path  Current path (in object).\n * @param {Number} index Array Index, optional.\n * @return {ErrorBuilder}\n */\nErrorBuilder.prototype.add = function(name, error, path, index) {\n\treturn this.push(name, error, path, index);\n};\n\n/**\n * Add an error (@alias for add)\n * @param {String} name  Property name.\n * @param {String or Error} error Error message.\n * @param {String} path  Current path (in object).\n * @param {Number} index Array Index, optional.\n * @return {ErrorBuilder}\n */\nErrorBuilder.prototype.push = function(name, error, path, index) {\n\tthis.isPrepared = false;\n\n\tif (name instanceof ErrorBuilder) {\n\t\tif (name.hasError()) {\n\t\t\tfor (var i = 0, length = name.items.length; i < length; i++)\n\t\t\t\tthis.items.push(name.items[i]);\n\t\t\tthis.count = this.items.length;\n\t\t}\n\t\treturn this;\n\t}\n\n\tif (name instanceof Array) {\n\t\tfor (var i = 0, length = name.length; i < length; i++)\n\t\t\tthis.push(name[i], undefined, path, index);\n\t\treturn this;\n\t}\n\n\tif (error instanceof Array) {\n\t\tfor (var i = 0, length = error.length; i < length; i++)\n\t\t\tthis.push(name, error[i], path, index);\n\t\treturn this;\n\t}\n\n\tif (typeof(name) === 'object') {\n\t\tpath = error;\n\t\terror = name;\n\t\tname = '';\n\t}\n\n\tif (error === null || (!name && !error))\n\t\treturn this;\n\n\tif (!error)\n\t\terror = '@';\n\n\tif (error instanceof Error) {\n\t\t// Why? The answer is in controller.callback(); It's a reason for throwing 500 - internal server error\n\t\tthis.unexpected = true;\n\t\terror = error.toString();\n\t}\n\n\tthis.items.push({ name: name, error: typeof(error) === 'string' ? error : error.toString(), path: path, index: index });\n\tthis.count = this.items.length;\n\treturn this;\n};\n\n/**\n * Remove error\n * @param {String} name Property name.\n * @return {ErrorBuilder}\n */\nErrorBuilder.prototype.remove = function(name) {\n\tthis.items = this.items.remove('name', name);\n\tthis.count = this.items.length;\n\treturn this;\n};\n\n/**\n * Has error?\n * @param {String}  name Property name (optional).\n * @return {Boolean}\n */\nErrorBuilder.prototype.hasError = function(name) {\n\treturn name ? this.items.findIndex('name', name) !== -1 : this.items.length > 0;\n};\n\n/**\n * Read an error\n * @param {String} name Property name.\n * @return {String}\n */\nErrorBuilder.prototype.read = function(name) {\n\t!this.isPrepared && this.prepare();\n\tvar error = this.items.findItem('name', name);\n\treturn error ? error.error : null;\n};\n\n/**\n * Clear error collection\n * @return {ErrorBuilder}\n */\nErrorBuilder.prototype.clear = function() {\n\tthis.items = [];\n\tthis.count = 0;\n\treturn this;\n};\n\n/**\n * Replace text in message\n * @param {String} search Text to search.\n * @param {String} newvalue Text to replace.\n * @return {ErrorBuilder}\n */\nErrorBuilder.prototype.replace = function(search, newvalue) {\n\tthis.isPrepared = false;\n\tthis.replacer[search] = newvalue;\n\treturn this;\n};\n\n/**\n * Serialize ErrorBuilder to JSON\n * @param {Boolean} beautify Beautify JSON.\n * @param {Function(key, value)} replacer JSON replacer.\n * @return {String}\n */\nErrorBuilder.prototype.json = function(beautify, replacer) {\n\tvar items = this.prepare().items;\n\treturn beautify ? JSON.stringify(items, replacer, '\\t') : JSON.stringify(items, replacer);\n};\n\nErrorBuilder.prototype.plain = function() {\n\tvar items = this.prepare().items;\n\tvar output = '';\n\tfor (var i = 0, length = items.length; i < length; i++)\n\t\toutput += (output ? ', ' : '') + items[i].error;\n\treturn output;\n};\n\n/**\n * Serialize ErrorBuilder to JSON\n * @param {Boolean} beautify Beautify JSON.\n * @return {String}\n */\nErrorBuilder.prototype.JSON = function(beautify, replacer) {\n\treturn this.json(beautify, replacer);\n};\n\n/**\n * Internal: Prepare error messages with onResource()\n * @private\n * @return {ErrorBuilder}\n */\nErrorBuilder.prototype._prepare = function() {\n\n\tif (!this.onResource)\n\t\treturn this;\n\n\tvar arr = this.items;\n\tfor (var i = 0, length = arr.length; i < length; i++) {\n\n\t\tvar o = arr[i];\n\t\tif (o.error[0] !== '@')\n\t\t\tcontinue;\n\n\t\tif (o.error.length === 1)\n\t\t\to.error = this.onResource(o.name);\n\t\telse\n\t\t\to.error = this.onResource(o.error.substring(1));\n\n\t\tif (!o.error)\n\t\t\to.error = REQUIRED.replace('@', o.name);\n\t}\n\n\treturn this;\n};\n\n/**\n * Execute a transform\n * @private\n * @return {Object}\n */\nErrorBuilder.prototype._transform = function(name) {\n\tvar transformName = name || this.transformName;\n\tif (transformName) {\n\t\tvar current = transforms['error'][transformName];\n\t\treturn current ? current.call(this) : this.items;\n\t}\n\treturn this.items;\n};\n\nErrorBuilder.prototype.output = function() {\n\tif (!this.transformName)\n\t\treturn this.json();\n\tvar current = transforms['error'][this.transformName];\n\tif (current) {\n\t\tthis.prepare();\n\t\treturn current.call(this);\n\t}\n\treturn this.json();\n};\n\n/**\n * To string\n * @return {String}\n */\nErrorBuilder.prototype.toString = function() {\n\n\t!this.isPrepared && this.prepare();\n\n\tvar errors = this.items;\n\tvar length = errors.length;\n\tvar builder = [];\n\n\tfor (var i = 0; i < length; i++)\n\t\tbuilder.push(errors[i].error || errors[i].name);\n\n\treturn builder.join('\\n');\n\n};\n\n/**\n * Set transformation for current ErrorBuilder\n * @param {String} name\n * @return {ErrorBuilder}\n */\nErrorBuilder.prototype.setTransform = function(name) {\n\tthis.transformName = name;\n\treturn this;\n};\n\n/**\n * Transform\n * @param {String} name\n * @return {Object}\n */\nErrorBuilder.prototype.transform = function(name) {\n\treturn this.prepare()._transform(name);\n};\n\n/**\n * Internal: Prepare error messages with onResource()\n * @private\n * @return {ErrorBuidler}\n */\nErrorBuilder.prototype._prepareReplace = function() {\n\n\tvar self = this;\n\tvar errors = self.items;\n\tvar lengthBuilder = errors.length;\n\tvar keys = Object.keys(self.replacer);\n\tvar lengthKeys = keys.length;\n\n\tif (!lengthBuilder || !lengthKeys)\n\t\treturn self;\n\n\tfor (var i = 0; i < lengthBuilder; i++) {\n\t\tvar o = errors[i];\n\t\tfor (var j = 0; j < lengthKeys; j++) {\n\t\t\tvar key = keys[j];\n\t\t\to.error = o.error.replace(key, self.replacer[key]);\n\t\t}\n\t}\n\n\treturn self;\n};\n\n/**\n * Internal: Prepare error messages with onResource()\n * @private\n * @return {ErrorBuilder}\n */\nErrorBuilder.prototype.prepare = function() {\n\tif (this.isPrepared)\n\t\treturn this;\n\tthis._prepare()._prepareReplace();\n\tthis.isPrepared = true;\n\treturn this;\n};\n\n/**\n * STATIC: Create transformation\n * @param {String} name\n * @param {Function(ErrorBuilder)} fn\n * @param {Boolean} isDefault Default transformation for all error builders.\n */\nErrorBuilder.addTransform = function(name, fn, isDefault) {\n\ttransforms['error'][name] = fn;\n\tisDefault && ErrorBuilder.setDefaultTransform(name);\n};\n\n/**\n * STATIC: Remove transformation\n * @param {String} name\n */\nErrorBuilder.removeTransform = function(name) {\n\tdelete transforms['error'][name];\n};\n\n/**\n * STATIC: Create transformation\n * @param {String} name\n * @param {Function(errorBuilder)} fn\n */\nErrorBuilder.setDefaultTransform = function(name) {\n\tif (name)\n\t\ttransforms['error_default'] = name;\n\telse\n\t\tdelete transforms['error_default'];\n};\n\n/**\n * Pagination\n * @class\n * @param {Number} items Count of items.\n * @param {Number} page Current page.\n * @param {Number} max Max items on page.\n * @param {String} format URL format for links (next, back, go to). Example: ?page={0} --- {0} = page, {1} = items count, {2} = page count\n * @property {Number} isNext Is next page?\n * @property {Number} isPrev Is previous page?\n * @property {Number} count Page count.\n * @property {Boolean} visible Is more than one page?\n * @property {String} format Format URL. Example: ?page={0} --- {0} = page, {1} = items count, {2} = page count\n */\nfunction Pagination(items, page, max, format) {\n\tthis.isNext = false;\n\tthis.isPrev = false;\n\tthis.isFirst = false;\n\tthis.isLast = false;\n\tthis.nextPage = 0;\n\tthis.prevPage = 0;\n\tthis.lastPage = 0;\n\tthis.firstPage = 0;\n\tthis.items = Math.max(0, +items);\n\tthis.count = 0;\n\tthis.skip = 0;\n\tthis.take = 0;\n\tthis.page = 0;\n\tthis.max = 0;\n\tthis.visible = false;\n\tthis.format = format || '?page={0}';\n\tthis.refresh(items, page, max);\n\tthis.transformName = transforms['pagination_default'];\n}\n\nfunction Page(url, page, selected, enabled) {\n\tthis.url = url;\n\tthis.page = page;\n\tthis.selected = selected;\n\tthis.enabled = enabled;\n}\n\nPage.prototype.html = function(body, cls) {\n\tvar classname = cls ? cls : '';\n\tif (this.selected)\n\t\tclassname += (classname ? ' ' : '') + 'selected';\n\treturn '<a href=\"' + this.url + '\"' + (classname ? (' class=\"' + classname + '\"') : '') + '>' + (body || this.page) + '</a>';\n};\n\n/**\n * STATIC: Create transformation\n * @param {String} name\n * @param {Function(pagination)} fn\n * @param {Boolean} isDefault Default transformation for all paginations.\n */\nPagination.addTransform = function(name, fn, isDefault) {\n\ttransforms['pagination'][name] = fn;\n\tisDefault && Pagination.setDefaultTransform(name);\n};\n\n/**\n * STATIC: Create transformation\n * @param {String} name\n * @param {Function(pagination)} fn\n */\nPagination.setDefaultTransform = function(name) {\n\tif (name)\n\t\ttransforms['pagination_default'] = name;\n\telse\n\t\tdelete transforms['pagination_default'];\n};\n\n/**\n * STATIC: Remove transformation\n * @param {String} name\n */\nPagination.removeTransform = function(name) {\n\tdelete transforms['pagination'][name];\n};\n\n/**\n * Refresh pagination\n * @param {Number} items Count of items.\n * @param {Number} page Current page.\n * @param {Number} max Max items on page.\n * @return {Pagination}\n */\nPagination.prototype.refresh = function(items, page, max) {\n\n\tthis.page = Math.max(1, +page) - 1;\n\n\tif (this.page <= 0)\n\t\tthis.page = 0;\n\n\tthis.items = Math.max(0, +items);\n\tthis.max = Math.max(1, +max);\n\tthis.skip = this.page * this.max;\n\tthis.count = Math.ceil(this.items / this.max);\n\tthis.take = Math.min(this.max, (this.items - this.skip));\n\n\tthis.lastPage = this.count;\n\tthis.firstPage = 1;\n\tthis.prevPage = this.page ? this.page : 1;\n\tthis.nextPage = this.page + 2 < this.count - 1 ? this.page + 2 : this.count;\n\n\tthis.isPrev = this.page > 0;\n\tthis.isNext = this.page < this.count - 1;\n\n\tthis.isFirst = this.page === 0;\n\tthis.isLast = this.page === this.count - 1;\n\n\tthis.visible = this.count > 1;\n\tthis.page++;\n\n\treturn this;\n};\n\n/**\n * Set transformation for current Pagination\n * @param {String} name\n * @return {Pagination}\n */\nPagination.prototype.setTransform = function(name) {\n\tthis._transform = name;\n\treturn this;\n};\n\n/**\n * Execute a transform\n * @private\n * @param {String} name A transformation name.\n * @param {Object} argument1 Optional.\n * @param {Object} argument2 Optional.\n * @param {Object} argument3 Optional.\n * @param {Object} argument4 Optional.\n * @param {Object} argument..n Optional.\n * @return {Object}\n */\nPagination.prototype.transform = function(name) {\n\n\tvar transformName = name || this.transformName;\n\tif (!transformName)\n\t\tthrow new Error('A transformation of Pagination not found.');\n\n\tvar current = transforms['pagination'][transformName];\n\tif (!current)\n\t\treturn this.render();\n\n\tvar param = [];\n\tfor (var i = 1; i < arguments.length; i++)\n\t\tparam.push(arguments[i]);\n\n\treturn current.apply(this, param);\n};\n\n/**\n * Get a previous page\n * @param {String} format Custom format (optional).\n * @return {Object} Example: { url: String, page: Number, selected: Boolean }\n */\nPagination.prototype.prev = function(format) {\n\tvar page = 0;\n\n\tformat = format || this.format;\n\n\tif (this.isPrev)\n\t\tpage = this.page - 1;\n\telse\n\t\tpage = this.count;\n\n\treturn new Page(format.format(page, this.items, this.count), page, false, this.isPrev);\n};\n\n/**\n * Get a next page\n * @param {String} format Custom format (optional).\n * @return {Object} Example: { url: String, page: Number, selected: Boolean }\n */\nPagination.prototype.next = function(format) {\n\tvar page = 0;\n\n\tformat = format || this.format;\n\n\tif (this.isNext)\n\t\tpage = this.page + 1;\n\telse\n\t\tpage = 1;\n\n\treturn new Page(format.format(page, this.items, this.count), page, false, this.isNext);\n};\n\n/**\n * Get a last page\n * @param {String} format Custom format (optional).\n * @return {Object} Example: { url: String, page: Number, selected: Boolean }\n */\nPagination.prototype.last = function(format) {\n\tvar page = this.count;\n\tformat = format || this.format;\n\treturn new Page(format.format(page, this.items, this.count), page, false, this.count > 0);\n};\n\n/**\n * Get a first page\n * @param {String} format Custom format (optional).\n * @return {Object} Example: { url: String, page: Number, selected: Boolean }\n */\nPagination.prototype.first = function(format) {\n\tvar page = 1;\n\tformat = format || this.format;\n\treturn new Page(format.format(page, this.items, this.count), page, false, this.count > 0);\n};\n\n/**\n * Create a pagination object\n * @param {Number} max Max pages in collection (optional).\n * @param {String} format Custom format (optional).\n * @return {Object Array} Example: [{ url: String, page: Number, selected: Boolean }]\n */\nPagination.prototype.prepare = function(max, format, type) {\n\n\tvar self = this;\n\n\tif (self.transformName)\n\t\treturn transforms['pagination'][self.transformName].apply(self, arguments);\n\n\tvar builder = [];\n\tformat = format || self.format;\n\n\tif (typeof(max) === 'string') {\n\t\tvar tmp = format;\n\t\tformat = max;\n\t\tmax = tmp;\n\t}\n\n\tvar isHTML = type === 'html';\n\n\tif (max == null) {\n\t\tfor (var i = 1; i < self.count + 1; i++) {\n\t\t\tvar page = new Page(format.format(i, self.items, self.count), i, i === self.page, true);\n\t\t\tbuilder.push(isHTML ? page.html() : page);\n\t\t}\n\t\treturn builder;\n\t}\n\n\tvar half = Math.floor(max / 2);\n\tvar pages = self.count;\n\n\tvar pageFrom = self.page - half;\n\tvar pageTo = self.page + half;\n\tvar plus = 0;\n\n\tif (pageFrom <= 0) {\n\t\tplus = Math.abs(pageFrom);\n\t\tpageFrom = 1;\n\t\tpageTo += plus;\n\t}\n\n\tif (pageTo >= pages) {\n\t\tpageTo = pages;\n\t\tpageFrom = pages - max;\n\t\tif (pageFrom <= 0)\n\t\t\tpageFrom = 1;\n\t}\n\n\tfor (var i = pageFrom; i < pageTo + 1; i++) {\n\t\tvar page = new Page(format.format(i, self.items, self.count), i, i === self.page, true);\n\t\tbuilder.push(isHTML ? page.html() : page);\n\t}\n\n\treturn builder;\n};\n\nPagination.prototype.render = function(max, format) {\n\treturn this.prepare(max, format);\n};\n\nPagination.prototype.html = function(max, format) {\n\treturn this.prepare(max, format, 'html').join('');\n};\n\nPagination.prototype.json = function(max, format) {\n\treturn JSON.stringify(this.prepare(max, format));\n};\n\nUrlBuilder.make = function(fn) {\n\tvar b = new UrlBuilder();\n\tfn.call(b, b);\n\treturn b;\n};\n\n/**\n * Add parameter\n * @param {String} name\n * @param {Object} value\n * return {UrlBuilder}\n */\nUrlBuilder.prototype.add = function(name, value) {\n\n\tif (typeof(name) !== 'object') {\n\t\tthis.builder[name] = value;\n\t\treturn this;\n\t}\n\n\tvar arr = Object.keys(name);\n\n\tfor (var i = 0, length = arr.length; i < length; i++)\n\t\tthis.builder[arr[i]] = name[arr[i]];\n\n\treturn this;\n};\n\n/**\n * Remove parameter\n * @param {String} name\n * @return {UrlBuilder}\n */\nUrlBuilder.prototype.remove = function(name) {\n\tdelete this.builder[name];\n\treturn this;\n};\n\n/**\n * Read value\n * @param {String} name\n * @return {Object}\n */\nUrlBuilder.prototype.read = function(name) {\n\treturn this.builder[name] || null;\n};\n\n/**\n * Clear parameter collection\n * @return {UrlBuilder}\n */\nUrlBuilder.prototype.clear = function() {\n\tthis.builder = {};\n\treturn this;\n};\n\n/**\n * Create URL\n * @return {String}\n */\nUrlBuilder.prototype.toString = function(url, skipEmpty) {\n\n\tif (typeof(url) === 'boolean') {\n\t\tvar tmp = skipEmpty;\n\t\tskipEmpty = url;\n\t\turl = tmp;\n\t}\n\n\tvar self = this;\n\tvar builder = [];\n\n\tObject.keys(self.builder).forEach(function(o) {\n\n\t\tvar value = self.builder[o];\n\t\tif (value == null)\n\t\t\tvalue = '';\n\t\telse\n\t\t\tvalue = value.toString();\n\n\t\tif (skipEmpty && value === '')\n\t\t\treturn;\n\n\t\tbuilder.push(o + '=' + encodeURIComponent(value));\n\t});\n\n\tif (typeof(url) === 'string') {\n\t\tif (url[url.length - 1] !== '?')\n\t\t\turl += '?';\n\t} else\n\t\turl = '';\n\n\treturn url + builder.join('&');\n};\n\n/**\n * Has these parameters?\n * @param {String Array} keys Keys.\n * @return {Boolean}\n */\nUrlBuilder.prototype.hasValue = function(keys) {\n\n\tif (keys === undefined)\n\t\treturn false;\n\n\tif (typeof(keys) === 'string')\n\t\tkeys = [keys];\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tvar val = this.builder[keys[i]];\n\t\tif (val == null)\n\t\t\treturn false;\n\t}\n\n\treturn true;\n};\n\n/**\n * Render parameters\n * @param {String Array} keys Keys.\n * @param {String} delimiter Delimiter (default &).\n * @return {String}\n */\nUrlBuilder.prototype.toOne = function(keys, delimiter) {\n\tvar self = this;\n\tvar builder = [];\n\tkeys.forEach(key => builder.push(self.builder[key] || ''));\n\treturn builder.join(delimiter || '&');\n};\n\nfunction TransformBuilder() {}\n\nTransformBuilder.transform = function(name, obj) {\n\n\tOBSOLETE('TransformBuilder', 'Builders.TransformBuilder will be removed in next versions.');\n\n\tvar index = 2;\n\n\tif (obj === undefined) {\n\t\tobj = name;\n\t\tname = transforms['transformbuilder_default'];\n\t\tindex = 1;\n\t}\n\n\tvar current = transforms['transformbuilder'][name];\n\tif (!current) {\n\t\tF.error('Transformation \"' + name + '\" not found.', 'TransformBuilder.transform()');\n\t\treturn obj;\n\t}\n\n\tvar sum = arguments.length - index;\n\tif (sum <= 0)\n\t\treturn current.call(obj, obj);\n\n\tvar arr = new Array(sum + 1)\n\tvar indexer = 1;\n\tarr[0] = obj;\n\tfor (var i = index; i < arguments.length; i++)\n\t\tarr[indexer++] = arguments[i];\n\treturn current.apply(obj, arr);\n};\n\n/**\n * STATIC: Create a transformation\n * @param {String} name\n * @param {Function} fn\n * @param {Boolean} isDefault Default transformation for all TransformBuilders.\n */\nTransformBuilder.addTransform = function(name, fn, isDefault) {\n\ttransforms['transformbuilder'][name] = fn;\n\tisDefault && TransformBuilder.setDefaultTransform(name);\n};\n\nTransformBuilder.setDefaultTransform = function(name) {\n\tif (name)\n\t\ttransforms['transformbuilder_default'] = name;\n\telse\n\t\tdelete transforms['transformbuilder_default'];\n};\n\nfunction async_queue(arr, callback) {\n\tvar item = arr.shift();\n\tif (item)\n\t\titem(() => async_queue(arr, callback));\n\telse\n\t\tcallback();\n};\n\nfunction async_wait(arr, onItem, onCallback, index) {\n\tvar item = arr[index];\n\tif (item)\n\t\tonItem(item, () => async_wait(arr, onItem, onCallback, index + 1), index);\n\telse\n\t\tonCallback();\n}\n\nfunction RESTBuilder(url) {\n\tthis.$url = url;\n\tthis.$headers = { 'User-Agent': 'Total.js/v' + F.version_header, Accept: 'application/json, text/plain, text/plain, text/xml' };\n\tthis.$method = 'get';\n\tthis.$timeout = 10000;\n\tthis.$type = 0; // 0 = query, 1 = json, 2 = urlencode, 3 = raw\n\tthis.$schema;\n\tthis.$length = 0;\n\tthis.$transform = transforms['restbuilder_default'];\n\n\t// this.$flags;\n\t// this.$data = {};\n\t// this.$nodnscache = true;\n\t// this.$cache_expire;\n\t// this.$cache_nocache;\n}\n\nRESTBuilder.make = function(fn) {\n\tvar instance = new RESTBuilder();\n\tfn(instance);\n\treturn instance;\n};\n\n/**\n * STATIC: Creates a transformation\n * @param {String} name\n * @param {Function} fn\n * @param {Boolean} isDefault Default transformation for all RESTBuilders.\n */\nRESTBuilder.addTransform = function(name, fn, isDefault) {\n\ttransforms['restbuilder'][name] = fn;\n\tisDefault && RESTBuilder.setDefaultTransform(name);\n};\n\nRESTBuilder.setDefaultTransform = function(name) {\n\tif (name)\n\t\ttransforms['restbuilder_default'] = name;\n\telse\n\t\tdelete transforms['restbuilder_default'];\n};\n\nRESTBuilder.prototype.setTransform = function(name) {\n\tthis.$transform = name;\n\treturn this;\n};\n\nRESTBuilder.prototype.url = function(url) {\n\tif (url === undefined)\n\t\treturn this.$url;\n\tthis.$url = url;\n\treturn this;\n};\n\nRESTBuilder.prototype.maketransform = function(obj, data) {\n\tif (this.$transform) {\n\t\tvar fn = transforms['restbuilder'][this.$transform];\n\t\treturn fn ? fn(obj, data) : obj;\n\t}\n\treturn obj;\n};\n\nRESTBuilder.prototype.$trasnformname\n\nRESTBuilder.prototype.timeout = function(number) {\n\tthis.$timeout = number;\n\treturn this;\n};\n\nRESTBuilder.prototype.maxlength = function(number) {\n\tthis.$length = number;\n\tthis.$flags = null;\n\treturn this;\n};\n\nRESTBuilder.prototype.auth = function(user, password) {\n\tthis.$headers['authorization'] = 'Basic ' + framework_utils.createBuffer(user + ':' + password).toString('base64');\n\treturn this;\n};\n\nRESTBuilder.prototype.schema = function(group, name) {\n\tthis.$schema = exports.getschema(group, name);\n\treturn this;\n};\n\nRESTBuilder.prototype.noDnsCache = function() {\n\tthis.$nodnscache = true;\n\tthis.$flags = null;\n\treturn this;\n};\n\nRESTBuilder.prototype.noCache = function() {\n\tthis.$nocache = true;\n\treturn this;\n};\n\nRESTBuilder.prototype.make = function(fn) {\n\tfn.call(this, this);\n\treturn this;\n};\n\nRESTBuilder.prototype.xhr = function() {\n\tthis.$headers['X-Requested-With'] = 'XMLHttpRequest';\n\treturn this;\n};\n\nRESTBuilder.prototype.method = function(method) {\n\tthis.$method = method.toLowerCase();\n\tthis.$flags = null;\n\treturn this;\n};\n\nRESTBuilder.prototype.referer = RESTBuilder.prototype.referrer = function(value) {\n\tthis.$headers['Referer'] = value;\n\treturn this;\n};\n\nRESTBuilder.prototype.origin = function(value) {\n\tthis.$headers['Origin'] = value;\n\treturn this;\n};\n\nRESTBuilder.prototype.put = function(data) {\n\tif (this.$method !== 'put') {\n\t\tthis.$flags = null;\n\t\tthis.$method = 'put';\n\t\tthis.$type = 1;\n\t}\n\tdata && this.raw(data);\n\treturn this;\n};\n\nRESTBuilder.prototype.delete = function(data) {\n\tif (this.$method !== 'delete') {\n\t\tthis.$flags = null;\n\t\tthis.$method = 'delete';\n\t\tthis.$type = 1;\n\t}\n\tdata && this.raw(data);\n\treturn this;\n};\n\nRESTBuilder.prototype.get = function(data) {\n\tif (this.$method !== 'get') {\n\t\tthis.$flags = null;\n\t\tthis.$method = 'get';\n\t}\n\tdata && this.raw(data);\n\treturn this;\n};\n\nRESTBuilder.prototype.post = function(data) {\n\tif (this.$method !== 'post') {\n\t\tthis.$flags = null;\n\t\tthis.$method = 'post';\n\t\tthis.$type = 1;\n\t}\n\tdata && this.raw(data);\n\treturn this;\n};\n\nRESTBuilder.prototype.json = function(data) {\n\n\tif (this.$type !== 1)\n\t\tthis.$flags = null;\n\n\tdata && this.raw(data);\n\tthis.$type = 1;\n\n\tif (this.$method === 'get')\n\t\tthis.$method = 'post';\n\n\treturn this;\n};\n\nRESTBuilder.prototype.urlencoded = function(data) {\n\n\tif (this.$type !== 2)\n\t\tthis.$flags = null;\n\n\tif (this.$method === 'get')\n\t\tthis.$method = 'post';\n\n\tthis.$type = 2;\n\tdata && this.raw(data);\n\treturn this;\n};\n\nRESTBuilder.prototype.accept = function(ext) {\n\tvar type = framework_utils.getContentType(ext);\n\tif (this.$headers['Accept'] !== type)\n\t\tthis.$flags = null;\n\tthis.$headers['Accept'] = type;\n\treturn this;\n};\n\nRESTBuilder.prototype.xml = function(data) {\n\n\tif (this.$type !== 3)\n\t\tthis.$flags = null;\n\n\tif (this.$method === 'get')\n\t\tthis.$method = 'post';\n\n\tthis.$type = 3;\n\tdata && this.raw(data);\n\treturn this;\n};\n\nRESTBuilder.prototype.raw = function(value) {\n\tthis.$data = value && value.$clean ? value.$clean() : value;\n\treturn this;\n};\n\nRESTBuilder.prototype.cookie = function(name, value) {\n\tif (!this.$cookies)\n\t\tthis.$cookies = {};\n\tthis.$cookies[name] = value;\n\treturn this;\n};\n\nRESTBuilder.prototype.header = function(name, value) {\n\tthis.$headers[name] = value;\n\treturn this;\n};\n\nRESTBuilder.prototype.cache = function(expire) {\n\tthis.$cache_expire = expire;\n\treturn this;\n};\n\nRESTBuilder.prototype.set = function(name, value) {\n\n\tif (!this.$data)\n\t\tthis.$data = {};\n\n\tif (typeof(name) !== 'object') {\n\t\tthis.$data[name] = value;\n\t\treturn this;\n\t}\n\n\tvar arr = Object.keys(name);\n\tfor (var i = 0, length = arr.length; i < length; i++)\n\t\tthis.$data[arr[i]] = name[arr[i]];\n\n\treturn this;\n};\n\nRESTBuilder.prototype.rem = function(name) {\n\tif (this.$data && this.$data[name])\n\t\tthis.$data[name] = undefined;\n\treturn this;\n};\n\nRESTBuilder.prototype.stream = function(callback) {\n\tvar self = this;\n\tvar flags = self.$flags ? self.$flags : [self.$method];\n\n\tif (!self.$flags) {\n\t\t!self.$nodnscache && flags.push('dnscache');\n\t\tswitch (self.$type) {\n\t\t\tcase 1:\n\t\t\t\tflags.push('json');\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tflags.push('xml');\n\t\t\t\tbreak;\n\t\t}\n\t\tself.$flags = flags;\n\t}\n\n\treturn U.download(self.$url, flags, self.$data, callback, self.$cookies, self.$headers, undefined, self.$timeout);\n};\n\nRESTBuilder.prototype.exec = function(callback) {\n\n\tif (!callback)\n\t\tcallback = NOOP;\n\n\tvar self = this;\n\tvar flags = self.$flags ? self.$flags : [self.$method];\n\tvar key;\n\n\tif (!self.$flags) {\n\n\t\t!self.$nodnscache && flags.push('dnscache');\n\t\tself.$length && flags.push('<' + self.$length);\n\n\t\tswitch (self.$type) {\n\t\t\tcase 1:\n\t\t\t\tflags.push('json');\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tflags.push('xml');\n\t\t\t\tbreak;\n\t\t}\n\n\t\tself.$flags = flags;\n\t}\n\n\tif (self.$cache_expire && !self.$nocache) {\n\t\tkey = '$rest_' + (self.$url + flags.join(',') + (self.$data ? Qs.stringify(self.$data) : '')).hash();\n\t\tvar data = F.cache.read2(key);\n\t\tif (data) {\n\t\t\tvar evt = new events.EventEmitter();\n\n\t\t\tsetImmediate(function() {\n\t\t\t\tevt.removeAllListeners();\n\t\t\t\tevt = null;\n\t\t\t});\n\n\t\t\tcallback(null, self.maketransform(this.$schema ? this.$schema.make(data.json) : data.json, data), data);\n\t\t\treturn evt;\n\t\t}\n\t}\n\n\treturn U.request(self.$url, flags, self.$data, function(err, response, status, headers, hostname) {\n\n\t\tvar type = err ? '' : headers['content-type'];\n\t\tvar output = new RESTBuilderResponse();\n\n\t\toutput.value = type.indexOf('/xml') === -1 ? response.isJSON() ? F.onParseJSON(response) : F.onParseQuery(response) : response.parseXML();\n\n\t\tif (output.value == null)\n\t\t\toutput.value = EMPTYOBJECT;\n\n\t\toutput.response = response;\n\t\toutput.status = status;\n\t\toutput.headers = headers;\n\t\toutput.hostname = hostname;\n\t\toutput.cache = false;\n\t\toutput.datetime = F.datetime;\n\n\t\tif (self.$schema) {\n\n\t\t\tif (err)\n\t\t\t\treturn callback(err, EMPTYOBJECT, output);\n\n\t\t\tself.$schema.make(self.maketransform(output.value, output), function(err, model) {\n\t\t\t\t!err && key && F.cache.add(key, output, self.$cache_expire);\n\t\t\t\tcallback(err, err ? EMPTYOBJECT : model, output);\n\t\t\t\toutput.cache = true;\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\t!err && key && F.cache.add(key, output, self.$cache_expire);\n\t\tcallback(err, self.maketransform(output.value, output), output);\n\t\toutput.cache = true;\n\n\t}, self.$cookies, self.$headers, undefined, self.$timeout);\n};\n\nfunction RESTBuilderResponse() {}\n\nRESTBuilderResponse.prototype.cookie = function(name) {\n\tvar self = this;\n\n\tif (self.cookies)\n\t\treturn $decodeURIComponent(self.cookies[name] || '');\n\n\tvar cookie = self.headers['cookie'];\n\tif (!cookie)\n\t\treturn '';\n\n\tself.cookies = {};\n\n\tvar arr = cookie.split(';');\n\n\tfor (var i = 0, length = arr.length; i < length; i++) {\n\t\tvar line = arr[i].trim();\n\t\tvar index = line.indexOf('=');\n\t\tif (index !== -1)\n\t\t\tself.cookies[line.substring(0, index)] = line.substring(index + 1);\n\t}\n\n\treturn $decodeURIComponent(self.cookies[name] || '');\n};\n\n// Handle errors of decodeURIComponent\nfunction $decodeURIComponent(value) {\n\ttry\n\t{\n\t\treturn decodeURIComponent(value);\n\t} catch (e) {\n\t\treturn value;\n\t}\n};\n\nglobal.NEWOPERATION = function(name, fn) {\n\toperations[name] = fn;\n\toperations[name].$owner = F.$owner();\n};\n\nglobal.OPERATION = function(name, value, callback) {\n\n\tif (callback === undefined) {\n\t\tcallback = value;\n\t\tvalue = EMPTYOBJECT;\n\t}\n\n\tvar fn = operations[name];\n\tvar error = new ErrorBuilder();\n\tif (fn) {\n\t\tfn(error, value, function(value) {\n\t\t\tif (value instanceof Error) {\n\t\t\t\terror.push(value);\n\t\t\t\tvalue = EMPTYOBJECT;\n\t\t\t}\n\t\t\tcallback(error.hasError() ? error : null, value);\n\t\t});\n\t} else {\n\t\terror.push('Operation \"{0}\" not found.'.format(name));\n\t\tcallback(error, EMPTYOBJECT);\n\t}\n};\n\n// ======================================================\n// EXPORTS\n// ======================================================\n\nexports.SchemaBuilder = SchemaBuilder;\nexports.RESTBuilder = RESTBuilder;\nexports.ErrorBuilder = ErrorBuilder;\nexports.Pagination = Pagination;\nexports.Page = Page;\nexports.UrlBuilder = UrlBuilder;\nexports.TransformBuilder = TransformBuilder;\nglobal.RESTBuilder = RESTBuilder;\nglobal.ErrorBuilder = ErrorBuilder;\nglobal.TransformBuilder = TransformBuilder;\nglobal.Pagination = Pagination;\nglobal.Page = Page;\nglobal.UrlBuilder = global.URLBuilder = UrlBuilder;\nglobal.SchemaBuilder = SchemaBuilder;\n\n// Uninstall owners\nexports.uninstall = function(owner) {\n\n\tif (!owner)\n\t\treturn;\n\n\tObject.keys(operations).forEach(function(key) {\n\t\tif (operations[key].$owner === owner)\n\t\t\tdelete operations[key];\n\t});\n\n\texports.eachschema(function(group, name, schema) {\n\t\tschema.owner === owner && schema.destroy();\n\t});\n};\n\nexports.restart = function() {\n\tschemas = {};\n\toperations = {};\n\tObject.keys(transforms).forEach(function(key) {\n\t\tif (key.indexOf('_') === -1)\n\t\t\ttransforms[key] = {};\n\t});\n};\n","/home/travis/build/npmtest/node-npmtest-total.js/node_modules/total.js/utils.js":"// Copyright 2012-2017 (c) Peter Širka <petersirka@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/**\n * @module FrameworkUtils\n * @version 2.4.0\n */\n\n'use strict';\n\nconst Dns = require('dns');\nconst Url = require('url');\nconst Qs = require('querystring');\nconst Http = require('http');\nconst Https = require('https');\nconst Path = require('path');\nconst Fs = require('fs');\nconst Events = require('events');\nconst Crypto = require('crypto');\n\nif (!global.framework_utils)\n\tglobal.framework_utils = exports;\n\nvar regexpSTATIC = /\\.\\w{2,8}($|\\?)+/;\nconst regexpTRIM = /^[\\s]+|[\\s]+$/g;\nconst regexpDATE = /(\\d{1,2}\\.\\d{1,2}\\.\\d{4})|(\\d{4}\\-\\d{1,2}\\-\\d{1,2})|(\\d{1,2}\\:\\d{1,2}(\\:\\d{1,2})?)/g;\nconst regexpDATEFORMAT = /yyyy|yy|M+|d+|HH|H|hh|h|mm|m|ss|s|a|ww|w/g;\nconst regexpSTRINGFORMAT = /\\{\\d+\\}/g;\nconst regexpPATH = /\\\\/g;\nconst regexpTags = /<\\/?[^>]+(>|$)/g;\nconst regexpDiacritics = /[^\\u0000-\\u007e]/g;\nconst regexpXML = /\\w+\\=\\\".*?\\\"/g;\nconst regexpDECODE = /&#?[a-z0-9]+;/g;\nconst regexpPARAM = /\\{{2}[^}\\n]*\\}{2}/g;\nconst regexpINTEGER = /(^\\-|\\s-)?[0-9]+/g;\nconst regexpFLOAT = /(^\\-|\\s-)?[0-9\\.\\,]+/g;\nconst regexpALPHA = /^[A-Za-z0-9]+$/;\nconst regexpSEARCH = /[^a-zA-Zá-žÁ-Ž\\d\\s:]/g;\nconst regexpDECRYPT = /\\-|\\_/g;\nconst regexpENCRYPT = /\\/|\\+/g;\nconst regexpUNICODE = /\\\\u([\\d\\w]{4})/gi;\nconst regexpTERMINAL = /[\\w\\S]+/g;\nconst SOUNDEX = { a: '', e: '', i: '', o: '', u: '', b: 1, f: 1, p: 1, v: 1, c: 2, g: 2, j: 2, k: 2, q: 2, s: 2, x: 2, z: 2, d: 3, t: 3, l: 4, m: 5, n: 5, r: 6 };\nconst ENCODING = 'utf8';\nconst NEWLINE = '\\r\\n';\nconst isWindows = require('os').platform().substring(0, 3).toLowerCase() === 'win';\nconst MONTHS = ['January', 'February', 'March', 'April', 'May', 'Juny', 'July', 'August', 'September', 'October', 'November', 'December'];\nconst DAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nconst DIACRITICSMAP = {};\nconst STREAM_READONLY = { flags: 'r' };\nconst STREAM_END = { end: false };\nconst ALPHA_INDEX = { '&lt': '<', '&gt': '>', '&quot': '\"', '&apos': '\\'', '&amp': '&', '&lt;': '<', '&gt;': '>', '&quot;': '\"', '&apos;': '\\'', '&amp;': '&' };\nconst EMPTYARRAY = [];\nconst NODEVERSION = parseFloat(process.version.toString().replace('v', '').replace(/\\./g, ''));\n\nObject.freeze(EMPTYARRAY);\n\nvar DIACRITICS=[{b:' ',c:'\\u00a0'},{b:'0',c:'\\u07c0'},{b:'A',c:'\\u24b6\\uff21\\u00c0\\u00c1\\u00c2\\u1ea6\\u1ea4\\u1eaa\\u1ea8\\u00c3\\u0100\\u0102\\u1eb0\\u1eae\\u1eb4\\u1eb2\\u0226\\u01e0\\u00c4\\u01de\\u1ea2\\u00c5\\u01fa\\u01cd\\u0200\\u0202\\u1ea0\\u1eac\\u1eb6\\u1e00\\u0104\\u023a\\u2c6f'},{b:'AA',c:'\\ua732'},{b:'AE',c:'\\u00c6\\u01fc\\u01e2'},{b:'AO',c:'\\ua734'},{b:'AU',c:'\\ua736'},{b:'AV',c:'\\ua738\\ua73a'},{b:'AY',c:'\\ua73c'},{b:'B',c:'\\u24b7\\uff22\\u1e02\\u1e04\\u1e06\\u0243\\u0181'},{b:'C',c:'\\u24b8\\uff23\\ua73e\\u1e08\\u0106C\\u0108\\u010a\\u010c\\u00c7\\u0187\\u023b'},{b:'D',c:'\\u24b9\\uff24\\u1e0a\\u010e\\u1e0c\\u1e10\\u1e12\\u1e0e\\u0110\\u018a\\u0189\\u1d05\\ua779'},{b:'Dh',c:'\\u00d0'},{b:'DZ',c:'\\u01f1\\u01c4'},{b:'Dz',c:'\\u01f2\\u01c5'},{b:'E',c:'\\u025b\\u24ba\\uff25\\u00c8\\u00c9\\u00ca\\u1ec0\\u1ebe\\u1ec4\\u1ec2\\u1ebc\\u0112\\u1e14\\u1e16\\u0114\\u0116\\u00cb\\u1eba\\u011a\\u0204\\u0206\\u1eb8\\u1ec6\\u0228\\u1e1c\\u0118\\u1e18\\u1e1a\\u0190\\u018e\\u1d07'},{b:'F',c:'\\ua77c\\u24bb\\uff26\\u1e1e\\u0191\\ua77b'}, {b:'G',c:'\\u24bc\\uff27\\u01f4\\u011c\\u1e20\\u011e\\u0120\\u01e6\\u0122\\u01e4\\u0193\\ua7a0\\ua77d\\ua77e\\u0262'},{b:'H',c:'\\u24bd\\uff28\\u0124\\u1e22\\u1e26\\u021e\\u1e24\\u1e28\\u1e2a\\u0126\\u2c67\\u2c75\\ua78d'},{b:'I',c:'\\u24be\\uff29\\u00cc\\u00cd\\u00ce\\u0128\\u012a\\u012c\\u0130\\u00cf\\u1e2e\\u1ec8\\u01cf\\u0208\\u020a\\u1eca\\u012e\\u1e2c\\u0197'},{b:'J',c:'\\u24bf\\uff2a\\u0134\\u0248\\u0237'},{b:'K',c:'\\u24c0\\uff2b\\u1e30\\u01e8\\u1e32\\u0136\\u1e34\\u0198\\u2c69\\ua740\\ua742\\ua744\\ua7a2'},{b:'L',c:'\\u24c1\\uff2c\\u013f\\u0139\\u013d\\u1e36\\u1e38\\u013b\\u1e3c\\u1e3a\\u0141\\u023d\\u2c62\\u2c60\\ua748\\ua746\\ua780'}, {b:'LJ',c:'\\u01c7'},{b:'Lj',c:'\\u01c8'},{b:'M',c:'\\u24c2\\uff2d\\u1e3e\\u1e40\\u1e42\\u2c6e\\u019c\\u03fb'},{b:'N',c:'\\ua7a4\\u0220\\u24c3\\uff2e\\u01f8\\u0143\\u00d1\\u1e44\\u0147\\u1e46\\u0145\\u1e4a\\u1e48\\u019d\\ua790\\u1d0e'},{b:'NJ',c:'\\u01ca'},{b:'Nj',c:'\\u01cb'},{b:'O',c:'\\u24c4\\uff2f\\u00d2\\u00d3\\u00d4\\u1ed2\\u1ed0\\u1ed6\\u1ed4\\u00d5\\u1e4c\\u022c\\u1e4e\\u014c\\u1e50\\u1e52\\u014e\\u022e\\u0230\\u00d6\\u022a\\u1ece\\u0150\\u01d1\\u020c\\u020e\\u01a0\\u1edc\\u1eda\\u1ee0\\u1ede\\u1ee2\\u1ecc\\u1ed8\\u01ea\\u01ec\\u00d8\\u01fe\\u0186\\u019f\\ua74a\\ua74c'}, {b:'OE',c:'\\u0152'},{b:'OI',c:'\\u01a2'},{b:'OO',c:'\\ua74e'},{b:'OU',c:'\\u0222'},{b:'P',c:'\\u24c5\\uff30\\u1e54\\u1e56\\u01a4\\u2c63\\ua750\\ua752\\ua754'},{b:'Q',c:'\\u24c6\\uff31\\ua756\\ua758\\u024a'},{b:'R',c:'\\u24c7\\uff32\\u0154\\u1e58\\u0158\\u0210\\u0212\\u1e5a\\u1e5c\\u0156\\u1e5e\\u024c\\u2c64\\ua75a\\ua7a6\\ua782'},{b:'S',c:'\\u24c8\\uff33\\u1e9e\\u015a\\u1e64\\u015c\\u1e60\\u0160\\u1e66\\u1e62\\u1e68\\u0218\\u015e\\u2c7e\\ua7a8\\ua784'},{b:'T',c:'\\u24c9\\uff34\\u1e6a\\u0164\\u1e6c\\u021a\\u0162\\u1e70\\u1e6e\\u0166\\u01ac\\u01ae\\u023e\\ua786'}, {b:'Th',c:'\\u00de'},{b:'TZ',c:'\\ua728'},{b:'U',c:'\\u24ca\\uff35\\u00d9\\u00da\\u00db\\u0168\\u1e78\\u016a\\u1e7a\\u016c\\u00dc\\u01db\\u01d7\\u01d5\\u01d9\\u1ee6\\u016e\\u0170\\u01d3\\u0214\\u0216\\u01af\\u1eea\\u1ee8\\u1eee\\u1eec\\u1ef0\\u1ee4\\u1e72\\u0172\\u1e76\\u1e74\\u0244'},{b:'V',c:'\\u24cb\\uff36\\u1e7c\\u1e7e\\u01b2\\ua75e\\u0245'},{b:'VY',c:'\\ua760'},{b:'W',c:'\\u24cc\\uff37\\u1e80\\u1e82\\u0174\\u1e86\\u1e84\\u1e88\\u2c72'},{b:'X',c:'\\u24cd\\uff38\\u1e8a\\u1e8c'},{b:'Y',c:'\\u24ce\\uff39\\u1ef2\\u00dd\\u0176\\u1ef8\\u0232\\u1e8e\\u0178\\u1ef6\\u1ef4\\u01b3\\u024e\\u1efe'}, {b:'Z',c:'\\u24cf\\uff3a\\u0179\\u1e90\\u017b\\u017d\\u1e92\\u1e94\\u01b5\\u0224\\u2c7f\\u2c6b\\ua762'},{b:'a',c:'\\u24d0\\uff41\\u1e9a\\u00e0\\u00e1\\u00e2\\u1ea7\\u1ea5\\u1eab\\u1ea9\\u00e3\\u0101\\u0103\\u1eb1\\u1eaf\\u1eb5\\u1eb3\\u0227\\u01e1\\u00e4\\u01df\\u1ea3\\u00e5\\u01fb\\u01ce\\u0201\\u0203\\u1ea1\\u1ead\\u1eb7\\u1e01\\u0105\\u2c65\\u0250\\u0251'},{b:'aa',c:'\\ua733'},{b:'ae',c:'\\u00e6\\u01fd\\u01e3'},{b:'ao',c:'\\ua735'},{b:'au',c:'\\ua737'},{b:'av',c:'\\ua739\\ua73b'},{b:'ay',c:'\\ua73d'}, {b:'b',c:'\\u24d1\\uff42\\u1e03\\u1e05\\u1e07\\u0180\\u0183\\u0253\\u0182'},{b:'c',c:'\\uff43\\u24d2\\u0107\\u0109\\u010b\\u010d\\u00e7\\u1e09\\u0188\\u023c\\ua73f\\u2184'},{b:'d',c:'\\u24d3\\uff44\\u1e0b\\u010f\\u1e0d\\u1e11\\u1e13\\u1e0f\\u0111\\u018c\\u0256\\u0257\\u018b\\u13e7\\u0501\\ua7aa'},{b:'dh',c:'\\u00f0'},{b:'dz',c:'\\u01f3\\u01c6'},{b:'e',c:'\\u24d4\\uff45\\u00e8\\u00e9\\u00ea\\u1ec1\\u1ebf\\u1ec5\\u1ec3\\u1ebd\\u0113\\u1e15\\u1e17\\u0115\\u0117\\u00eb\\u1ebb\\u011b\\u0205\\u0207\\u1eb9\\u1ec7\\u0229\\u1e1d\\u0119\\u1e19\\u1e1b\\u0247\\u01dd'}, {b:'f',c:'\\u24d5\\uff46\\u1e1f\\u0192'},{b:'ff',c:'\\ufb00'},{b:'fi',c:'\\ufb01'},{b:'fl',c:'\\ufb02'},{b:'ffi',c:'\\ufb03'},{b:'ffl',c:'\\ufb04'},{b:'g',c:'\\u24d6\\uff47\\u01f5\\u011d\\u1e21\\u011f\\u0121\\u01e7\\u0123\\u01e5\\u0260\\ua7a1\\ua77f\\u1d79'},{b:'h',c:'\\u24d7\\uff48\\u0125\\u1e23\\u1e27\\u021f\\u1e25\\u1e29\\u1e2b\\u1e96\\u0127\\u2c68\\u2c76\\u0265'},{b:'hv',c:'\\u0195'},{b:'i',c:'\\u24d8\\uff49\\u00ec\\u00ed\\u00ee\\u0129\\u012b\\u012d\\u00ef\\u1e2f\\u1ec9\\u01d0\\u0209\\u020b\\u1ecb\\u012f\\u1e2d\\u0268\\u0131'}, {b:'j',c:'\\u24d9\\uff4a\\u0135\\u01f0\\u0249'},{b:'k',c:'\\u24da\\uff4b\\u1e31\\u01e9\\u1e33\\u0137\\u1e35\\u0199\\u2c6a\\ua741\\ua743\\ua745\\ua7a3'},{b:'l',c:'\\u24db\\uff4c\\u0140\\u013a\\u013e\\u1e37\\u1e39\\u013c\\u1e3d\\u1e3b\\u017f\\u0142\\u019a\\u026b\\u2c61\\ua749\\ua781\\ua747\\u026d'},{b:'lj',c:'\\u01c9'},{b:'m',c:'\\u24dc\\uff4d\\u1e3f\\u1e41\\u1e43\\u0271\\u026f'},{b:'n',c:'\\u24dd\\uff4e\\u01f9\\u0144\\u00f1\\u1e45\\u0148\\u1e47\\u0146\\u1e4b\\u1e49\\u019e\\u0272\\u0149\\ua791\\ua7a5\\u043b\\u0509'},{b:'nj', c:'\\u01cc'},{b:'o',c:'\\u24de\\uff4f\\u00f2\\u00f3\\u00f4\\u1ed3\\u1ed1\\u1ed7\\u1ed5\\u00f5\\u1e4d\\u022d\\u1e4f\\u014d\\u1e51\\u1e53\\u014f\\u022f\\u0231\\u00f6\\u022b\\u1ecf\\u0151\\u01d2\\u020d\\u020f\\u01a1\\u1edd\\u1edb\\u1ee1\\u1edf\\u1ee3\\u1ecd\\u1ed9\\u01eb\\u01ed\\u00f8\\u01ff\\ua74b\\ua74d\\u0275\\u0254\\u1d11'},{b:'oe',c:'\\u0153'},{b:'oi',c:'\\u01a3'},{b:'oo',c:'\\ua74f'},{b:'ou',c:'\\u0223'},{b:'p',c:'\\u24df\\uff50\\u1e55\\u1e57\\u01a5\\u1d7d\\ua751\\ua753\\ua755\\u03c1'},{b:'q',c:'\\u24e0\\uff51\\u024b\\ua757\\ua759'}, {b:'r',c:'\\u24e1\\uff52\\u0155\\u1e59\\u0159\\u0211\\u0213\\u1e5b\\u1e5d\\u0157\\u1e5f\\u024d\\u027d\\ua75b\\ua7a7\\ua783'},{b:'s',c:'\\u24e2\\uff53\\u015b\\u1e65\\u015d\\u1e61\\u0161\\u1e67\\u1e63\\u1e69\\u0219\\u015f\\u023f\\ua7a9\\ua785\\u1e9b\\u0282'},{b:'ss',c:'\\u00df'},{b:'t',c:'\\u24e3\\uff54\\u1e6b\\u1e97\\u0165\\u1e6d\\u021b\\u0163\\u1e71\\u1e6f\\u0167\\u01ad\\u0288\\u2c66\\ua787'},{b:'th',c:'\\u00fe'},{b:'tz',c:'\\ua729'},{b:'u',c:'\\u24e4\\uff55\\u00f9\\u00fa\\u00fb\\u0169\\u1e79\\u016b\\u1e7b\\u016d\\u00fc\\u01dc\\u01d8\\u01d6\\u01da\\u1ee7\\u016f\\u0171\\u01d4\\u0215\\u0217\\u01b0\\u1eeb\\u1ee9\\u1eef\\u1eed\\u1ef1\\u1ee5\\u1e73\\u0173\\u1e77\\u1e75\\u0289'}, {b:'v',c:'\\u24e5\\uff56\\u1e7d\\u1e7f\\u028b\\ua75f\\u028c'},{b:'vy',c:'\\ua761'},{b:'w',c:'\\u24e6\\uff57\\u1e81\\u1e83\\u0175\\u1e87\\u1e85\\u1e98\\u1e89\\u2c73'},{b:'x',c:'\\u24e7\\uff58\\u1e8b\\u1e8d'},{b:'y',c:'\\u24e8\\uff59\\u1ef3\\u00fd\\u0177\\u1ef9\\u0233\\u1e8f\\u00ff\\u1ef7\\u1e99\\u1ef5\\u01b4\\u024f\\u1eff'},{b:'z',c:'\\u24e9\\uff5a\\u017a\\u1e91\\u017c\\u017e\\u1e93\\u1e95\\u01b6\\u0225\\u0240\\u2c6c\\ua763'}];\n\nfor (var i=0; i <DIACRITICS.length; i+=1)\n\tfor (var chars=DIACRITICS[i].c,j=0;j<chars.length;j+=1)\n\t\tDIACRITICSMAP[chars[j]]=DIACRITICS[i].b;\n\nDIACRITICS = null;\n\nvar CONTENTTYPES = {\n\t'aac': 'audio/aac',\n\t'ai': 'application/postscript',\n\t'appcache': 'text/cache-manifest',\n\t'avi': 'video/avi',\n\t'bin': 'application/octet-stream',\n\t'bmp': 'image/bmp',\n\t'coffee': 'text/coffeescript',\n\t'css': 'text/css',\n\t'csv': 'text/csv',\n\t'doc': 'application/msword',\n\t'docx': 'application/msword',\n\t'dtd': 'application/xml-dtd',\n\t'eps': 'application/postscript',\n\t'exe': 'application/octet-stream',\n\t'flac': 'audio/x-flac',\n\t'geojson': 'application/json',\n\t'gif': 'image/gif',\n\t'gzip': 'application/x-gzip',\n\t'htm': 'text/html',\n\t'html': 'text/html',\n\t'ico': 'image/x-icon',\n\t'ics': 'text/calendar',\n\t'ifb': 'text/calendar',\n\t'jpe': 'image/jpeg',\n\t'jpeg': 'image/jpeg',\n\t'jpg': 'image/jpeg',\n\t'js': 'text/javascript',\n\t'json': 'application/json',\n\t'jsx': 'text/jsx',\n\t'less': 'text/css',\n\t'm4a': 'audio/mp4a-latm',\n\t'm4v': 'video/x-m4v',\n\t'manifest': 'text/cache-manifest',\n\t'md': 'text/x-markdown',\n\t'mid': 'audio/midi',\n\t'midi': 'audio/midi',\n\t'mov': 'video/quicktime',\n\t'mp3': 'audio/mpeg',\n\t'mp4': 'video/mp4',\n\t'mpe': 'video/mpeg',\n\t'mpeg': 'video/mpeg',\n\t'mpg': 'video/mpeg',\n\t'mpga': 'audio/mpeg',\n\t'mtl': 'text/plain',\n\t'mv4': 'video/mv4',\n\t'obj': 'text/plain',\n\t'ogg': 'application/ogg',\n\t'ogv': 'video/ogg',\n\t'package': 'text/plain',\n\t'pdf': 'application/pdf',\n\t'png': 'image/png',\n\t'ppt': 'application/vnd.ms-powerpoint',\n\t'pptx': 'application/vnd.ms-powerpoint',\n\t'ps': 'application/postscript',\n\t'rar': 'application/x-rar-compressed',\n\t'rtf': 'text/rtf',\n\t'sass': 'text/css',\n\t'scss': 'text/css',\n\t'sh': 'application/x-sh',\n\t'stl': 'application/sla',\n\t'svg': 'image/svg+xml',\n\t'swf': 'application/x-shockwave-flash',\n\t'tar': 'application/x-tar',\n\t'tif': 'image/tiff',\n\t'tiff': 'image/tiff',\n\t'txt': 'text/plain',\n\t'wav': 'audio/x-wav',\n\t'webm': 'video/webm',\n\t'webp': 'image/webp',\n\t'woff': 'application/font-woff',\n\t'woff2': 'application/font-woff2',\n\t'xht': 'application/xhtml+xml',\n\t'xhtml': 'application/xhtml+xml',\n\t'xls': 'application/vnd.ms-excel',\n\t'xlsx': 'application/vnd.ms-excel',\n\t'xml': 'application/xml',\n\t'xpm': 'image/x-xpixmap',\n\t'xsl': 'application/xml',\n\t'xslt': 'application/xslt+xml',\n\t'zip': 'application/zip'\n};\n\nvar dnscache = {};\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Checks if is object empty\n * @param {Object} obj\n * @return {Boolean}\n */\nexports.isEmpty = function(obj) {\n\n\tif (!obj)\n\t\treturn true;\n\n\tif (obj.length)\n\t\treturn false;\n\n\tfor (var key in obj) {\n\t\tif (hasOwnProperty.call(obj, key))\n\t\t\treturn false;\n\t}\n\n\treturn true;\n};\n\n/**\n * Compare objects\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n */\nexports.isEqual = function(obj1, obj2, properties) {\n\n\tvar keys = properties ? properties : Object.keys(obj1);\n\n\tfor (var i = 0, length = keys.length; i < length; i++) {\n\t\tvar key = keys[i];\n\t\tvar a = obj1[key];\n\t\tvar b = obj2[key];\n\t\tvar ta = typeof(a);\n\t\tvar tb = typeof(b);\n\n\t\tif (ta !== tb)\n\t\t\treturn false;\n\n\t\tif (a === b)\n\t\t\tcontinue;\n\n\t\tif (a instanceof Date && b instanceof Date) {\n\t\t\tif (a.getTime() === b.getTime())\n\t\t\t\tcontinue;\n\t\t\treturn false;\n\t\t} else if (a instanceof Array && b instanceof Array) {\n\t\t\tif (JSON.stringify(a) === JSON.stringify(b))\n\t\t\t\tcontinue;\n\t\t\treturn false;\n\t\t}\n\n\t\tif (ta === 'object' && tb === 'object') {\n\t\t\tif (exports.isEqual(a, b))\n\t\t\t\tcontinue;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n\n/**\n * Function checks a valid function and waits for it positive result\n * @param {Function} fnValid\n * @param {Function(err, success)} fnCallback\n * @param {Number} timeout  Timeout, optional (default: 5000)\n * @param {Number} interval Refresh interval, optional (default: 500)\n */\nexports.wait = function(fnValid, fnCallback, timeout, interval) {\n\n\tif (fnValid() === true)\n\t\treturn fnCallback(null, true);\n\n\tvar id_timeout = null;\n\tvar id_interval = setInterval(function() {\n\n\t\tif (fnValid() === true) {\n\t\t\tclearInterval(id_interval);\n\t\t\tclearTimeout(id_timeout);\n\t\t\tfnCallback && fnCallback(null, true);\n\t\t\treturn;\n\t\t}\n\n\t}, interval || 500);\n\n\tid_timeout = setTimeout(function() {\n\t\tclearInterval(id_interval);\n\t\tfnCallback && fnCallback(new Error('Timeout.'), false);\n\t}, timeout || 5000);\n};\n\nexports.$$wait = function(fnValid, timeout, interval) {\n\treturn function(callback) {\n\t\texports.wait(fnValid, callback, timeout, interval);\n\t};\n};\n\n/**\n * Resolves an IP from the URL address\n * @param {String} url\n * @param {Function(err, uri)} callback\n */\nexports.resolve = function(url, callback) {\n\n\tvar uri = Url.parse(url);\n\n\tif (!callback)\n\t\treturn dnscache[uri.host];\n\n\tif (dnscache[uri.host]) {\n\t\turi.host = dnscache[uri.host];\n\t\tcallback(null, uri);\n\t\treturn;\n\t}\n\n\tDns.resolve4(uri.hostname, function(e, addresses) {\n\n\t\tif (!e) {\n\t\t\tdnscache[uri.host] = addresses[0];\n\t\t\turi.host = addresses[0];\n\t\t\tcallback(null, uri);\n\t\t\treturn;\n\t\t}\n\n\t\tsetImmediate(function() {\n\t\t\tDns.resolve4(uri.hostname, function(e, addresses) {\n\t\t\t\tif (e)\n\t\t\t\t\treturn callback(e, uri);\n\t\t\t\tdnscache[uri.host] = addresses[0];\n\t\t\t\turi.host = addresses[0];\n\t\t\t\tcallback(null, uri);\n\t\t\t});\n\t\t});\n\t});\n};\n\nexports.$$resolve = function(url) {\n\treturn function(callback) {\n\t\treturn exports.resolve(url, callback);\n\t};\n};\n\n/**\n * Clears DNS cache\n */\nexports.clearDNS = function() {\n\tdnscache = {};\n};\n\nexports.keywords = function(content, forSearch, alternative, max_count, max_length, min_length) {\n\n\tif (forSearch === undefined)\n\t\tforSearch = true;\n\n\tmin_length = min_length || 2;\n\tmax_count = max_count || 200;\n\tmax_length = max_length || 20;\n\n\tvar words = [];\n\tvar isSoundex = alternative === 'soundex';\n\n\tif (content instanceof Array) {\n\t\tfor (var i = 0, length = content.length; i < length; i++) {\n\t\t\tif (!content[i])\n\t\t\t\tcontinue;\n\t\t\tvar tmp = (forSearch ? content[i].removeDiacritics().toLowerCase().replace(/y/g, 'i') : content[i].toLowerCase()).replace(/\\n/g, ' ').split(' ');\n\t\t\tif (!tmp || !tmp.length)\n\t\t\t\tcontinue;\n\t\t\tfor (var j = 0, jl = tmp.length; j < jl; j++)\n\t\t\t\twords.push(tmp[j]);\n\t\t}\n\t} else\n\t\twords = (forSearch ? content.removeDiacritics().toLowerCase().replace(/y/g, 'i') : content.toLowerCase()).replace(/\\n/g, ' ').split(' ');\n\n\tif (!words)\n\t\twords = [];\n\n\tvar dic = {};\n\tvar counter = 0;\n\n\tfor (var i = 0, length = words.length; i < length; i++) {\n\t\tvar word = words[i].trim();\n\n\t\tif (word.length < min_length)\n\t\t\tcontinue;\n\n\t\tif (counter >= max_count)\n\t\t\tbreak;\n\n\t\tif (forSearch)\n\t\t\tword = word.replace(/\\W|_/g, '');\n\n\t\t// Gets 80% length of word\n\t\tif (alternative) {\n\t\t\tif (isSoundex)\n\t\t\t\tword = word.soundex();\n\t\t\telse {\n\t\t\t\tvar size = (word.length / 100) * 80;\n\t\t\t\tif (size > min_length + 1)\n\t\t\t\t\tword = word.substring(0, size);\n\t\t\t}\n\t\t}\n\n\t\tif (word.length < min_length || word.length > max_length)\n\t\t\tcontinue;\n\n\t\tif (dic[word])\n\t\t\tdic[word]++;\n\t\telse\n\t\t\tdic[word] = 1;\n\n\t\tcounter++;\n\t}\n\n\tvar keys = Object.keys(dic);\n\n\tkeys.sort(function(a, b) {\n\t\tvar countA = dic[a];\n\t\tvar countB = dic[b];\n\t\treturn countA > countB ? -1 : countA < countB ? 1 : 0;\n\t});\n\n\treturn keys;\n};\n\n/**\n * Create a request to a specific URL\n * @param  {String} url URL address.\n * @param  {String Array} flags Request flags.\n * @param  {String or Object} data Request data (optional).\n * @param  {Function(error, content, statusCode, headers)} callback Callback.\n * @param  {Object} headers Custom cookies (optional, default: null).\n * @param  {Object} headers Custom headers (optional, default: null).\n * @param  {String} encoding Encoding (optional, default: UTF8)\n * @param  {Number} timeout Request timeout.\n * return {Boolean}\n */\nexports.request = function(url, flags, data, callback, cookies, headers, encoding, timeout) {\n\n\t// No data (data is optinal argument)\n\tif (typeof(data) === 'function') {\n\t\ttimeout = encoding;\n\t\tencoding = headers;\n\t\theaders = cookies;\n\t\tcookies = callback;\n\t\tcallback = data;\n\t\tdata = '';\n\t} else if (!data)\n\t\tdata = '';\n\n\tif (typeof(cookies) === 'number') {\n\t\tcookies = null;\n\t\ttimeout = cookies;\n\t}\n\n\tif (typeof(headers) === 'number') {\n\t\theaders = null;\n\t\ttimeout = headers;\n\t}\n\n\tif (typeof(encoding) === 'number') {\n\t\tencoding = null;\n\t\ttimeout = encoding;\n\t}\n\n\tif (callback === NOOP)\n\t\tcallback = null;\n\n\tvar options = { length: 0, timeout: 10000, evt: new Events.EventEmitter(), encoding: typeof(encoding) !== 'string' ? ENCODING : encoding, callback: callback, post: false, redirect: 0 };\n\tvar method;\n\tvar type = 0;\n\n\tif (headers)\n\t\theaders = exports.extend({}, headers);\n\telse\n\t\theaders = {};\n\n\tif (flags instanceof Array) {\n\t\tfor (var i = 0, length = flags.length; i < length; i++) {\n\n\t\t\t// timeout\n\t\t\tif (flags[i] > 0) {\n\t\t\t\toptions.timeout = flags[i];\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (flags[i][0] === '<') {\n\t\t\t\toptions.max = flags[i].substring(1).trim().parseInt() * 1024; // kB\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tswitch (flags[i].toLowerCase()) {\n\t\t\t\tcase 'utf8':\n\t\t\t\tcase 'ascii':\n\t\t\t\tcase 'base64':\n\t\t\t\tcase 'binary':\n\t\t\t\tcase 'hex':\n\t\t\t\t\toptions.encoding = flags[i];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'xhr':\n\t\t\t\t\theaders['X-Requested-With'] = 'XMLHttpRequest';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'plain':\n\t\t\t\t\theaders['Content-Type'] = 'text/plain';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'html':\n\t\t\t\t\theaders['Content-Type'] = 'text/html';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'json':\n\t\t\t\t\theaders['Content-Type'] = 'application/json';\n\n\t\t\t\t\tif (!method)\n\t\t\t\t\t\tmethod = 'POST';\n\n\t\t\t\t\ttype = 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'xml':\n\t\t\t\t\theaders['Content-Type'] = 'text/xml';\n\n\t\t\t\t\tif (!method)\n\t\t\t\t\t\tmethod = 'POST';\n\n\t\t\t\t\ttype = 2;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'get':\n\t\t\t\tcase 'options':\n\t\t\t\tcase 'head':\n\t\t\t\t\tmethod = flags[i].toUpperCase();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'upload':\n\t\t\t\t\theaders['Content-Type'] = 'multipart/form-data';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'post':\n\t\t\t\tcase 'put':\n\t\t\t\tcase 'delete':\n\t\t\t\tcase 'patch':\n\n\t\t\t\t\tmethod = flags[i].toUpperCase();\n\t\t\t\t\tif (!headers['Content-Type'])\n\t\t\t\t\t\theaders['Content-Type'] = 'application/x-www-form-urlencoded';\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'dnscache':\n\t\t\t\t\toptions.resolve = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (method)\n\t\toptions.post = method === 'POST' || method === 'PUT' || method === 'DELETE' || method === 'PATCH';\n\telse\n\t\tmethod = 'GET';\n\n\tif (typeof(data) !== 'string')\n\t\tdata = type === 1 ? JSON.stringify(data) : Qs.stringify(data);\n\telse if (data[0] === '?')\n\t\tdata = data.substring(1);\n\n\tif (!options.post) {\n\t\tif (data.length && url.indexOf('?') === -1)\n\t\t\turl += '?' + data;\n\t\tdata = '';\n\t}\n\n\tif (cookies) {\n\t\tvar builder = '';\n\t\tfor (var m in cookies)\n\t\t\tbuilder += (builder ? '; ' : '') + m + '=' + cookies[m];\n\t\tif (builder)\n\t\t\theaders['Cookie'] = builder;\n\t}\n\n\tif (data.length) {\n\t\toptions.data = exports.createBuffer(data, ENCODING);\n\t\theaders['Content-Length'] = options.data.length;\n\t}\n\n\tvar uri = Url.parse(url);\n\turi.method = method;\n\turi.agent = false;\n\turi.headers = headers;\n\n\tif (options.resolve) {\n\t\texports.resolve(url, function(err, u) {\n\t\t\tif (!err)\n\t\t\t\turi.host = u.host;\n\t\t\trequest_call(uri, options);\n\t\t});\n\t} else\n\t\trequest_call(uri, options);\n\n\treturn options.evt;\n};\n\nfunction request_call(uri, options, counter) {\n\n\tvar connection = uri.protocol === 'https:' ? Https : Http;\n\tvar req = options.post ? connection.request(uri, (res) => request_response(res, uri, options)) : connection.get(uri, (res) => request_response(res, uri, options));\n\n\tif (!options.callback) {\n\t\treq.on('error', NOOP);\n\t\treturn;\n\t}\n\n\treq.on('error', function(err) {\n\t\tif (!options.callback)\n\t\t\treturn;\n\t\toptions.callback(err, '', 0, undefined, uri.host);\n\t\toptions.callback = null;\n\t\toptions.evt.removeAllListeners();\n\t\toptions.evt = null;\n\t});\n\n\treq.setTimeout(options.timeout, function() {\n\t\tif (!options.callback)\n\t\t\treturn;\n\t\toptions.callback(new Error(exports.httpStatus(408)), '', 0, undefined, uri.host);\n\t\toptions.callback = null;\n\t\toptions.evt.removeAllListeners();\n\t\toptions.evt = null;\n\t});\n\n\treq.on('response', (response) => response.req = req);\n\treq.end(options.data);\n}\n\nfunction request_response(res, uri, options) {\n\n\tres._buffer = null;\n\tres._bufferlength = 0;\n\n\t// We have redirect\n\tif (res.statusCode === 301 || res.statusCode === 302) {\n\n\t\tif (options.redirect > 3) {\n\n\t\t\tif (options.callback) {\n\t\t\t\toptions.callback(new Error('Too many redirects.'), '', 0, undefined, uri.host);\n\t\t\t\toptions.callback = null;\n\t\t\t}\n\n\t\t\tif (options.evt) {\n\t\t\t\toptions.evt.removeAllListeners();\n\t\t\t\toptions.evt = null;\n\t\t\t}\n\n\t\t\tres.req.removeAllListeners();\n\t\t\tres.req = null;\n\t\t\tres.removeAllListeners();\n\t\t\tres = null;\n\t\t\treturn;\n\t\t}\n\n\t\toptions.redirect++;\n\n\t\tvar tmp = Url.parse(res.headers['location']);\n\t\ttmp.headers = uri.headers;\n\t\ttmp.agent = false;\n\t\ttmp.method = uri.method;\n\n\t\tres.req.removeAllListeners();\n\t\tres.req = null;\n\n\t\tif (!options.resolve) {\n\t\t\tres.removeAllListeners();\n\t\t\tres = null;\n\t\t\treturn request_call(tmp, options);\n\t\t}\n\n\t\texports.resolve(res.headers['location'], function(err, u) {\n\t\t\tif (!err)\n\t\t\t\ttmp.host = u.host;\n\t\t\tres.removeAllListeners();\n\t\t\tres = null;\n\t\t\trequest_call(tmp, options);\n\t\t});\n\n\t\treturn;\n\t}\n\n\toptions.length = +res.headers['content-length'] || 0;\n\toptions.evt && options.evt.emit('begin', options.length);\n\n\tres.on('data', function(chunk) {\n\t\tvar self = this;\n\t\tif (options.max && self._bufferlength > options.max)\n\t\t\treturn;\n\t\tif (self._buffer)\n\t\t\tself._buffer = Buffer.concat([self._buffer, chunk]);\n\t\telse\n\t\t\tself._buffer = chunk;\n\t\tself._bufferlength += chunk.length;\n\t\toptions.evt && options.evt.emit('data', chunk, options.length ? (self._bufferlength / options.length) * 100 : 0);\n\t});\n\n\tres.on('end', function() {\n\t\tvar self = this;\n\t\tvar str = self._buffer ? self._buffer.toString(options.encoding) : '';\n\t\tself._buffer = undefined;\n\n\t\tif (options.evt) {\n\t\t\toptions.evt.emit('end', str, self.statusCode, self.headers, uri.host);\n\t\t\toptions.evt.removeAllListeners();\n\t\t\toptions.evt = null;\n\t\t}\n\n\t\tif (options.callback) {\n\t\t\toptions.callback(null, uri.method === 'HEAD' ? self.headers : str, self.statusCode, self.headers, uri.host);\n\t\t\toptions.callback = null;\n\t\t}\n\n\t\tres.req && res.req.removeAllListeners();\n\t\tres.removeAllListeners();\n\t});\n\n\tres.resume();\n}\n\nexports.$$request = function(url, flags, data, cookies, headers, encoding, timeout) {\n\treturn function(callback) {\n\t\texports.request(url, flags, data, callback, cookies, headers, encoding, timeout);\n\t};\n};\n\nexports.btoa = function(str) {\n\treturn (str instanceof Buffer) ? str.toString('base64') : exports.createBuffer(str.toString(), 'binary').toString('base64');\n};\n\nexports.atob = function(str) {\n\treturn exports.createBuffer(str, 'base64').toString('binary');\n};\n\n/**\n * Create a request to a specific URL\n * @param {String} url URL address.\n * @param {String Array} flags Request flags.\n * @param {String or Object} data Request data (optional).\n * @param {Function(error, response)} callback Callback.\n * @param {Object} cookies Custom cookies (optional, default: null).\n * @param {Object} headers Custom headers (optional, default: null).\n * @param {String} encoding Encoding (optional, default: UTF8)\n * @param {Number} timeout Request timeout.\n * return {Boolean}\n */\nexports.download = function(url, flags, data, callback, cookies, headers, encoding, timeout) {\n\n\t// No data (data is optinal argument)\n\tif (typeof(data) === 'function') {\n\t\ttimeout = encoding;\n\t\tencoding = headers;\n\t\theaders = cookies;\n\t\tcookies = callback;\n\t\tcallback = data;\n\t\tdata = '';\n\t}\n\n\tif (typeof(cookies) === 'number') {\n\t\tcookies = null;\n\t\ttimeout = cookies;\n\t}\n\n\tif (typeof(headers) === 'number') {\n\t\theaders = null;\n\t\ttimeout = headers;\n\t}\n\n\tif (typeof(encoding) === 'number') {\n\t\tencoding = null;\n\t\ttimeout = encoding;\n\t}\n\n\tif (typeof(encoding) !== 'string')\n\t\tencoding = ENCODING;\n\n\tvar method = 'GET';\n\tvar type = 0;\n\tvar options = { callback: callback, resolve: false, length: 0, evt: new Events.EventEmitter(), timeout: timeout || 60000, post: false, encoding: encoding };\n\n\tif (headers)\n\t\theaders = exports.extend({}, headers);\n\telse\n\t\theaders = {};\n\n\tif (data === null)\n\t\tdata = '';\n\n\tif (flags instanceof Array) {\n\t\tfor (var i = 0, length = flags.length; i < length; i++) {\n\n\t\t\t// timeout\n\t\t\tif (flags[i] > 0) {\n\t\t\t\toptions.timeout = flags[i];\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (flags[i][0] === '<') {\n\t\t\t\t// max length is not supported\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tswitch (flags[i].toLowerCase()) {\n\n\t\t\t\tcase 'utf8':\n\t\t\t\tcase 'ascii':\n\t\t\t\tcase 'base64':\n\t\t\t\tcase 'binary':\n\t\t\t\tcase 'hex':\n\t\t\t\t\toptions.encoding = flags[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'xhr':\n\t\t\t\t\theaders['X-Requested-With'] = 'XMLHttpRequest';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'plain':\n\t\t\t\t\theaders['Content-Type'] = 'text/plain';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'html':\n\t\t\t\t\theaders['Content-Type'] = 'text/html';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'json':\n\t\t\t\t\theaders['Content-Type'] = 'application/json';\n\t\t\t\t\ttype = 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'xml':\n\t\t\t\t\theaders['Content-Type'] = 'text/xml';\n\t\t\t\t\ttype = 2;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'get':\n\t\t\t\tcase 'head':\n\t\t\t\tcase 'options':\n\t\t\t\t\tmethod = flags[i].toUpperCase();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'upload':\n\t\t\t\t\theaders['Content-Type'] = 'multipart/form-data';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'post':\n\t\t\t\tcase 'patch':\n\t\t\t\tcase 'delete':\n\t\t\t\tcase 'put':\n\t\t\t\t\tmethod = flags[i].toUpperCase();\n\t\t\t\t\tif (!headers['Content-Type'])\n\t\t\t\t\t\theaders['Content-Type'] = 'application/x-www-form-urlencoded';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'dnscache':\n\t\t\t\t\toptions.resolve = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\t\t}\n\t}\n\n\toptions.post = method === 'POST' || method === 'PUT' || method === 'DELETE' || method === 'PATCH';\n\n\tif (typeof(data) !== 'string')\n\t\tdata = type === 1 ? JSON.stringify(data) : Qs.stringify(data);\n\telse if (data[0] === '?')\n\t\tdata = data.substring(1);\n\n\tif (!options.post) {\n\t\tif (data.length && url.indexOf('?') === -1)\n\t\t\turl += '?' + data;\n\t\tdata = '';\n\t}\n\n\tif (cookies) {\n\t\tvar builder = '';\n\t\tfor (var m in cookies)\n\t\t\tbuilder += (builder ? '; ' : '') + m + '=' + cookies[m];\n\t\tif (builder)\n\t\t\theaders['Cookie'] = builder;\n\t}\n\n\tvar uri = Url.parse(url);\n\turi.method = method;\n\turi.agent = false;\n\turi.headers = headers;\n\n\tif (data.length) {\n\t\toptions.data = exports.createBuffer(data, ENCODING);\n\t\theaders['Content-Length'] = options.data.length;\n\t}\n\n\tif (options.resolve) {\n\t\texports.resolve(url, function(err, u) {\n\t\t\tif (!err)\n\t\t\t\turi.host = u.host;\n\t\t\tdownload_call(uri, options);\n\t\t});\n\t} else\n\t\tdownload_call(uri, options);\n\n\treturn options.evt;\n};\n\nfunction download_call(uri, options) {\n\n\toptions.length = 0;\n\n\tvar connection = uri.protocol === 'https:' ? Https : Http;\n\tvar req = options.post ? connection.request(uri, (res) => download_response(res, uri, options)) : connection.get(uri, (res) => download_response(res, uri, options));\n\n\tif (!options.callback) {\n\t\treq.on('error', NOOP);\n\t\treturn;\n\t}\n\n\treq.on('error', function(err) {\n\t\tif (!options.callback)\n\t\t\treturn;\n\t\toptions.callback(err);\n\t\toptions.callback = null;\n\t\toptions.evt.removeAllListeners();\n\t\toptions.evt = null;\n\t});\n\n\treq.setTimeout(options.timeout, function() {\n\t\tif (!options.callback)\n\t\t\treturn;\n\t\toptions.callback(new Error(exports.httpStatus(408)));\n\t\toptions.callback = null;\n\t\toptions.evt.removeAllListeners();\n\t\toptions.evt = null;\n\t});\n\n\treq.on('response', function(response) {\n\t\tresponse.req = req;\n\t\toptions.length = +response.headers['content-length'] || 0;\n\t\toptions.evt && options.evt.emit('begin', options.length);\n\t});\n\n\treq.end(options.data);\n}\n\nfunction download_response(res, uri, options) {\n\n\tres._bufferlength = 0;\n\n\t// We have redirect\n\tif (res.statusCode === 301 || res.statusCode === 302) {\n\n\t\tif (options.redirect > 3) {\n\t\t\toptions.callback && options.callback(new Error('Too many redirects.'));\n\t\t\tres.req.removeAllListeners();\n\t\t\tres.req = null;\n\t\t\tres.removeAllListeners();\n\t\t\tres = null;\n\t\t\treturn;\n\t\t}\n\n\t\toptions.redirect++;\n\n\t\tvar tmp = Url.parse(res.headers['location']);\n\t\ttmp.headers = uri.headers;\n\t\ttmp.agent = false;\n\t\ttmp.method = uri.method;\n\t\tres.req.removeAllListeners();\n\t\tres.req = null;\n\n\t\tif (!options.resolve) {\n\t\t\tres.removeAllListeners();\n\t\t\tres = null;\n\t\t\treturn download_call(tmp, options);\n\t\t}\n\n\t\texports.resolve(res.headers['location'], function(err, u) {\n\t\t\tif (!err)\n\t\t\t\ttmp.host = u.host;\n\t\t\tres.removeAllListeners();\n\t\t\tres = null;\n\t\t\tdownload_call(tmp, options);\n\t\t});\n\n\t\treturn;\n\t}\n\n\tres.on('data', function(chunk) {\n\t\tvar self = this;\n\t\tself._bufferlength += chunk.length;\n\t\toptions.evt && options.evt.emit('data', chunk, options.length ? (self._bufferlength / options.length) * 100 : 0);\n\t});\n\n\tres.on('end', function() {\n\t\tvar self = this;\n\t\tvar str = self._buffer ? self._buffer.toString(options.encoding) : '';\n\n\t\tself._buffer = undefined;\n\n\t\tif (options.evt) {\n\t\t\toptions.evt.emit('end', str, self.statusCode, self.headers, uri.host);\n\t\t\toptions.evt.removeAllListeners();\n\t\t\toptions.evt = null;\n\t\t}\n\n\t\tres.req && res.req.removeAllListeners();\n\t\tres.removeAllListeners();\n\t});\n\n\tres.resume();\n\toptions.callback && options.callback(null, res, res.statusCode, res.headers, uri.host);\n}\n\nexports.$$download = function(url, flags, data, cookies, headers, encoding, timeout) {\n\treturn function(callback) {\n\t\texports.download(url, flags, data, callback, cookies, headers, encoding, timeout);\n\t};\n};\n\n/**\n * Send a stream through HTTP\n * @param {String} name Filename with extension.\n * @param {Stream} stream Stream.\n * @param {String} url A valid URL address.\n * @param {Function} callback Callback.\n * @param {Object} headers Custom headers (optional).\n * @param {String} method HTTP method (optional, default POST).\n * @param {Number} timeout Request timeout, default: 60000 (1 minute)\n */\nexports.send = function(name, stream, url, callback, cookies, headers, method, timeout) {\n\n\tif (typeof(stream) === 'string')\n\t\tstream = Fs.createReadStream(stream, STREAM_READONLY);\n\n\tvar BOUNDARY = '----totaljs' + Math.random().toString(16).substring(2);\n\tvar h = {};\n\n\tif (headers)\n\t\texports.extend(h, headers);\n\n\tif (cookies) {\n\t\tvar builder = '';\n\t\tfor (var m in cookies)\n\t\t\tbuilder += (builder ? '; ' : '') + m + '=' + cookies[m];\n\t\tif (builder)\n\t\t\th['Cookie'] = builder;\n\t}\n\n\tname = exports.getName(name);\n\n\th['Cache-Control'] = 'max-age=0';\n\th['Content-Type'] = 'multipart/form-data; boundary=' + BOUNDARY;\n\n\tvar e = new Events.EventEmitter();\n\tvar uri = Url.parse(url);\n\tvar options = { protocol: uri.protocol, auth: uri.auth, method: method || 'POST', hostname: uri.hostname, port: uri.port, path: uri.path, agent: false, headers: h };\n\tvar responseLength = 0;\n\n\tvar response = function(res) {\n\n\t\tres.body = exports.createBufferSize();\n\t\tres._bufferlength = 0;\n\n\t\tres.on('data', function(chunk) {\n\t\t\tres.body = Buffer.concat([res.body, chunk]);\n\t\t\tres._bufferlength += chunk.length;\n\t\t\te.emit('data', chunk, responseLength ? (res._bufferlength / responseLength) * 100 : 0);\n\t\t});\n\n\t\tres.on('end', function() {\n\t\t\tvar self = this;\n\t\t\te.emit('end', self.statusCode, self.headers);\n\t\t\te.removeAllListeners();\n\t\t\te = null;\n\t\t\tcallback && callback(null, self.body.toString('utf8'), self.statusCode, self.headers, uri.host);\n\t\t\tself.body = null;\n\t\t});\n\t};\n\n\tvar connection = options.protocol === 'https:' ? Https : Http;\n\tvar req = connection.request(options, response);\n\n\treq.on('response', function(response) {\n\t\tresponseLength = +response.headers['content-length'] || 0;\n\t\te.emit('begin', responseLength);\n\t});\n\n\treq.setTimeout(timeout || 60000, function() {\n\t\treq.removeAllListeners();\n\t\treq = null;\n\t\te.removeAllListeners();\n\t\te = null;\n\t\tcallback && callback(new Error(exports.httpStatus(408)), '', 408, undefined, uri.host);\n\t});\n\n\treq.on('error', function(err) {\n\t\treq.removeAllListeners();\n\t\treq = null;\n\t\te.removeAllListeners();\n\t\te = null;\n\t\tcallback && callback(err, '', 0, undefined, uri.host);\n\t});\n\n\treq.on('close', function() {\n\t\treq.removeAllListeners();\n\t\treq = null;\n\t});\n\n\tvar header = NEWLINE + NEWLINE + '--' + BOUNDARY + NEWLINE + 'Content-Disposition: form-data; name=\"File\"; filename=\"' + name + '\"' + NEWLINE + 'Content-Type: ' + exports.getContentType(exports.getExtension(name)) + NEWLINE + NEWLINE;\n\treq.write(header);\n\n\t// Is Buffer\n\tif (stream.length) {\n\t\treq.end(stream.toString(ENCODING) + NEWLINE + NEWLINE + '--' + BOUNDARY + '--');\n\t\treturn e;\n\t}\n\n\tstream.on('end', () => req.end(NEWLINE + NEWLINE + '--' + BOUNDARY + '--'));\n\tstream.pipe(req, STREAM_END);\n\treturn e;\n};\n\nexports.$$send = function(name, stream, url, cookies, headers, method, timeout) {\n\treturn function(callback) {\n\t\texports.send(name, stream, url, callback, cookies, headers, method, timeout);\n\t};\n};\n\n/**\n * Trim string properties\n * @param {Object} obj\n * @return {Object}\n */\nexports.trim = function(obj, clean) {\n\n\tif (!obj)\n\t\treturn obj;\n\n\tvar type = typeof(obj);\n\tif (type === 'string') {\n\t\tobj = obj.trim();\n\t\treturn clean && !obj ? undefined : obj;\n\t}\n\n\tif (obj instanceof Array) {\n\t\tfor (var i = 0, length = obj.length; i < length; i++) {\n\n\t\t\tvar item = obj[i];\n\t\t\ttype = typeof(item);\n\n\t\t\tif (type === 'object') {\n\t\t\t\texports.trim(item, clean);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (type !== 'string')\n\t\t\t\tcontinue;\n\n\t\t\tobj[i] = item.trim();\n\t\t\tif (clean && !obj[i])\n\t\t\t\tobj[i] = undefined;\n\t\t}\n\n\t\treturn obj;\n\t}\n\n\tif (type !== 'object')\n\t\treturn obj;\n\n\tvar keys = Object.keys(obj);\n\tfor (var i = 0, length = keys.length; i < length; i++) {\n\t\tvar val = obj[keys[i]];\n\t\tvar type = typeof(val);\n\t\tif (type === 'object') {\n\t\t\texports.trim(val, clean);\n\t\t\tcontinue;\n\t\t} else if (type !== 'string')\n\t\t\tcontinue;\n\t\tobj[keys[i]] = val.trim();\n\t\tif (clean && !obj[keys[i]])\n\t\t\tobj[keys[i]] = undefined;\n\t}\n\n\treturn obj;\n};\n\n/**\n * Noop function\n * @return {Function} Empty function.\n */\nexports.noop = global.noop = global.NOOP = function() {};\n\n/**\n * Read HTTP status\n * @param  {Number} code HTTP code status.\n * @param  {Boolean} addCode Add code number to HTTP status.\n * @return {String}\n */\nexports.httpStatus = function(code, addCode) {\n\tif (addCode === undefined)\n\t\taddCode = true;\n\treturn (addCode ? code + ': ' : '') + Http.STATUS_CODES[code];\n};\n\n/**\n * Extend object\n * @param {Object} target Target object.\n * @param {Object} source Source object.\n * @param {Boolean} rewrite Rewrite exists values (optional, default true).\n * @return {Object} Modified object.\n */\nexports.extend = function(target, source, rewrite) {\n\n\tif (!target || !source)\n\t\treturn target;\n\n\tif (typeof(target) !== 'object' || typeof(source) !== 'object')\n\t\treturn target;\n\n\tif (rewrite === undefined)\n\t\trewrite = true;\n\n\tvar keys = Object.keys(source);\n\tvar i = keys.length;\n\n\twhile (i--) {\n\t\tvar key = keys[i];\n\t\tif (rewrite || target[key] === undefined)\n\t\t\ttarget[key] = exports.clone(source[key]);\n\t}\n\n\treturn target;\n};\n\nexports.extend_headers = function(first, second) {\n\tvar keys = Object.keys(first);\n\tvar headers = {};\n\n\tvar i = keys.length;\n\twhile (i--)\n\t\theaders[keys[i]] = first[keys[i]];\n\n\tkeys = Object.keys(second);\n\ti = keys.length;\n\n\twhile (i--)\n\t\theaders[keys[i]] = second[keys[i]];\n\n\treturn headers;\n};\n\nexports.extend_headers2 = function(first, second) {\n\tvar keys = Object.keys(second);\n\tvar i = keys.length;\n\twhile (i--)\n\t\tfirst[keys[i]] = second[keys[i]];\n\treturn first;\n};\n\n/**\n * Clones object\n * @param {Object} obj\n * @param {Object} skip Optional, can be only object e.g. { name: true, age: true }.\n * @param {Boolean} skipFunctions It doesn't clone functions, optional --> default false.\n * @return {Object}\n */\nexports.clone = function(obj, skip, skipFunctions) {\n\n\tif (!obj)\n\t\treturn obj;\n\n\tvar type = typeof(obj);\n\tif (type !== 'object' || obj instanceof Date)\n\t\treturn obj;\n\n\tvar length;\n\tvar o;\n\n\tif (obj instanceof Array) {\n\n\t\tlength = obj.length;\n\t\to = new Array(length);\n\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\ttype = typeof(obj[i]);\n\t\t\tif (type !== 'object' || obj[i] instanceof Date) {\n\t\t\t\tif (skipFunctions && type === 'function')\n\t\t\t\t\tcontinue;\n\t\t\t\to[i] = obj[i];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\to[i] = exports.clone(obj[i], skip, skipFunctions);\n\t\t}\n\n\t\treturn o;\n\t}\n\n\to = {};\n\n\tfor (var m in obj) {\n\n\t\tif (skip && skip[m])\n\t\t\tcontinue;\n\n\t\tvar val = obj[m];\n\t\tvar type = typeof(val);\n\t\tif (type !== 'object' || val instanceof Date) {\n\t\t\tif (skipFunctions && type === 'function')\n\t\t\t\tcontinue;\n\t\t\to[m] = val;\n\t\t\tcontinue;\n\t\t}\n\n\t\to[m] = exports.clone(obj[m], skip, skipFunctions);\n\t}\n\n\treturn o;\n};\n\n/**\n * Copy values from object to object\n * @param {Object} source Object source\n * @param {Object} target Object target (optional)\n * @return {Object} Modified object.\n */\nexports.copy = function(source, target) {\n\n\tif (target === undefined)\n\t\treturn exports.extend({}, source, true);\n\n\tif (!target || !source || typeof(target) !== 'object' || typeof(source) !== 'object')\n\t\treturn target;\n\n\tvar keys = Object.keys(source);\n\tvar i = keys.length;\n\n\twhile (i--) {\n\t\tvar key = keys[i];\n\t\tif (target[key] !== undefined)\n\t\t\ttarget[key] = exports.clone(source[key]);\n\t}\n\n\treturn target;\n};\n\n/**\n * Reduce an object\n * @param {Object} source Source object.\n * @param {String Array or Object} prop Other properties than these ones will be removed.\n * @param {Boolean} reverse Reverse reducing (prop will be removed), default: false.\n * @return {Object}\n */\nexports.reduce = function(source, prop, reverse) {\n\n\tif (!(prop instanceof Array)) {\n\t\tif (typeof(prop) === 'object')\n\t\t\treturn exports.reduce(source, Object.keys(prop), reverse);\n\t}\n\n\tif (source instanceof Array) {\n\t\tvar arr = [];\n\t\tfor (var i = 0, length = source.length; i < length; i++)\n\t\t\tarr.push(exports.reduce(source[i], prop, reverse));\n\t\treturn arr;\n\t}\n\n\tvar output = {};\n\n\tObject.keys(source).forEach(function(o) {\n\t\tif (reverse) {\n\t\t\tif (prop.indexOf(o) === -1)\n\t\t\t\toutput[o] = source[o];\n\t\t} else {\n\t\t\tif (prop.indexOf(o) !== -1)\n\t\t\t\toutput[o] = source[o];\n\t\t}\n\t});\n\n\treturn output;\n};\n\n/**\n * Assign value to an object according to a path\n * @param {Object} obj Source object.\n * @param {String} path Path to the update.\n * @param {Object or Function} fn Value or Function to update.\n * @return {Object}\n */\nexports.assign = function(obj, path, fn) {\n\n\tif (obj == null)\n\t\treturn obj;\n\n\tvar arr = path.split('.');\n\tvar model = obj[arr[0]];\n\n\tfor (var i = 1; i < arr.length - 1; i++)\n\t\tmodel = model[arr[i]];\n\n\tmodel[arr[arr.length - 1]] = typeof (fn) === 'function' ? fn(model[arr[arr.length - 1]]) : fn;\n\treturn obj;\n};\n\n/**\n * Checks if is relative url\n * @param {String} url\n * @return {Boolean}\n */\nexports.isRelative = function(url) {\n\treturn !(url.substring(0, 2) === '//' || url.indexOf('http://') !== -1 || url.indexOf('https://') !== -1);\n};\n\n/**\n * Streamer method\n * @param {String} beg\n * @param {String} end\n * @param {Function(value, index)} callback\n */\nexports.streamer = function(beg, end, callback, skip) {\n\n\tif (typeof(end) === 'function') {\n\t\tskip = callback;\n\t\tcallback = end;\n\t\tend = undefined;\n\t}\n\n\tvar indexer = 0;\n\tvar buffer = exports.createBufferSize();\n\n\tif (skip === undefined)\n\t\tskip = 0;\n\n\tbeg = exports.createBuffer(beg, 'utf8');\n\tif (end)\n\t\tend = exports.createBuffer(end, 'utf8');\n\n\tif (!end) {\n\t\tvar length = beg.length;\n\t\treturn function(chunk) {\n\n\t\t\tif (!chunk)\n\t\t\t\treturn;\n\n\t\t\tbuffer = Buffer.concat([buffer, chunk]);\n\n\t\t\tvar index = buffer.indexOf(beg);\n\t\t\tif (index === -1)\n\t\t\t\treturn;\n\n\t\t\twhile (index !== -1) {\n\n\t\t\t\tif (skip)\n\t\t\t\t\tskip--;\n\t\t\t\telse\n\t\t\t\t\tcallback(buffer.toString('utf8', 0, index + length), indexer++);\n\n\t\t\t\tbuffer = buffer.slice(index + length);\n\t\t\t\tindex = buffer.indexOf(beg);\n\t\t\t\tif (index === -1)\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t};\n\t}\n\n\tvar blength = beg.length;\n\tvar elength = end.length;\n\tvar bi = -1;\n\tvar ei = -1;\n\tvar is = false;\n\n\treturn function(chunk) {\n\n\t\tif (!chunk)\n\t\t\treturn;\n\n\t\tbuffer = Buffer.concat([buffer, chunk]);\n\n\t\tif (!is) {\n\t\t\tbi = buffer.indexOf(beg);\n\t\t\tif (bi === -1)\n\t\t\t\treturn;\n\t\t\tis = true;\n\t\t}\n\n\t\tif (is) {\n\t\t\tei = buffer.indexOf(end, bi + blength);\n\t\t\tif (ei === -1)\n\t\t\t\treturn;\n\t\t}\n\n\t\twhile (bi !== -1) {\n\n\t\t\tif (skip)\n\t\t\t\tskip--;\n\t\t\telse\n\t\t\t\tcallback(buffer.toString('utf8', bi, ei + elength), indexer++);\n\n\t\t\tbuffer = buffer.slice(ei + elength);\n\t\t\tis = false;\n\t\t\tbi = buffer.indexOf(beg);\n\t\t\tif (bi === -1)\n\t\t\t\treturn;\n\t\t\tis = true;\n\t\t\tei = buffer.indexOf(end, bi + blength);\n\t\t\tif (ei === -1)\n\t\t\t\treturn;\n\t\t}\n\t};\n};\n\n/**\n * HTML encode string\n * @param {String} str\n * @return {String}\n */\nexports.encode = function(str) {\n\n\tif (str == null)\n\t\treturn '';\n\n\tvar type = typeof(str);\n\tif (type !== 'string')\n\t\tstr = str.toString();\n\n\treturn str.encode();\n};\n\n/**\n * HTML decode string\n * @param {String} str\n * @return {String}\n */\nexports.decode = function(str) {\n\n\tif (str == null)\n\t\treturn '';\n\n\tvar type = typeof(str);\n\tif (type !== 'string')\n\t\tstr = str.toString();\n\n\treturn str.decode();\n};\n\n/**\n * Checks if URL contains file extension.\n * @param {String} url\n * @return {Boolean}\n */\nexports.isStaticFile = function(url) {\n\treturn regexpSTATIC.test(url);\n};\n\n/**\n * Converts Value to number\n * @param {Object} obj Value to convert.\n * @param {Number} def Default value (default: 0).\n * @return {Number}\n */\nexports.parseInt = function(obj, def) {\n\tif (obj == null)\n\t\treturn def || 0;\n\tvar type = typeof(obj);\n\treturn type === 'number' ? obj : (type !== 'string' ? obj.toString() : obj).parseInt(def);\n};\n\nexports.parseBool = exports.parseBoolean = function(obj, def) {\n\tif (obj == null)\n\t\treturn def === undefined ? false : def;\n\tvar type = typeof(obj);\n\treturn type === 'boolean' ? obj : type === 'number' ? obj > 0 : (type !== 'string' ? obj.toString() : obj).parseBool(def);\n};\n\n/**\n * Converts Value to float number\n * @param {Object} obj Value to convert.\n * @param {Number} def Default value (default: 0).\n * @return {Number}\n */\nexports.parseFloat = function(obj, def) {\n\tif (obj == null)\n\t\treturn def || 0;\n\tvar type = typeof(obj);\n\treturn type === 'number' ? obj : (type !== 'string' ? obj.toString() : obj).parseFloat(def);\n};\n\n/**\n * Check if the object is Array.\n * @param {Object} obj\n * @return {Boolean}\n */\nexports.isArray = function(obj) {\n\treturn obj instanceof Array;\n};\n\n/**\n * Check if the object is RegExp\n * @param {Object} obj\n * @return {Boolean}\n */\nexports.isRegExp = function(obj) {\n\treturn obj && typeof(obj.test) === 'function' ? true : false;\n};\n\n/**\n * Check if the object is Date\n * @param {Object} obj\n * @return {Boolean}\n */\nexports.isDate = function(obj) {\n\treturn obj instanceof Date && !isNaN(obj.getTime()) ? true : false;\n};\n\n/**\n * Check if the object is Date\n * @param {Object} obj\n * @return {Boolean}\n */\nexports.isError = function(obj) {\n\treturn (obj && obj.stack) ? true : false;;\n};\n\n/**\n * Check if the value is object\n * @param {Object} value\n * @return {Boolean}\n */\nexports.isObject = function(value) {\n\ttry {\n\t\treturn (value && Object.getPrototypeOf(value) === Object.prototype) ? true : false;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n\n/**\n * Get ContentType from file extension.\n * @param {String} ext File extension.\n * @return {String}\n */\nexports.getContentType = function(ext) {\n\tif (ext[0] === '.')\n\t\text = ext.substring(1);\n\treturn CONTENTTYPES[ext] || 'application/octet-stream';\n};\n\n/**\n * Get extension from filename\n * @param {String} filename\n * @return {String}\n */\nexports.getExtension = function(filename) {\n\tvar end = filename.length;\n\tfor (var i = filename.length; i > 1; i--) {\n\t\tvar c = filename[i];\n\t\tif (c === ' ' || c === '?')\n\t\t\tend = i;\n\t\telse if (c === '.')\n\t\t\treturn filename.substring(i + 1, end);\n\t\telse if (c === '/')\n\t\t\treturn '';\n\t}\n\treturn '';\n};\n\n/**\n * Get base name from path\n * @param {String} path\n * @return {String}\n */\nexports.getName = function(path) {\n\tvar l = path.length - 1;\n\tvar c = path[l];\n\tif (c === '/' || c === '\\\\')\n\t\tpath = path.substring(0, l);\n\tvar index = path.lastIndexOf('/');\n\tif (index !== -1)\n\t\treturn path.substring(index + 1);\n\tindex = path.lastIndexOf('\\\\');\n\treturn index === -1 ? path : path.substring(index + 1);\n};\n\n/**\n * Add a new content type to content types\n * @param {String} ext File extension.\n * @param {String} type Content type (example: application/json).\n */\nexports.setContentType = function(ext, type) {\n\tif (ext[0] === '.')\n\t\text = ext.substring(1);\n\n\tif (ext.length > 8) {\n\t\tvar tmp = regexpSTATIC.toString().replace(/\\,\\d+\\}/, ',' + ext.length + '}').substring(1);\n\t\tregexpSTATIC = new RegExp(tmp.substring(0, tmp.length - 1));\n\t}\n\n\tCONTENTTYPES[ext] = type;\n\treturn true;\n};\n\nexports.path = function(path, delimiter) {\n\tif (!path)\n\t\tpath = '';\n\tdelimiter = delimiter || '/';\n\treturn path[path.length - 1] === delimiter ? path : path + delimiter;\n};\n\nexports.join = function() {\n\tvar path = [''];\n\n\tfor (var i = 0; i < arguments.length; i++) {\n\t\tvar current = arguments[i];\n\t\tif (!current)\n\t\t\tcontinue;\n\t\tif (current[0] === '/')\n\t\t\tcurrent = current.substring(1);\n\t\tvar l = current.length - 1;\n\t\tif (current[l] === '/')\n\t\t\tcurrent = current.substring(0, l);\n\t\tpath.push(current);\n\t}\n\n\tpath = path.join('/');\n\treturn !isWindows ? path : path.indexOf(':') > -1 ? path.substring(1) : path;\n};\n\n/**\n * Prepares Windows path to UNIX like format\n * @internal\n * @param {String} path\n * @return {String}\n */\nexports.$normalize = function(path) {\n\treturn isWindows ? path.replace(regexpPATH, '/') : path;\n};\n\nexports.random = function(max, min) {\n\tmax = (max || 100000);\n\tmin = (min || 0);\n\treturn Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nfunction rnd() {\n\treturn Math.floor(Math.random() * 65536).toString(36);\n}\n\nexports.GUID = function(max) {\n\tmax = max || 40;\n\tvar str = '';\n\tfor (var i = 0; i < (max / 3) + 1; i++)\n\t\tstr += rnd();\n\treturn str.substring(0, max);\n};\n\nfunction validate_builder_default(name, value, entity) {\n\n\tvar type = typeof(value);\n\n\t// Enum + KeyValue (8+9)\n\tif (entity.type > 7)\n\t\treturn value !== undefined;\n\n\tswitch (entity.subtype) {\n\t\tcase 'uid':\n\t\t\tvar number = parseInt(value.substring(10, value.length - 4), 10);\n\t\t\treturn isNaN(number) ? false : value[value.length - 1] === (number % 2 ? '1' : '0');\n\t\tcase 'zip':\n\t\t\treturn value.isZIP();\n\t\tcase 'email':\n\t\t\treturn value.isEmail();\n\t\tcase 'json':\n\t\t\treturn value.isJSON();\n\t\tcase 'url':\n\t\t\treturn value.isURL();\n\t\tcase 'phone':\n\t\t\treturn value.isPhone();\n\t}\n\n\tif (type === 'number')\n\t\treturn value > 0;\n\n\tif (type === 'string' || value instanceof Array)\n\t\treturn value.length > 0;\n\n\tif (type === 'boolean')\n\t\treturn value === true;\n\n\tif (value == null)\n\t\treturn false;\n\n\tif (value instanceof Date)\n\t\treturn value.toString()[0] !== 'I'; // Invalid Date\n\n\treturn true;\n}\n\nexports.validate_builder = function(model, error, schema, collection, path, index, fields, pluspath) {\n\n\tvar entity = collection[schema];\n\tvar prepare = entity.onValidate || F.onValidate || NOOP;\n\tvar current = path === undefined ? '' : path + '.';\n\tvar properties = entity.properties;\n\n\tif (!pluspath)\n\t\tpluspath = '';\n\n\tif (model == null)\n\t\tmodel = {};\n\n\tfor (var i = 0; i < properties.length; i++) {\n\n\t\tvar name = properties[i].toString();\n\t\tif (fields && fields.indexOf(name) === -1)\n\t\t\tcontinue;\n\n\t\tvar value = model[name];\n\t\tvar type = typeof(value);\n\t\tvar TYPE = collection[schema].schema[name];\n\n\t\tif (value === undefined) {\n\t\t\terror.add(pluspath + name, '@', current + name);\n\t\t\tcontinue;\n\t\t} else if (type === 'function')\n\t\t\tvalue = model[name]();\n\n\t\tif (type !== 'object') {\n\t\t\tif (Builders.isJoin(collection, name))\n\t\t\t\ttype = 'object';\n\t\t}\n\n\t\tif (type === 'object' && !exports.isDate(value)) {\n\t\t\tentity = collection[schema];\n\n\t\t\tif (entity) {\n\t\t\t\tentity = entity.schema[name] || null;\n\n\t\t\t\tif (entity === Date || entity === String || entity === Number || entity === Boolean) {\n\t\t\t\t\t// Empty\n\t\t\t\t} else if (entity && typeof(entity) === 'string') {\n\n\t\t\t\t\tvar isArray = entity[0] === '[';\n\n\t\t\t\t\tif (!isArray) {\n\t\t\t\t\t\texports.validate_builder(value, error, schema, collection, current + name, index, undefined, pluspath);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tentity = entity.substring(1, entity.length - 1).trim();\n\n\t\t\t\t\tif (!(value instanceof Array)) {\n\t\t\t\t\t\terror.add(pluspath + name, (pluspath ? '@' + name : '@'), current + name, index);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// The schema not exists\n\t\t\t\t\tif (collection[entity] === undefined) {\n\n\t\t\t\t\t\tvar result2 = prepare(name, value, current + name, model, schema, TYPE);\n\t\t\t\t\t\tif (result2 === undefined) {\n\t\t\t\t\t\t\tresult2 = validate_builder_default(name, value, TYPE);\n\t\t\t\t\t\t\tif (result2)\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttype = typeof(result2);\n\n\t\t\t\t\t\tif (type === 'string') {\n\t\t\t\t\t\t\terror.add(pluspath + name, result2, current + name, index);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (type === 'boolean' && !result2) {\n\t\t\t\t\t\t\terror.add(pluspath + name, (pluspath ? '@' + name : '@'), current + name, index);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (result2.isValid === false)\n\t\t\t\t\t\t\terror.add(pluspath + name, result2.error, current + name, index);\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar result3 = prepare(name, value, current + name, model, schema, TYPE);\n\t\t\t\t\tif (result3 === undefined) {\n\t\t\t\t\t\tresult3 = validate_builder_default(name, value, TYPE);\n\t\t\t\t\t\tif (result3)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (result3 !== undefined) {\n\n\t\t\t\t\t\ttype = typeof(result3);\n\n\t\t\t\t\t\tif (type === 'string') {\n\t\t\t\t\t\t\terror.add(pluspath + name, result3, current + name, index);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (type === 'boolean' && !result3) {\n\t\t\t\t\t\t\terror.add(pluspath + name, (pluspath ? '@' + name : '@'), current + name, index);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (result3.isValid === false) {\n\t\t\t\t\t\t\terror.add(pluspath + name, result3.error, current + name, index);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar sublength = value.length;\n\t\t\t\t\tfor (var j = 0; j < sublength; j++)\n\t\t\t\t\t\texports.validate_builder(value[j], error, entity, collection, current + name, j, undefined, pluspath);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar result = prepare(name, value, current + name, model, schema, TYPE);\n\t\tif (result === undefined) {\n\t\t\tresult = validate_builder_default(name, value, TYPE);\n\t\t\tif (result)\n\t\t\t\tcontinue;\n\t\t}\n\n\t\ttype = typeof(result);\n\n\t\tif (type === 'string') {\n\t\t\terror.add(pluspath + name, result, current + name, index);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (type === 'boolean') {\n\t\t\tif (!result)\n\t\t\t\terror.add(pluspath + name, (pluspath ? '@' + name : '@'), current + name, index);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (result.isValid === false)\n\t\t\terror.add(pluspath + name, result.error, current + name, index);\n\t}\n\n\treturn error;\n};\n\n/**\n * Combine paths\n * @return {String}\n */\nexports.combine = function() {\n\n\tvar p = F.directory;\n\n\tfor (var i = 0, length = arguments.length; i < length; i++) {\n\t\tvar v = arguments[i];\n\t\tif (!v)\n\t\t\tcontinue;\n\t\tif (v[0] === '/')\n\t\t\tv = v.substring(1);\n\n\t\tif (v[0] === '~')\n\t\t\tp = v.substring(1);\n\t\telse\n\t\t\tp += (p[p.length - 1] !== '/' ? '/' : '') + v;\n\t}\n\treturn exports.$normalize(p);\n};\n\n/**\n * Remove diacritics\n * @param {String} str\n * @return {String}\n */\nexports.removeDiacritics = function(str) {\n\treturn str.replace(regexpDiacritics, c => DIACRITICSMAP[c] || c);\n};\n\n/**\n * Simple XML parser\n * @param {String} xml\n * @return {Object}\n */\nexports.parseXML = function(xml) {\n\n\tvar beg = -1;\n\tvar end = 0;\n\tvar tmp = 0;\n\tvar current = [];\n\tvar obj = {};\n\tvar from = -1;\n\n\twhile (true) {\n\t\tbeg = xml.indexOf('<![CDATA[', beg);\n\t\tif (beg === -1)\n\t\t\tbreak;\n\t\tend = xml.indexOf(']]>', beg + 9);\n\t\txml = xml.substring(0, beg) + xml.substring(beg + 9, end).trim().encode() + xml.substring(end + 3);\n\t\tbeg += 9;\n\t}\n\n\tbeg = -1;\n\tend = 0;\n\n\twhile (true) {\n\n\t\tbeg = xml.indexOf('<', beg + 1);\n\t\tif (beg === -1)\n\t\t\tbreak;\n\n\t\tend = xml.indexOf('>', beg + 1);\n\t\tif (end === -1)\n\t\t\tbreak;\n\n\t\tvar el = xml.substring(beg, end + 1);\n\t\tvar c = el[1];\n\n\t\tif (c === '?' || c === '/') {\n\n\t\t\tvar o = current.pop();\n\n\t\t\tif (from === -1 || o !== el.substring(2, el.length - 1))\n\t\t\t\tcontinue;\n\n\t\t\tvar path = (current.length ? current.join('.') + '.' : '') + o;\n\t\t\tvar value = xml.substring(from, beg).decode();\n\n\t\t\tif (obj[path] === undefined)\n\t\t\t\tobj[path] = value;\n\t\t\telse if (obj[path] instanceof Array)\n\t\t\t\tobj[path].push(value);\n\t\t\telse\n\t\t\t\tobj[path] = [obj[path], value];\n\n\t\t\tfrom = -1;\n\t\t\tcontinue;\n\t\t}\n\n\t\ttmp = el.indexOf(' ');\n\t\tvar hasAttributes = true;\n\n\t\tif (tmp === -1) {\n\t\t\ttmp = el.length - 1;\n\t\t\thasAttributes = false;\n\t\t}\n\n\t\tfrom = beg + el.length;\n\n\t\tvar isSingle = el[el.length - 2] === '/';\n\t\tvar name = el.substring(1, tmp);\n\n\t\tif (!isSingle)\n\t\t\tcurrent.push(name);\n\n\t\tif (!hasAttributes)\n\t\t\tcontinue;\n\n\t\tvar match = el.match(regexpXML);\n\t\tif (!match)\n\t\t\tcontinue;\n\n\t\tvar attr = {};\n\t\tvar length = match.length;\n\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar index = match[i].indexOf('\"');\n\t\t\tattr[match[i].substring(0, index - 1)] = match[i].substring(index + 1, match[i].length - 1).decode();\n\t\t}\n\n\t\tobj[current.join('.') + (isSingle ? '.' + name : '') + '[]'] = attr;\n\t}\n\n\treturn obj;\n};\n\nexports.parseJSON = function(value, date) {\n\ttry {\n\t\treturn JSON.parse(value, date ? jsonparser : undefined);\n\t} catch(e) {\n\t\treturn null;\n\t}\n};\n\nexports.parseQuery = function(value) {\n\treturn F.onParseQuery(value);\n};\n\nfunction jsonparser(key, value) {\n\treturn typeof(value) === 'string' && value.isJSONDate() ? new Date(value) : value;\n}\n\n/**\n * Get WebSocket frame\n * @author Jozef Gula <gula.jozef@gmail.com>\n * @param {Number} code\n * @param {Buffer or String} message\n * @param {Hexa} type\n * @return {Buffer}\n */\nexports.getWebSocketFrame = function(code, message, type) {\n\tvar messageBuffer = getWebSocketFrameMessageBytes(code, message);\n\tvar messageLength = messageBuffer.length;\n\tvar lengthBuffer = getWebSocketFrameLengthBytes(messageLength);\n\tvar frameBuffer = exports.createBufferSize(1 + lengthBuffer.length + messageLength);\n\tframeBuffer[0] = 0x80 | type;\n\tlengthBuffer.copy(frameBuffer, 1, 0, lengthBuffer.length);\n\tmessageBuffer.copy(frameBuffer, lengthBuffer.length + 1, 0, messageLength);\n\treturn frameBuffer;\n};\n\n/**\n * Get bytes of WebSocket frame message\n * @author Jozef Gula <gula.jozef@gmail.com>\n * @param  {Number} code\n * @param  {Buffer or String} message\n * @return {Buffer}\n */\nfunction getWebSocketFrameMessageBytes(code, message) {\n\n\tvar index = code ? 2 : 0;\n\tvar binary = message instanceof Int8Array;\n\tvar length = message.length;\n\n\tvar messageBuffer = exports.createBufferSize(length + index);\n\n\tfor (var i = 0; i < length; i++) {\n\t\tif (binary)\n\t\t\tmessageBuffer[i + index] = message[i];\n\t\telse\n\t\t\tmessageBuffer[i + index] = message.charCodeAt(i);\n\t}\n\n\tif (!code)\n\t\treturn messageBuffer;\n\n\tmessageBuffer[0] = (code >> 8);\n\tmessageBuffer[1] = (code);\n\n\treturn messageBuffer;\n}\n\n/**\n * Get length of WebSocket frame\n * @author Jozef Gula <gula.jozef@gmail.com>\n * @param  {Number} length\n * @return {Number}\n */\nfunction getWebSocketFrameLengthBytes(length) {\n\tvar lengthBuffer = null;\n\n\tif (length <= 125) {\n\t\tlengthBuffer = exports.createBufferSize(1);\n\t\tlengthBuffer[0] = length;\n\t\treturn lengthBuffer;\n\t}\n\n\tif (length <= 65535) {\n\t\tlengthBuffer = exports.createBufferSize(3);\n\t\tlengthBuffer[0] = 126;\n\t\tlengthBuffer[1] = (length >> 8) & 255;\n\t\tlengthBuffer[2] = (length) & 255;\n\t\treturn lengthBuffer;\n\t}\n\n\tlengthBuffer = exports.createBufferSize(9);\n\n\tlengthBuffer[0] = 127;\n\tlengthBuffer[1] = 0x00;\n\tlengthBuffer[2] = 0x00;\n\tlengthBuffer[3] = 0x00;\n\tlengthBuffer[4] = 0x00;\n\tlengthBuffer[5] = (length >> 24) & 255;\n\tlengthBuffer[6] = (length >> 16) & 255;\n\tlengthBuffer[7] = (length >> 8) & 255;\n\tlengthBuffer[8] = (length) & 255;\n\n\treturn lengthBuffer;\n}\n\n/**\n * GPS distance in KM\n * @param  {Number} lat1\n * @param  {Number} lon1\n * @param  {Number} lat2\n * @param  {Number} lon2\n * @return {Number}\n */\nexports.distance = function(lat1, lon1, lat2, lon2) {\n\tvar R = 6371;\n\tvar dLat = (lat2 - lat1).toRad();\n\tvar dLon = (lon2 - lon1).toRad();\n\tvar a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1.toRad()) * Math.cos(lat2.toRad()) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n\tvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\treturn (R * c).floor(3);\n};\n\n/**\n * Directory listing\n * @param {String} path Path.\n * @param {Function(files, directories)} callback Callback\n * @param {Function(filename),isDirectory or String or RegExp} filter Custom filter (optional).\n */\nexports.ls = function(path, callback, filter) {\n\tvar filelist = new FileList();\n\tfilelist.onComplete = callback;\n\n\tif (typeof(filter) === 'string') {\n\t\tfilter = filter.toLowerCase();\n\t\tfilter.onFilter = function(filename, is) {\n\t\t\treturn is ? true : filename.toLowerCase().indexOf(filter);\n\t\t};\n\t} else if (exports.isRegExp(filter)) {\n\t\tfilter.onFilter = function(filename, is) {\n\t\t\treturn is ? true : filter.test(filename);\n\t\t};\n\t} else\n\t\tfilelist.onFilter = filter || null;\n\n\tfilelist.walk(path);\n};\n\n/**\n * Advanced Directory listing\n * @param {String} path Path.\n * @param {Function(files, directories)} callback Callback\n * @param {Function(filename),isDirectory or String or RegExp} filter Custom filter (optional).\n */\nexports.ls2 = function(path, callback, filter) {\n\tvar filelist = new FileList();\n\tfilelist.advanced = true;\n\tfilelist.onComplete = callback;\n\n\tif (typeof(filter) === 'string') {\n\t\tfilter = filter.toLowerCase();\n\t\tfilter.onFilter = function(filename, is) {\n\t\t\treturn is ? true : filename.toLowerCase().indexOf(filter);\n\t\t};\n\t} else if (exports.isRegExp(filter)) {\n\t\tfilter.onFilter = function(filename, is) {\n\t\t\treturn is ? true : filter.test(filename);\n\t\t};\n\t} else\n\t\tfilelist.onFilter = filter || null;\n\n\tfilelist.walk(path);\n};\n\nDate.prototype.add = function(type, value) {\n\n\tvar self = this;\n\n\tif (type.constructor === Number)\n\t\treturn new Date(self.getTime() + (type - type%1));\n\n\tif (value === undefined) {\n\t\tvar arr = type.split(' ');\n\t\ttype = arr[1];\n\t\tvalue = exports.parseInt(arr[0]);\n\t}\n\n\tvar dt = new Date(self.getTime());\n\n\tswitch(type) {\n\t\tcase 's':\n\t\tcase 'ss':\n\t\tcase 'sec':\n\t\tcase 'second':\n\t\tcase 'seconds':\n\t\t\tdt.setSeconds(dt.getSeconds() + value);\n\t\t\treturn dt;\n\t\tcase 'm':\n\t\tcase 'mm':\n\t\tcase 'minute':\n\t\tcase 'min':\n\t\tcase 'minutes':\n\t\t\tdt.setMinutes(dt.getMinutes() + value);\n\t\t\treturn dt;\n\t\tcase 'h':\n\t\tcase 'hh':\n\t\tcase 'hour':\n\t\tcase 'hours':\n\t\t\tdt.setHours(dt.getHours() + value);\n\t\t\treturn dt;\n\t\tcase 'd':\n\t\tcase 'dd':\n\t\tcase 'day':\n\t\tcase 'days':\n\t\t\tdt.setDate(dt.getDate() + value);\n\t\t\treturn dt;\n\t\tcase 'w':\n\t\tcase 'ww':\n\t\tcase 'week':\n\t\tcase 'weeks':\n\t\t\tdt.setDate(dt.getDate() + (value * 7));\n\t\t\treturn dt;\n\t\tcase 'M':\n\t\tcase 'MM':\n\t\tcase 'month':\n\t\tcase 'months':\n\t\t\tdt.setMonth(dt.getMonth() + value);\n\t\t\treturn dt;\n\t\tcase 'y':\n\t\tcase 'yyyy':\n\t\tcase 'year':\n\t\tcase 'years':\n\t\t\tdt.setFullYear(dt.getFullYear() + value);\n\t\t\treturn dt;\n\t}\n\treturn dt;\n};\n\n/**\n * Date difference\n * @param  {Date/Number/String} date Optional.\n * @param  {String} type Date type: minutes, seconds, hours, days, months, years\n * @return {Number}\n */\nDate.prototype.diff = function(date, type) {\n\n\tif (arguments.length === 1) {\n\t\ttype = date;\n\t\tdate = Date.now();\n\t} else {\n\t\tvar to = typeof(date);\n\t\tif (to === 'string')\n\t\t\tdate = Date.parse(date);\n\t\telse if (exports.isDate(date))\n\t\t\tdate = date.getTime();\n\t}\n\n\tvar r = this.getTime() - date;\n\n\tswitch (type) {\n\t\tcase 's':\n\t\tcase 'ss':\n\t\tcase 'second':\n\t\tcase 'seconds':\n\t\t\treturn Math.ceil(r / 1000);\n\t\tcase 'm':\n\t\tcase 'mm':\n\t\tcase 'minute':\n\t\tcase 'minutes':\n\t\t\treturn Math.ceil((r / 1000) / 60);\n\t\tcase 'h':\n\t\tcase 'hh':\n\t\tcase 'hour':\n\t\tcase 'hours':\n\t\t\treturn Math.ceil(((r / 1000) / 60) / 60);\n\t\tcase 'd':\n\t\tcase 'dd':\n\t\tcase 'day':\n\t\tcase 'days':\n\t\t\treturn Math.ceil((((r / 1000) / 60) / 60) / 24);\n\t\tcase 'M':\n\t\tcase 'MM':\n\t\tcase 'month':\n\t\tcase 'months':\n\t\t\t// avg: 28 days per month\n\t\t\treturn Math.ceil((((r / 1000) / 60) / 60) / (24 * 28));\n\n\t\tcase 'y':\n\t\tcase 'yyyy':\n\t\tcase 'year':\n\t\tcase 'years':\n\t\t\t// avg: 28 days per month\n\t\t\treturn Math.ceil((((r / 1000) / 60) / 60) / (24 * 28 * 12));\n\t}\n\n\treturn NaN;\n};\n\nDate.prototype.extend = function(date) {\n\tvar dt = new Date(this);\n\tvar match = date.match(regexpDATE);\n\n\tif (!match)\n\t\treturn dt;\n\n\tfor (var i = 0, length = match.length; i < length; i++) {\n\t\tvar m = match[i];\n\t\tvar arr, tmp;\n\n\t\tif (m.indexOf(':') !== -1) {\n\n\t\t\tarr = m.split(':');\n\t\t\ttmp = +arr[0];\n\t\t\t!isNaN(tmp) && dt.setHours(tmp);\n\n\t\t\tif (arr[1]) {\n\t\t\t\ttmp = +arr[1];\n\t\t\t\t!isNaN(tmp) && dt.setMinutes(tmp);\n\t\t\t}\n\n\t\t\tif (arr[2]) {\n\t\t\t\ttmp = +arr[2];\n\t\t\t\t!isNaN(tmp) && dt.setSeconds(tmp);\n\t\t\t}\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (m.indexOf('-') !== -1) {\n\t\t\tarr = m.split('-');\n\n\t\t\ttmp = +arr[0];\n\t\t\tdt.setFullYear(tmp);\n\n\t\t\tif (arr[1]) {\n\t\t\t\ttmp = +arr[1];\n\t\t\t\t!isNaN(tmp) && dt.setMonth(tmp - 1);\n\t\t\t}\n\n\t\t\tif (arr[2]) {\n\t\t\t\ttmp = +arr[2];\n\t\t\t\t!isNaN(tmp) && dt.setDate(tmp);\n\t\t\t}\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (m.indexOf('.') !== -1) {\n\t\t\tarr = m.split('.');\n\n\t\t\ttmp = +arr[0];\n\t\t\tdt.setDate(tmp);\n\n\t\t\tif (arr[1]) {\n\t\t\t\ttmp = +arr[1];\n\t\t\t\t!isNaN(tmp) && dt.setMonth(tmp - 1);\n\t\t\t}\n\n\t\t\tif (arr[2]) {\n\t\t\t\ttmp = +arr[2];\n\t\t\t\t!isNaN(tmp) && dt.setFullYear(tmp);\n\t\t\t}\n\n\t\t\tcontinue;\n\t\t}\n\t}\n\n\treturn dt;\n};\n\n/**\n * Compare dates\n * @param {Date} date\n * @return {Number} Results: -1 = current date is earlier than @date, 0 = current date is same as @date, 1 = current date is later than @date\n */\nDate.prototype.compare = function(date) {\n\n\tvar self = this;\n\tvar r = self.getTime() - date.getTime();\n\n\tif (r === 0)\n\t\treturn 0;\n\n\tif (r < 0)\n\t\treturn -1;\n\n\treturn 1;\n};\n\n/**\n * Compare two dates\n * @param {String or Date} d1\n * @param {String or Date} d2\n * @return {Number} Results: -1 = @d1 is earlier than @d2, 0 = @d1 is same as @d2, 1 = @d1 is later than @d2\n */\nDate.compare = function(d1, d2) {\n\n\tif (typeof(d1) === 'string')\n\t\td1 = d1.parseDate();\n\n\tif (typeof(d2) === 'string')\n\t\td2 = d2.parseDate();\n\n\treturn d1.compare(d2);\n};\n\n/**\n * Format datetime\n * @param {String} format\n * @return {String}\n */\nDate.prototype.format = function(format, resource) {\n\n\tvar self = this;\n\tvar half = false;\n\n\tif (format && format[0] === '!') {\n\t\thalf = true;\n\t\tformat = format.substring(1);\n\t}\n\n\tif (!format)\n\t\treturn self.getFullYear() + '-' + (self.getMonth() + 1).toString().padLeft(2, '0') + '-' + self.getDate().toString().padLeft(2, '0') + 'T' + self.getHours().toString().padLeft(2, '0') + ':' + self.getMinutes().toString().padLeft(2, '0') + ':' + self.getSeconds().toString().padLeft(2, '0') + '.' + self.getMilliseconds().toString().padLeft(3, '0') + 'Z';\n\n\tvar h = self.getHours();\n\n\tif (half) {\n\t\tif (h >= 12)\n\t\t\th -= 12;\n\t}\n\n\treturn format.replace(regexpDATEFORMAT, function(key) {\n\t\tswitch (key) {\n\t\t\tcase 'yyyy':\n\t\t\t\treturn self.getFullYear();\n\t\t\tcase 'yy':\n\t\t\t\treturn self.getFullYear().toString().substring(2);\n\t\t\tcase 'MMM':\n\t\t\t\tvar m = MONTHS[self.getMonth()];\n\t\t\t\treturn (F.resource(resource, m) || m).substring(0, 3);\n\t\t\tcase 'MMMM':\n\t\t\t\tvar m = MONTHS[self.getMonth()];\n\t\t\t\treturn (F.resource(resource, m) || m);\n\t\t\tcase 'MM':\n\t\t\t\treturn (self.getMonth() + 1).toString().padLeft(2, '0');\n\t\t\tcase 'M':\n\t\t\t\treturn (self.getMonth() + 1);\n\t\t\tcase 'ddd':\n\t\t\t\tvar m = DAYS[self.getDay()];\n\t\t\t\treturn (F.resource(resource, m) || m).substring(0, 3);\n\t\t\tcase 'dddd':\n\t\t\t\tvar m = DAYS[self.getDay()];\n\t\t\t\treturn (F.resource(resource, m) || m);\n\t\t\tcase 'dd':\n\t\t\t\treturn self.getDate().toString().padLeft(2, '0');\n\t\t\tcase 'd':\n\t\t\t\treturn self.getDate();\n\t\t\tcase 'HH':\n\t\t\tcase 'hh':\n\t\t\t\treturn h.toString().padLeft(2, '0');\n\t\t\tcase 'H':\n\t\t\tcase 'h':\n\t\t\t\treturn self.getHours();\n\t\t\tcase 'mm':\n\t\t\t\treturn self.getMinutes().toString().padLeft(2, '0');\n\t\t\tcase 'm':\n\t\t\t\treturn self.getMinutes();\n\t\t\tcase 'ss':\n\t\t\t\treturn self.getSeconds().toString().padLeft(2, '0');\n\t\t\tcase 's':\n\t\t\t\treturn self.getSeconds();\n\t\t\tcase 'w':\n\t\t\tcase 'ww':\n\t\t\t\tvar tmp = new Date(+self);\n\t\t\t\ttmp.setHours(0, 0, 0);\n\t\t\t\ttmp.setDate(tmp.getDate() + 4 - (tmp.getDay() || 7));\n\t\t\t\ttmp = Math.ceil((((tmp - new Date(tmp.getFullYear(), 0, 1)) / 8.64e7) + 1) / 7);\n\t\t\t\treturn key === 'ww' ? tmp.toString().padLeft(2, '0') : tmp;\n\t\t\tcase 'a':\n\t\t\t\treturn self.getHours() >= 12 ? 'PM' : 'AM';\n\t\t}\n\t});\n};\n\nDate.prototype.toUTC = function(ticks) {\n\tvar dt = this.getTime() + this.getTimezoneOffset() * 60000;\n\treturn ticks ? dt : new Date(dt);\n};\n\n// +v2.2.0 parses JSON dates as dates and this is the fallback for backward compatibility\nDate.prototype.parseDate = function() {\n\treturn this;\n};\n\nString.prototype.isJSONDate = function() {\n\tvar l = this.length - 1;\n\treturn l > 22 && l < 30 && this[l] === 'Z' && this[10] === 'T' && this[4] === '-' && this[13] === ':' && this[16] === ':';\n};\n\nif (!String.prototype.trim) {\n\tString.prototype.trim = function() {\n\t\treturn this.replace(regexpTRIM, '');\n\t};\n}\n\nif (!String.prototype.replaceAt) {\n\tString.prototype.replaceAt = function(index, character) {\n\t\treturn this.substr(0, index) + character + this.substr(index + character.length);\n\t};\n}\n\n/**\n * Checks if the string starts with the text\n * @see {@link http://docs.totaljs.com/String.prototype/#String.prototype.startsWith|Documentation}\n * @param {String} text Text to find.\n * @param {Boolean/Number} ignoreCase Ingore case sensitive or position in the string.\n * @return {Boolean}\n */\nString.prototype.startsWith = function(text, ignoreCase) {\n\tvar self = this;\n\tvar length = text.length;\n\tvar tmp;\n\n\tif (ignoreCase === true) {\n\t\ttmp = self.substring(0, length);\n\t\treturn tmp.length === length && tmp.toLowerCase() === text.toLowerCase();\n\t}\n\n\tif (ignoreCase)\n\t\ttmp = self.substr(ignoreCase, length);\n\telse\n\t\ttmp = self.substring(0, length);\n\n\treturn tmp.length === length && tmp === text;\n};\n\n/**\n * Checks if the string ends with the text\n * @see {@link http://docs.totaljs.com/String.prototype/#String.prototype.endsWith|Documentation}\n * @param {String} text Text to find.\n * @param {Boolean/Number} ignoreCase Ingore case sensitive or position in the string.\n * @return {Boolean}\n */\nString.prototype.endsWith = function(text, ignoreCase) {\n\tvar self = this;\n\tvar length = text.length;\n\tvar tmp;\n\n\tif (ignoreCase === true) {\n\t\ttmp = self.substring(self.length - length);\n\t\treturn tmp.length === length && tmp.toLowerCase() === text.toLowerCase();\n\t}\n\n\tif (ignoreCase)\n\t\ttmp = self.substr((self.length - ignoreCase) - length, length);\n\telse\n\t\ttmp = self.substring(self.length - length);\n\n\treturn tmp.length === length && tmp === text;\n};\n\nString.prototype.replacer = function(find, text) {\n\tvar self = this;\n\tvar beg = self.indexOf(find);\n\treturn beg === -1 ? self : (self.substring(0, beg) + text + self.substring(beg + find.length));\n};\n\n/**\n * Hash string\n * @param {String} type Hash type.\n * @param {String} salt Optional, salt.\n * @return {String}\n */\nString.prototype.hash = function(type, salt) {\n\tvar str = this;\n\tif (salt)\n\t\tstr += salt;\n\tswitch (type) {\n\t\tcase 'md5':\n\t\t\treturn str.md5();\n\t\tcase 'sha1':\n\t\t\treturn str.sha1();\n\t\tcase 'sha256':\n\t\t\treturn str.sha256();\n\t\tcase 'sha512':\n\t\t\treturn str.sha512();\n\t\tdefault:\n\t\t\treturn string_hash(str);\n\t}\n};\n\nfunction string_hash(s) {\n\tvar hash = 0, i, char;\n\tif (s.length === 0)\n\t\treturn hash;\n\tvar l = s.length;\n\tfor (i = 0; i < l; i++) {\n\t\tchar = s.charCodeAt(i);\n\t\thash = ((hash << 5) - hash) + char;\n\t\thash |= 0; // Convert to 32bit integer\n\t}\n\treturn hash;\n}\n\nString.prototype.count = function(text) {\n\tvar index = 0;\n\tvar count = 0;\n\tdo {\n\t\tindex = this.indexOf(text, index + text.length);\n\t\tif (index > 0)\n\t\t\tcount++;\n\t} while (index > 0);\n\treturn count;\n};\n\nString.prototype.parseXML = function() {\n\treturn F.onParseXML(this);\n};\n\nString.prototype.parseJSON = function(date) {\n\treturn exports.parseJSON(this, date);\n};\n\nString.prototype.parseQuery = function() {\n\treturn exports.parseQuery(this);\n};\n\nString.prototype.parseTerminal = function(fields, fn, skip, take) {\n\n\tvar lines = this.split('\\n');\n\n\tif (typeof(fields) === 'function') {\n\t\ttake = skip;\n\t\tskip = fn;\n\t\tfn = fields;\n\t\tparseTerminal2(lines, fn, skip, take);\n\t\treturn this;\n\t}\n\n\tif (skip === undefined)\n\t\tskip = 0;\n\tif (take === undefined)\n\t\ttake = lines.length;\n\n\tvar headers = [];\n\tvar indexer = 0;\n\tvar line = lines[0];\n\n\tif (!line) {\n\t\tline = lines[1];\n\t\tskip++;\n\t}\n\n\tif (!line) {\n\t\tline = lines[2];\n\t\tskip++;\n\t}\n\n\tif (!line)\n\t\treturn this;\n\n\tvar fieldslength = fields.length;\n\tvar tmp;\n\n\tfor (var i = 0, length = fieldslength; i < length; i++) {\n\t\tvar field = fields[i];\n\n\t\tvar beg = -1;\n\t\tvar end = -1;\n\t\tvar type = typeof(field);\n\n\t\tif (type === 'object' && field.test) {\n\t\t\ttmp = line.match(field);\n\t\t\tif (tmp) {\n\t\t\t\tbeg = tmp.index;\n\t\t\t\tend = beg + tmp.toString().length;\n\t\t\t} else {\n\t\t\t\tbeg = -1;\n\t\t\t\tend = -1;\n\t\t\t}\n\t\t} else if (type === 'string') {\n\t\t\ttmp = line.indexOf(field);\n\t\t\tif (tmp === -1) {\n\t\t\t\tbeg = -1;\n\t\t\t\tend = -1;\n\t\t\t} else {\n\t\t\t\tbeg = tmp;\n\t\t\t\tend = line.indexOf(' ', beg + field.length);\n\t\t\t}\n\t\t}\n\n\t\theaders.push({ beg: beg, end: end });\n\t}\n\n\tfor (var i = skip + 1, length = skip + 1 + take; i < length; i++) {\n\n\t\tvar line = lines[i];\n\t\tif (!line)\n\t\t\tcontinue;\n\n\t\tvar arr = [];\n\t\tvar is = false;\n\t\tvar beg;\n\n\t\tfor (var j = 0; j < fieldslength; j++) {\n\t\t\tvar header = headers[j];\n\t\t\tif (header.beg !== -1) {\n\t\t\t\tis = true;\n\t\t\t\tbeg = 0;\n\n\t\t\t\tfor (var k = header.beg; k > -1; k--) {\n\t\t\t\t\tif (line[k] === ' ') {\n\t\t\t\t\t\tbeg = k + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tarr.push(line.substring(beg, header.end === -1 ? undefined : header.end).trim());\n\t\t\t} else\n\t\t\t\tarr.push('');\n\t\t}\n\n\t\tis && fn(arr, indexer++, length, i);\n\t}\n\n\treturn this;\n};\n\nfunction parseTerminal2(lines, fn, skip, take) {\n\tvar indexer = 0;\n\n\tif (skip === undefined)\n\t\tskip = 0;\n\tif (take === undefined)\n\t\ttake = lines.length;\n\n\tfor (var i = skip, length = skip + take; i < length; i++) {\n\t\tvar line = lines[i];\n\t\tif (!line)\n\t\t\tcontinue;\n\t\tvar m = line.match(regexpTERMINAL);\n\t\tm && fn(m, indexer++, length, i);\n\t}\n}\n\nString.prototype.parseDate = function() {\n\tvar self = this.trim();\n\tvar lc = self.charCodeAt(self.length - 1);\n\n\t// Classic date\n\tif (lc === 41)\n\t\treturn new Date(self);\n\n\t// JSON format\n\tif (lc === 90)\n\t\treturn new Date(Date.parse(self));\n\n\tvar arr = self.indexOf(' ') === -1 ? self.split('T') : self.split(' ');\n\tvar index = arr[0].indexOf(':');\n\tvar length = arr[0].length;\n\n\tif (index !== -1) {\n\t\tvar tmp = arr[1];\n\t\tarr[1] = arr[0];\n\t\tarr[0] = tmp;\n\t}\n\n\tif (arr[0] === undefined)\n\t\tarr[0] = '';\n\n\tvar noTime = arr[1] === undefined ? true : arr[1].length === 0;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar c = arr[0].charCodeAt(i);\n\t\tif (c === 45 || c === 46 || (c > 47 && c < 58))\n\t\t\tcontinue;\n\t\tif (noTime)\n\t\t\treturn new Date(self);\n\t}\n\n\tif (arr[1] === undefined)\n\t\tarr[1] = '00:00:00';\n\n\tvar firstDay = arr[0].indexOf('-') === -1;\n\n\tvar date = (arr[0] || '').split(firstDay ? '.' : '-');\n\tvar time = (arr[1] || '').split(':');\n\tvar parsed = [];\n\n\tif (date.length < 4 && time.length < 2)\n\t\treturn new Date(self);\n\n\tindex = (time[2] || '').indexOf('.');\n\n\t// milliseconds\n\tif (index !== -1) {\n\t\ttime[3] = time[2].substring(index + 1);\n\t\ttime[2] = time[2].substring(0, index);\n\t} else\n\t\ttime[3] = '0';\n\n\tparsed.push(+date[firstDay ? 2 : 0]); // year\n\tparsed.push(+date[1]); // month\n\tparsed.push(+date[firstDay ? 0 : 2]); // day\n\tparsed.push(+time[0]); // hours\n\tparsed.push(+time[1]); // minutes\n\tparsed.push(+time[2]); // seconds\n\tparsed.push(+time[3]); // miliseconds\n\n\tvar def = new Date();\n\n\tfor (var i = 0, length = parsed.length; i < length; i++) {\n\t\tif (isNaN(parsed[i]))\n\t\t\tparsed[i] = 0;\n\n\t\tvar value = parsed[i];\n\t\tif (value !== 0)\n\t\t\tcontinue;\n\n\t\tswitch (i) {\n\t\t\tcase 0:\n\t\t\t\tif (value <= 0)\n\t\t\t\t\tparsed[i] = def.getFullYear();\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tif (value <= 0)\n\t\t\t\t\tparsed[i] = def.getMonth() + 1;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tif (value <= 0)\n\t\t\t\t\tparsed[i] = def.getDate();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn new Date(parsed[0], parsed[1] - 1, parsed[2], parsed[3], parsed[4], parsed[5]);\n};\n\nString.prototype.parseDateExpiration = function() {\n\tvar self = this;\n\n\tvar arr = self.split(' ');\n\tvar dt = new Date();\n\tvar length = arr.length;\n\n\tfor (var i = 0; i < length; i += 2) {\n\t\tvar num = arr[i].parseInt();\n\t\tif (num === 0)\n\t\t\tcontinue;\n\t\tvar type = arr[i + 1];\n\t\tif (type)\n\t\t\tdt = dt.add(type, num);\n\t}\n\n\treturn dt;\n};\n\nString.prototype.contains = function(value, mustAll) {\n\tvar str = this;\n\n\tif (typeof(value) === 'string')\n\t\treturn str.indexOf(value, typeof(mustAll) === 'number' ? mustAll : 0) !== -1;\n\n\tfor (var i = 0, length = value.length; i < length; i++) {\n\t\tvar exists = str.indexOf(value[i]) !== -1;\n\t\tif (mustAll) {\n\t\t\tif (!exists)\n\t\t\t\treturn false;\n\t\t} else if (exists)\n\t\t\treturn true;\n\t}\n\n\treturn mustAll;\n};\n\n/**\n * Same functionality as as String.localeCompare() but this method works with latin.\n * @param {String} value\n * @return {Number}\n */\nString.prototype.localeCompare2 = function(value) {\n\treturn this.removeDiacritics().localeCompare(value.removeDiacritics())\n};\n\n/**\n * Parse configuration from a string\n * @param {Object} def\n * @return {Object}\n */\nString.prototype.parseConfig = function(def) {\n\tvar arr = this.split('\\n');\n\tvar length = arr.length;\n\tvar obj = exports.extend({}, def);\n\tvar subtype;\n\tvar name;\n\tvar index;\n\tvar value;\n\n\tfor (var i = 0; i < length; i++) {\n\n\t\tvar str = arr[i];\n\t\tif (!str || str[0] === '#' || str.substring(0, 2) === '//')\n\t\t\tcontinue;\n\n\t\tindex = str.indexOf(' :');\n\t\tif (index === -1) {\n\t\t\tindex = str.indexOf('\\t:');\n\t\t\tif (index === -1)\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tname = str.substring(0, index).trim();\n\t\tvalue = str.substring(index + 2).trim();\n\n\t\tindex = name.indexOf('(');\n\t\tif (index !== -1) {\n\t\t\tsubtype = name.substring(index + 1, name.indexOf(')')).trim().toLowerCase();\n\t\t\tname = name.substring(0, index).trim();\n\t\t} else\n\t\t\tsubtype = '';\n\n\t\tswitch (subtype) {\n\t\t\tcase 'string':\n\t\t\t\tobj[name] = value;\n\t\t\t\tbreak;\n\t\t\tcase 'number':\n\t\t\tcase 'float':\n\t\t\tcase 'double':\n\t\t\tcase 'currency':\n\t\t\t\tobj[name] = value.isNumber(true) ? value.parseFloat() : value.parseInt();\n\t\t\t\tbreak;\n\t\t\tcase 'boolean':\n\t\t\tcase 'bool':\n\t\t\t\tobj[name] = value.parseBoolean();\n\t\t\t\tbreak;\n\t\t\tcase 'eval':\n\t\t\tcase 'object':\n\t\t\tcase 'array':\n\t\t\t\tobj[name] = new Function('return ' + value)();\n\t\t\t\tbreak;\n\t\t\tcase 'json':\n\t\t\t\tobj[name] = value.parseJSON(true);\n\t\t\t\tbreak;\n\t\t\tcase 'env':\n\t\t\tcase 'environment':\n\t\t\t\tobj[name] = process.env[value];\n\t\t\t\tbreak;\n\t\t\tcase 'date':\n\t\t\tcase 'time':\n\t\t\tcase 'datetime':\n\t\t\t\tobj[name] = value.parseDate();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tobj[name] = value;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn obj;\n};\n\nString.prototype.format = function() {\n\tvar arg = arguments;\n\treturn this.replace(regexpSTRINGFORMAT, function(text) {\n\t\tvar value = arg[+text.substring(1, text.length - 1)];\n\t\treturn value == null ? '' : value;\n\t});\n};\n\nString.prototype.encode = function() {\n\tvar output = '';\n\tfor (var i = 0, length = this.length; i < length; i++) {\n\t\tvar c = this[i];\n\t\tswitch (c) {\n\t\t\tcase '<':\n\t\t\t\toutput += '&lt;';\n\t\t\t\tbreak;\n\t\t\tcase '>':\n\t\t\t\toutput += '&gt;';\n\t\t\t\tbreak;\n\t\t\tcase '\"':\n\t\t\t\toutput += '&quot;';\n\t\t\t\tbreak;\n\t\t\tcase '\\'':\n\t\t\t\toutput += '&apos;';\n\t\t\t\tbreak;\n\t\t\tcase '&':\n\t\t\t\toutput += '&amp;';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\toutput += c;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn output;\n};\n\nString.prototype.decode = function() {\n\treturn this.replace(regexpDECODE, function(s) {\n\t\tif (s.charAt(1) !== '#')\n\t\t\treturn ALPHA_INDEX[s] || s;\n\t\tvar code = s[2].toLowerCase() === 'x' ? parseInt(s.substr(3), 16) : parseInt(s.substr(2));\n\t\treturn !code || code < -32768 || code > 65535 ? '' : String.fromCharCode(code);\n\t});\n};\n\nString.prototype.urlEncode = function() {\n\treturn encodeURIComponent(this);\n};\n\nString.prototype.urlDecode = function() {\n\treturn decodeURIComponent(this);\n};\n\nString.prototype.params = function(obj) {\n\n\tOBSOLETE('String.params()', 'The method is deprecated instead of it use F.viewCompile() or String.format().');\n\n\tvar formatted = this;\n\tif (obj == null)\n\t\treturn formatted;\n\n\treturn formatted.replace(regexpPARAM, function(prop) {\n\n\t\tvar isEncode = false;\n\t\tvar name = prop.substring(2, prop.length - 2).trim();\n\n\t\tvar format = '';\n\t\tvar index = name.indexOf('|');\n\n\t\tif (index !== -1) {\n\t\t\tformat = name.substring(index + 1, name.length).trim();\n\t\t\tname = name.substring(0, index).trim();\n\t\t}\n\n\t\tif (name[0] === '!')\n\t\t\tname = name.substring(1);\n\t\telse\n\t\t\tisEncode = true;\n\n\t\tvar val;\n\n\t\tif (name.indexOf('.') !== -1) {\n\t\t\tvar arr = name.split('.');\n\t\t\tif (arr.length === 2) {\n\t\t\t\tif (obj[arr[0]])\n\t\t\t\t\tval = obj[arr[0]][arr[1]];\n\t\t\t}\n\t\t\telse if (arr.length === 3) {\n\t\t\t\tif (obj[arr[0]] && obj[arr[0]][arr[1]])\n\t\t\t\t\tval = obj[arr[0]][arr[1]][arr[2]];\n\t\t\t}\n\t\t\telse if (arr.length === 4)\n\t\t\t\tif (obj[arr[0]] && obj[arr[0]][arr[1]] && obj[arr[0]][arr[1]][arr[2]])\n\t\t\t\t\tval = obj[arr[0]][arr[1]][arr[2]][arr[3]];\n\t\t\telse if (arr.length === 5) {\n\t\t\t\tif (obj[arr[0]] && obj[arr[0]][arr[1]] && obj[arr[0]][arr[1]][arr[2]] && obj[arr[0]][arr[1]][arr[2]][arr[3]])\n\t\t\t\t\tval = obj[arr[0]][arr[1]][arr[2]][arr[3]][arr[4]];\n\t\t\t}\n\t\t} else\n\t\t\tval = name.length ? obj[name] : obj;\n\n\t\tif (typeof(val) === 'function')\n\t\t\tval = val(index);\n\n\t\tif (val === undefined)\n\t\t\treturn prop;\n\n\t\tif (format.length) {\n\t\t\tvar type = typeof(val);\n\t\t\tif (type === 'string') {\n\t\t\t\tvar max = +format;\n\t\t\t\tif (!isNaN(max))\n\t\t\t\t\tval = val.max(max + 3, '...');\n\n\t\t\t} else if (type === 'number' || exports.isDate(val)) {\n\t\t\t\tif (format.isNumber())\n\t\t\t\t\tformat = +format;\n\t\t\t\tval = val.format(format);\n\t\t\t}\n\t\t}\n\n\t\tval = val.toString();\n\t\treturn isEncode ? exports.encode(val) : val;\n\t});\n};\n\nString.prototype.max = function(length, chars) {\n\tvar str = this;\n\tif (typeof(chars) !== 'string')\n\t\tchars = '...';\n\treturn str.length > length ? str.substring(0, length - chars.length) + chars : str;\n};\n\nString.prototype.isJSON = function() {\n\tvar self = this;\n\tif (self.length <= 1)\n\t\treturn false;\n\n\tvar l = self.length - 1;\n\tvar a;\n\tvar b;\n\tvar i = 0;\n\n\twhile (true) {\n\t\ta = self[i++];\n\t\tif (a === ' ' || a === '\\n' || a === '\\r' || a === '\\t')\n\t\t\tcontinue;\n\t\tbreak;\n\t}\n\n\twhile (true) {\n\t\tb = self[l--];\n\t\tif (b === ' ' || b === '\\n' || b === '\\r' || b === '\\t')\n\t\t\tcontinue;\n\t\tbreak;\n\t}\n\n\treturn (a === '\"' && b === '\"') || (a === '[' && b === ']') || (a === '{' && b === '}');\n};\n\nString.prototype.isURL = function() {\n\treturn this.length <= 7 ? false : F.validators.url.test(this);\n};\n\nString.prototype.isZIP = function() {\n\treturn F.validators.zip.test(this);\n};\n\nString.prototype.isEmail = function() {\n\treturn this.length <= 4 ? false : F.validators.email.test(this);\n};\n\nString.prototype.isPhone = function() {\n\treturn this.length < 6 ? false : F.validators.phone.test(this);\n};\n\nString.prototype.isUID = function() {\n\treturn this.length < 18 ? false : F.validators.uid.test(this);\n};\n\nString.prototype.parseInt = function(def) {\n\tvar str = this.trim();\n\tvar num = +str;\n\treturn isNaN(num) ? (def || 0) : num;\n};\n\nString.prototype.parseInt2 = function(def) {\n\tvar num = this.match(regexpINTEGER);\n\treturn num ? +num[0] : def || 0;\n};\n\nString.prototype.parseFloat2 = function(def) {\n\tvar num = this.match(regexpFLOAT);\n\treturn num ? +num[0].toString().replace(/\\,/g, '.') : def || 0;\n};\n\nString.prototype.parseBool = String.prototype.parseBoolean = function() {\n\tvar self = this.toLowerCase();\n\treturn self === 'true' || self === '1' || self === 'on';\n};\n\nString.prototype.parseFloat = function(def) {\n\tvar str = this.trim();\n\tif (str.indexOf(',') !== -1)\n\t\tstr = str.replace(',', '.');\n\tvar num = +str;\n\treturn isNaN(num) ? (def || 0) : num;\n};\n\nString.prototype.capitalize = function(first) {\n\n\tif (first)\n\t\treturn this[0].toUpperCase() + this.substring(1);\n\n\tvar builder = '';\n\tvar c;\n\n\tfor (var i = 0, length = this.length; i < length; i++) {\n\t\tvar c = this[i - 1];\n\t\tif (!c || (c === ' ' || c === '\\t' || c === '\\n'))\n\t\t\tc = this[i].toUpperCase();\n\t\telse\n\t\t\tc = this[i];\n\t\tbuilder += c;\n\t}\n\n\treturn builder;\n};\n\n\nString.prototype.toUnicode = function() {\n\tvar result = '';\n\tvar self = this;\n\tvar length = self.length;\n\tfor(var i = 0; i < length; ++i){\n\t\tif(self.charCodeAt(i) > 126 || self.charCodeAt(i) < 32)\n\t\t\tresult += '\\\\u' + self.charCodeAt(i).hex(4);\n\t\telse\n\t\t\tresult += self[i];\n\t}\n\treturn result;\n};\n\nString.prototype.fromUnicode = function() {\n\treturn unescape(this.replace(regexpUNICODE, (match, v) => String.fromCharCode(parseInt(v, 16))));\n};\n\nString.prototype.sha1 = function(salt) {\n\tvar hash = Crypto.createHash('sha1');\n\thash.update(this + (salt || ''), ENCODING);\n\treturn hash.digest('hex');\n};\n\nString.prototype.sha256 = function(salt) {\n\tvar hash = Crypto.createHash('sha256');\n\thash.update(this + (salt || ''), ENCODING);\n\treturn hash.digest('hex');\n};\n\nString.prototype.sha512 = function(salt) {\n\tvar hash = Crypto.createHash('sha512');\n\thash.update(this + (salt || ''), ENCODING);\n\treturn hash.digest('hex');\n};\n\nString.prototype.md5 = function(salt) {\n\tvar hash = Crypto.createHash('md5');\n\thash.update(this + (salt || ''), ENCODING);\n\treturn hash.digest('hex');\n};\n\nString.prototype.toSearch = function() {\n\tvar str = this.replace(regexpSEARCH, '').trim().toLowerCase().removeDiacritics();\n\tvar buf = [];\n\tvar prev = '';\n\tfor (var i = 0, length = str.length; i < length; i++) {\n\t\tvar c = str[i];\n\t\tif (c === 'y')\n\t\t\tc = 'i';\n\t\tif (c === prev)\n\t\t\tcontinue;\n\t\tprev = c;\n\t\tbuf.push(c);\n\t}\n\n\treturn buf.join('');\n};\n\nString.prototype.toKeywords = String.prototype.keywords = function(forSearch, alternative, max_count, max_length, min_length) {\n\treturn exports.keywords(this, forSearch, alternative, max_count, max_length, min_length);\n};\n\nString.prototype.encrypt = function(key, isUnique) {\n\tvar str = '0' + this;\n\tvar data_count = str.length;\n\tvar key_count = key.length;\n\tvar random = isUnique ? exports.random(120) + 40 : 65;\n\tvar count = data_count + (random % key_count);\n\tvar values = [];\n\tvar index = 0;\n\n\tvalues[0] = String.fromCharCode(random);\n\tvar counter = this.length + key.length;\n\n\tfor (var i = count - 1; i > 0; i--) {\n\t\tindex = str.charCodeAt(i % data_count);\n\t\tvalues[i] = String.fromCharCode(index ^ (key.charCodeAt(i % key_count) ^ random));\n\t}\n\n\tvar hash = exports.createBuffer(counter + '=' + values.join(''), ENCODING).toString('base64').replace(regexpENCRYPT, text => text === '+' ? '_' : '-');\n\tindex = hash.indexOf('=');\n\treturn index > 0 ? hash.substring(0, index) : hash;\n};\n\nString.prototype.decrypt = function(key) {\n\n\tvar values = this.replace(regexpDECRYPT, text => text === '-' ? '/' : '+');\n\tvar mod = values.length % 4;\n\n\tif (mod) {\n\t\tfor (var i = 0; i < mod; i++)\n\t\t\tvalues += '=';\n\t}\n\n\tvalues = exports.createBuffer(values, 'base64').toString(ENCODING);\n\n\tvar index = values.indexOf('=');\n\tif (index === -1)\n\t\treturn null;\n\n\tvar counter = +values.substring(0, index);\n\tif (isNaN(counter))\n\t\treturn null;\n\n\tvalues = values.substring(index + 1);\n\n\tvar count = values.length;\n\tvar random = values.charCodeAt(0);\n\n\tvar key_count = key.length;\n\tvar data_count = count - (random % key_count);\n\tvar decrypt_data = [];\n\n\tfor (var i = data_count - 1; i > 0; i--) {\n\t\tindex = values.charCodeAt(i) ^ (random ^ key.charCodeAt(i % key_count));\n\t\tdecrypt_data[i] = String.fromCharCode(index);\n\t}\n\n\tvar val = decrypt_data.join('');\n\treturn counter !== val.length + key.length ? null : val;\n};\n\nString.prototype.base64ToFile = function(filename, callback) {\n\tvar self = this;\n\n\tvar index = self.indexOf(',');\n\tif (index === -1)\n\t\tindex = 0;\n\telse\n\t\tindex++;\n\n\tFs.writeFile(filename, self.substring(index), 'base64', callback || exports.noop);\n\treturn this;\n};\n\nString.prototype.base64ToBuffer = function() {\n\tvar self = this;\n\n\tvar index = self.indexOf(',');\n\tif (index === -1)\n\t\tindex = 0;\n\telse\n\t\tindex++;\n\n\treturn exports.createBuffer(self.substring(index), 'base64');\n};\n\nString.prototype.base64ContentType = function() {\n\tvar self = this;\n\tvar index = self.indexOf(';');\n\treturn index === -1 ? '' : self.substring(5, index);\n};\n\nString.prototype.removeDiacritics = function() {\n\treturn exports.removeDiacritics(this);\n};\n\nString.prototype.indent = function(max, c) {\n\tvar plus = '';\n\tif (c === undefined)\n\t\tc = ' '\n\twhile (max--)\n\t\tplus += c;\n\treturn plus + this;\n};\n\nString.prototype.isNumber = function(isDecimal) {\n\n\tvar self = this;\n\tvar length = self.length;\n\n\tif (!length)\n\t\treturn false;\n\n\tisDecimal = isDecimal || false;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar ascii = self.charCodeAt(i);\n\n\t\tif (isDecimal) {\n\t\t\tif (ascii === 44 || ascii === 46) {\n\t\t\t\tisDecimal = false;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tif (ascii < 48 || ascii > 57)\n\t\t\treturn false;\n\t}\n\n\treturn true;\n};\n\nif (!String.prototype.padLeft) {\n\tString.prototype.padLeft = function(max, c) {\n\t\tvar self = this;\n\t\tvar len = max - self.length;\n\t\tif (len < 0)\n\t\t\treturn self;\n\t\tif (c === undefined)\n\t\t\tc = ' ';\n\t\twhile (len--)\n\t\t\tself = c + self;\n\t\treturn self;\n\t};\n}\n\n\nif (!String.prototype.padRight) {\n\tString.prototype.padRight = function(max, c) {\n\t\tvar self = this;\n\t\tvar len = max - self.length;\n\t\tif (len < 0)\n\t\t\treturn self;\n\t\tif (c === undefined)\n\t\t\tc = ' ';\n\t\twhile (len--)\n\t\t\tself += c;\n\t\treturn self;\n\t};\n}\n\nString.prototype.insert = function(index, value) {\n\tvar str = this;\n\tvar a = str.substring(0, index);\n\tvar b = value.toString() + str.substring(index);\n\treturn a + b;\n};\n\n/**\n * Create a link from String\n * @param  {Number} max A maximum length, default: 60 and optional.\n * @return {String}\n */\nString.prototype.slug = String.prototype.toSlug = String.prototype.toLinker = String.prototype.linker = function(max) {\n\tmax = max || 60;\n\n\tvar self = this.trim().toLowerCase().removeDiacritics();\n\tvar builder = '';\n\tvar length = self.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar c = self[i];\n\t\tvar code = self.charCodeAt(i);\n\n\t\tif (builder.length >= max)\n\t\t\tbreak;\n\n\t\tif (code > 31 && code < 48) {\n\t\t\tif (builder[builder.length - 1] !== '-')\n\t\t\t\tbuilder += '-';\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ((code > 47 && code < 58) || (code > 94 && code < 123))\n\t\t\tbuilder += c;\n\t}\n\tvar l = builder.length - 1;\n\treturn builder[l] === '-' ? builder.substring(0, l) : builder;\n};\n\nString.prototype.pluralize = function(zero, one, few, other) {\n\treturn this.parseInt().pluralize(zero, one, few, other);\n};\n\nString.prototype.isBoolean = function() {\n\tvar self = this.toLowerCase();\n\treturn (self === 'true' || self === 'false') ? true : false;\n};\n\n/**\n * Check if the string contains only letters and numbers.\n * @return {Boolean}\n */\nString.prototype.isAlphaNumeric = function() {\n  return regexpALPHA.test(this);\n};\n\nString.prototype.soundex = function() {\n\n\tvar arr = this.toLowerCase().split('');\n\tvar first = arr.shift();\n\tvar builder = first.toUpperCase();\n\n\tfor (var i = 0, length = arr.length; i < length; i++) {\n\t\tvar v = SOUNDEX[arr[i]];\n\t\tif (v === undefined)\n\t\t\tcontinue;\n\t\tif (i) {\n\t\t\tif (v !== arr[i - 1])\n\t\t\t\tbuilder += v;\n\t\t} else if (v !== SOUNDEX[first])\n\t\t\tbuilder += v;\n\t}\n\n\treturn (builder + '000').substring(0, 4);\n};\n\n/**\n* Remove all Html Tags from a string\n* @return {string}\n*/\nString.prototype.removeTags = function() {\n\treturn this.replace(regexpTags, '');\n};\n\nNumber.prototype.floor = function(decimals) {\n\treturn Math.floor(this * Math.pow(10, decimals)) / Math.pow(10, decimals);\n};\n\nNumber.prototype.padLeft = function(max, c) {\n\treturn this.toString().padLeft(max, c || '0');\n};\n\nNumber.prototype.padRight = function(max, c) {\n\treturn this.toString().padRight(max, c || '0');\n};\n\n/**\n * Async decrements\n * @param {Function(index, next)} fn\n * @param {Function} callback\n * @return {Number}\n */\nNumber.prototype.async = function(fn, callback) {\n\tvar number = this;\n\tif (number)\n\t\tfn(number--, () => setImmediate(() => number.async(fn, callback)));\n\telse\n\t\tcallback && callback();\n\treturn number;\n};\n\n/**\n * Format number\n * @param {Number} decimals Maximum decimal numbers\n * @param {String} separator Number separator, default ' '\n * @param {String} separatorDecimal Decimal separator, default '.' if number separator is ',' or ' '.\n * @return {String}\n */\nNumber.prototype.format = function(decimals, separator, separatorDecimal) {\n\n\tvar self = this;\n\n\tif (typeof(decimals) === 'string')\n\t\treturn self.format2(decimals);\n\n\tvar num = self.toString();\n\tvar dec = '';\n\tvar output = '';\n\tvar minus = num[0] === '-' ? '-' : '';\n\tif (minus)\n\t\tnum = num.substring(1);\n\n\tvar index = num.indexOf('.');\n\n\tif (typeof(decimals) === 'string') {\n\t\tvar tmp = separator;\n\t\tseparator = decimals;\n\t\tdecimals = tmp;\n\t}\n\n\tif (separator === undefined)\n\t\tseparator = ' ';\n\n\tif (index !== -1) {\n\t\tdec = num.substring(index + 1);\n\t\tnum = num.substring(0, index);\n\t}\n\n\tindex = -1;\n\tfor (var i = num.length - 1; i >= 0; i--) {\n\t\tindex++;\n\t\tif (index > 0 && index % 3 === 0)\n\t\t\toutput = separator + output;\n\t\toutput = num[i] + output;\n\t}\n\n\tif (decimals || dec.length) {\n\t\tif (dec.length > decimals)\n\t\t\tdec = dec.substring(0, decimals || 0);\n\t\telse\n\t\t\tdec = dec.padRight(decimals || 0, '0');\n\t}\n\n\tif (dec.length && separatorDecimal === undefined)\n\t\tseparatorDecimal = separator === '.' ? ',' : '.';\n\n\treturn minus + output + (dec.length ? separatorDecimal + dec : '');\n};\n\nNumber.prototype.add = function(value, decimals) {\n\n\tif (value == null)\n\t\treturn this;\n\n\tif (typeof(value) === 'number')\n\t\treturn this + value;\n\n\tvar first = value.charCodeAt(0);\n\tvar is = false;\n\n\tif (first < 48 || first > 57) {\n\t\tis = true;\n\t\tvalue = value.substring(1);\n\t}\n\n\tvar length = value.length;\n\tvar isPercentage = false;\n\tvar num;\n\n\tif (value[length - 1] === '%') {\n\t\tvalue = value.substring(0, length - 1);\n\t\tisPercentage = true;\n\n\t\tif (is) {\n\t\t\tvar val = value.parseFloat();\n\t\t\tswitch (first) {\n\t\t\t\tcase 42:\n\t\t\t\t\tnum = this * ((this / 100) * val);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 43:\n\t\t\t\t\tnum = this + ((this / 100) * val);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 45:\n\t\t\t\t\tnum = this - ((this / 100) * val);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 47:\n\t\t\t\t\tnum = this / ((this / 100) * val);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn decimals !== undefined ? num.floor(decimals) : num;\n\t\t} else {\n\t\t\tnum = (this / 100) * value.parseFloat();\n\t\t\treturn decimals !== undefined ? num.floor(decimals) : num;\n\t\t}\n\n\t} else\n\t\tnum = value.parseFloat();\n\n\tswitch (first) {\n\t\tcase 42:\n\t\t\tnum = this * num;\n\t\t\tbreak;\n\t\tcase 43:\n\t\t\tnum = this + num;\n\t\t\tbreak;\n\t\tcase 45:\n\t\t\tnum = this - num;\n\t\t\tbreak;\n\t\tcase 47:\n\t\t\tnum = this / num;\n\t\t\tbreak;\n\t\tcase 47:\n\t\t\tnum = this / num;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tnum = this;\n\t\t\tbreak;\n\t}\n\n\tif (decimals !== undefined)\n\t\treturn num.floor(decimals);\n\n\treturn num;\n};\n\nNumber.prototype.format2 = function(format) {\n\tvar index = 0;\n\tvar num = this.toString();\n\tvar beg = 0;\n\tvar end = 0;\n\tvar max = 0;\n\tvar output = '';\n\tvar length = 0;\n\n\tif (typeof(format) === 'string') {\n\n\t\tvar d = false;\n\t\tlength = format.length;\n\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar c = format[i];\n\t\t\tif (c === '#') {\n\t\t\t\tif (d)\n\t\t\t\t\tend++;\n\t\t\t\telse\n\t\t\t\t\tbeg++;\n\t\t\t}\n\n\t\t\tif (c === '.')\n\t\t\t\td = true;\n\t\t}\n\n\t\tvar strBeg = num;\n\t\tvar strEnd = '';\n\n\t\tindex = num.indexOf('.');\n\n\t\tif (index !== -1) {\n\t\t\tstrBeg = num.substring(0, index);\n\t\t\tstrEnd = num.substring(index + 1);\n\t\t}\n\n\t\tif (strBeg.length > beg) {\n\t\t\tmax = strBeg.length - beg;\n\t\t\tvar tmp = '';\n\t\t\tfor (var i = 0; i < max; i++)\n\t\t\t\ttmp += '#';\n\n\t\t\tformat = tmp + format;\n\t\t}\n\n\t\tif (strBeg.length < beg)\n\t\t\tstrBeg = strBeg.padLeft(beg, ' ');\n\n\t\tif (strEnd.length < end)\n\t\t\tstrEnd = strEnd.padRight(end, '0');\n\n\t\tif (strEnd.length > end)\n\t\t\tstrEnd = strEnd.substring(0, end);\n\n\t\td = false;\n\t\tindex = 0;\n\n\t\tvar skip = true;\n\t\tlength = format.length;\n\n\t\tfor (var i = 0; i < length; i++) {\n\n\t\t\tvar c = format[i];\n\n\t\t\tif (c !== '#') {\n\n\t\t\t\tif (skip)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tif (c === '.') {\n\t\t\t\t\td = true;\n\t\t\t\t\tindex = 0;\n\t\t\t\t}\n\n\t\t\t\toutput += c;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar value = d ? strEnd[index] : strBeg[index];\n\n\t\t\tif (skip)\n\t\t\t\tskip = [',', ' '].indexOf(value) !== -1;\n\n\t\t\tif (!skip)\n\t\t\t\toutput += value;\n\n\t\t\tindex++;\n\t\t}\n\n\t\treturn output;\n\t}\n\n\toutput = '### ### ###';\n\tbeg = num.indexOf('.');\n\tmax = format || 0;\n\n\tif (max === 0 && beg !== -1)\n\t\tmax = num.length - (beg + 1);\n\n\tif (max > 0) {\n\t\toutput += '.';\n\t\tfor (var i = 0; i < max; i++)\n\t\t\toutput += '#';\n\t}\n\n\treturn this.format(output);\n};\n\nNumber.prototype.pluralize = function(zero, one, few, other) {\n\n\tvar num = this;\n\tvar value = '';\n\n\tif (num == 0)\n\t\tvalue = zero || '';\n\telse if (num == 1)\n\t\tvalue = one || '';\n\telse if (num > 1 && num < 5)\n\t\tvalue = few || '';\n\telse\n\t\tvalue = other;\n\n\tvar beg = value.indexOf('#');\n\tif (beg === -1)\n\t\treturn value;\n\n\tvar end = value.lastIndexOf('#');\n\tvar format = value.substring(beg, end + 1);\n\treturn num.format(format) + value.replace(format, '');\n};\n\nNumber.prototype.hex = function(length) {\n\tvar str = this.toString(16).toUpperCase();\n\twhile(str.length < length)\n\t\tstr = '0' + str;\n\treturn str;\n};\n\nNumber.prototype.VAT = function(percentage, decimals, includedVAT) {\n\tvar num = this;\n\tvar type = typeof(decimals);\n\n\tif (type === 'boolean') {\n\t\tvar tmp = includedVAT;\n\t\tincludedVAT = decimals;\n\t\tdecimals = tmp;\n\t\ttype = typeof(decimals);\n\t}\n\n\tif (type === 'undefined')\n\t\tdecimals = 2;\n\n\tif (includedVAT === undefined)\n\t\tincludedVAT = true;\n\n\tif (percentage === 0 || num === 0)\n\t\treturn num;\n\n\treturn includedVAT ? (num / ((percentage / 100) + 1)).floor(decimals) : (num * ((percentage / 100) + 1)).floor(decimals);\n};\n\nNumber.prototype.discount = function(percentage, decimals) {\n\tvar num = this;\n\tif (decimals === undefined)\n\t\tdecimals = 2;\n\treturn (num - (num / 100) * percentage).floor(decimals);\n};\n\nNumber.prototype.parseDate = function(plus) {\n\treturn new Date(this + (plus || 0));\n};\n\nif (!Number.prototype.toRad) {\n\tNumber.prototype.toRad = function () {\n\t\treturn this * Math.PI / 180;\n\t};\n}\n\n\nNumber.prototype.filesize = function(decimals, type) {\n\n\tif (typeof(decimals) === 'string') {\n\t\tvar tmp = type;\n\t\ttype = decimals;\n\t\tdecimals = tmp;\n\t}\n\n\tvar value;\n\n\t// this === bytes\n\tswitch (type) {\n\t\tcase 'bytes':\n\t\t\tvalue = this;\n\t\t\tbreak;\n\t\tcase 'KB':\n\t\t\tvalue = this / 1024;\n\t\t\tbreak;\n\t\tcase 'MB':\n\t\t\tvalue = filesizehelper(this, 2);\n\t\t\tbreak;\n\t\tcase 'GB':\n\t\t\tvalue = filesizehelper(this, 3);\n\t\t\tbreak;\n\t\tcase 'TB':\n\t\t\tvalue = filesizehelper(this, 4);\n\t\t\tbreak;\n\t\tdefault:\n\n\t\t\ttype = 'bytes';\n\t\t\tvalue = this;\n\n\t\t\tif (value > 1023) {\n\t\t\t\tvalue = value / 1024;\n\t\t\t\ttype = 'KB';\n\t\t\t}\n\n\t\t\tif (value > 1023) {\n\t\t\t\tvalue = value / 1024;\n\t\t\t\ttype = 'MB';\n\t\t\t}\n\n\t\t\tif (value > 1023) {\n\t\t\t\tvalue = value / 1024;\n\t\t\t\ttype = 'GB';\n\t\t\t}\n\n\t\t\tif (value > 1023) {\n\t\t\t\tvalue = value / 1024;\n\t\t\t\ttype = 'TB';\n\t\t\t}\n\n\t\t\tbreak;\n\t}\n\n\ttype = ' ' + type;\n\treturn (decimals === undefined ? value.format(2).replace('.00', '') : value.format(decimals)) + type;\n};\n\nfunction filesizehelper(number, count) {\n\twhile (count--) {\n\t\tnumber = number / 1024;\n\t\tif (number.toFixed(3) === '0.000')\n\t\t\treturn 0;\n\t}\n\treturn number;\n}\n\n/**\n * Take items from array\n * @param {Number} count\n * @return {Array}\n */\nArray.prototype.take = function(count) {\n\tvar arr = [];\n\tvar self = this;\n\tvar length = self.length;\n\tfor (var i = 0; i < length; i++) {\n\t\tarr.push(self[i]);\n\t\tif (arr.length >= count)\n\t\t\treturn arr;\n\t}\n\treturn arr;\n};\n\n/**\n * Extend objects in Array\n * @param {Object} obj\n * @param {Boolean} rewrite Default: false.\n * @return {Array} Returns self\n */\nArray.prototype.extend = function(obj, rewrite) {\n\tvar isFn = typeof(obj) === 'function';\n\tfor (var i = 0, length = this.length; i < length; i++) {\n\t\tif (isFn)\n\t\t\tthis[i] = obj(this[i], i);\n\t\telse\n\t\t\tthis[i] = exports.extend(this[i], obj, rewrite);\n\t}\n\treturn this;\n};\n\n/**\n * First item in array\n * @param {Object} def Default value.\n * @return {Object}\n */\nArray.prototype.first = function(def) {\n\tvar item = this[0];\n\treturn item === undefined ? def : item;\n};\n\n/**\n * Create object from Array\n * @param {String} name Optional, property name.\n * @return {Object}\n */\nArray.prototype.toObject = function(name) {\n\n\tvar self = this;\n\tvar obj = {};\n\n\tfor (var i = 0, length = self.length; i < length; i++) {\n\t\tvar item = self[i];\n\t\tif (name)\n\t\t\tobj[item[name]] = item;\n\t\telse\n\t\t\tobj[item] = true;\n\t}\n\n\treturn obj;\n};\n\n/**\n * Compare two arrays\n * @param {String} id An identificator.\n * @param {Array} b Second array.\n * @param {Function(itemA, itemB, indexA, indexB)} executor\n */\nArray.prototype.compare = function(id, b, executor) {\n\n\tvar a = this;\n\tvar ak = {};\n\tvar bk = {};\n\tvar al = a.length;\n\tvar bl = b.length;\n\tvar tl = Math.max(al, bl);\n\tvar processed = {};\n\n\tfor (var i = 0; i < tl; i++) {\n\t\tvar av = a[i];\n\t\tif (av)\n\t\t\tak[av[id]] = i;\n\t\tvar bv = b[i];\n\t\tif (bv)\n\t\t\tbk[bv[id]] = i;\n\t}\n\n\tvar index = -1;\n\n\tfor (var i = 0; i < tl; i++) {\n\n\t\tvar av = a[i];\n\t\tvar bv = b[i];\n\t\tvar akk;\n\t\tvar bkk;\n\n\t\tif (av) {\n\t\t\takk = av[id];\n\t\t\tif (processed[akk])\n\t\t\t\tcontinue;\n\t\t\tprocessed[akk] = true;\n\t\t\tindex = bk[akk];\n\t\t\tif (index === undefined)\n\t\t\t\texecutor(av, undefined, i, -1);\n\t\t\telse\n\t\t\t\texecutor(av, b[index], i, index);\n\t\t}\n\n\t\tif (bv) {\n\t\t\tbkk = bv[id];\n\t\t\tif (processed[bkk])\n\t\t\t\tcontinue;\n\t\t\tprocessed[bkk] = true;\n\t\t\tindex = ak[bkk];\n\t\t\tif (index === undefined)\n\t\t\t\texecutor(undefined, bv, -1, i);\n\t\t\telse\n\t\t\t\texecutor(a[index], bv, index, i);\n\t\t}\n\t}\n};\n\n/**\n * Pair arrays\n * @param {Array} arr\n * @param {String} property\n * @param {Function(itemA, itemB)} fn Paired items (itemA == this, itemB == arr)\n * @param {Boolean} remove Optional, remove item from this array if the item doesn't exist int arr (default: false).\n * @return {Array}\n */\nArray.prototype.pair = function(property, arr, fn, remove) {\n\n\tif (property instanceof Array) {\n\t\tvar tmp = property;\n\t\tproperty = arr;\n\t\tarr = tmp;\n\t}\n\n\tif (!arr)\n\t\tarr = new Array(0);\n\n\tvar length = arr.length;\n\tvar index = 0;\n\n\twhile (true) {\n\t\tvar item = this[index++];\n\t\tif (!item)\n\t\t\tbreak;\n\n\t\tvar is = false;\n\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tif (item[property] !== arr[i][property])\n\t\t\t\tcontinue;\n\t\t\tfn(item, arr[i]);\n\t\t\tis = true;\n\t\t\tbreak;\n\t\t}\n\n\t\tif (is || !remove)\n\t\t\tcontinue;\n\n\t\tindex--;\n\t\tthis.splice(index, 1);\n\t}\n\n\treturn this;\n};\n\n/**\n * Last item in array\n * @param {Object} def Default value.\n * @return {Object}\n */\nArray.prototype.last = function(def) {\n\tvar item = this[this.length - 1];\n\treturn item === undefined ? def : item;\n};\n\nArray.prototype.quicksort = Array.prototype.orderBy = function(name, asc, maxlength) {\n\n\tvar length = this.length;\n\tif (!length || length === 1)\n\t\treturn this;\n\n\tif (typeof(name) === 'boolean') {\n\t\tasc = name;\n\t\tname = undefined;\n\t}\n\n\tif (maxlength === undefined)\n\t\tmaxlength = 3;\n\n\tif (asc === undefined)\n\t\tasc = true;\n\n\tvar self = this;\n\tvar type = 0;\n\tvar field = name ? self[0][name] : self[0];\n\n\tswitch (typeof(field)) {\n\t\tcase 'string':\n\t\t\tif (field.isJSONDate())\n\t\t\t\ttype = 4;\n\t\t\telse\n\t\t\t\ttype = 1;\n\t\t\tbreak;\n\t\tcase 'number':\n\t\t\ttype = 2;\n\t\t\tbreak;\n\t\tcase 'boolean':\n\t\t\ttype = 3;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (!exports.isDate(field))\n\t\t\t\treturn self;\n\t\t\ttype = 4;\n\t\t\tbreak;\n\t}\n\n\tshellsort(self, function(a, b) {\n\n\t\tvar va = name ? a[name] : a;\n\t\tvar vb = name ? b[name] : b;\n\n\t\t// String\n\t\tif (type === 1) {\n\t\t\treturn va && vb ? (asc ? va.substring(0, maxlength).removeDiacritics().localeCompare(vb.substring(0, maxlength).removeDiacritics()) : vb.substring(0, maxlength).removeDiacritics().localeCompare(va.substring(0, maxlength).removeDiacritics())) : 0;\n\t\t} else if (type === 2) {\n\t\t\treturn va > vb ? (asc ? 1 : -1) : va < vb ? (asc ? -1 : 1) : 0;\n\t\t} else if (type === 3) {\n\t\t\treturn va === true && vb === false ? (asc ? 1 : -1) : va === false && vb === true ? (asc ? -1 : 1) : 0;\n\t\t} else if (type === 4) {\n\t\t\tif (!va || !vb)\n\t\t\t\treturn 0;\n\t\t\tif (!va.getTime)\n\t\t\t\tva = new Date(va);\n\t\t\tif (!vb.getTime)\n\t\t\t\tvb = new Date(vb);\n\t\t\tvar at = va.getTime();\n\t\t\tvar bt = vb.getTime();\n\t\t\treturn at > bt ? (asc ? 1 : -1) : at < bt ? (asc ? -1 : 1) : 0;\n\t\t}\n\t\treturn 0;\n\t});\n\n\treturn self;\n};\n\nArray.prototype.trim = function() {\n\tvar self = this;\n\tvar output = [];\n\tfor (var i = 0, length = self.length; i < length; i++) {\n\t\tif (typeof(self[i]) === 'string')\n\t\t\tself[i] = self[i].trim();\n\t\tself[i] && output.push(self[i]);\n\t}\n\treturn output;\n};\n\n/**\n * Skip items from array\n * @param {Number} count\n * @return {Array}\n */\nArray.prototype.skip = function(count) {\n\tvar arr = [];\n\tvar self = this;\n\tvar length = self.length;\n\tfor (var i = 0; i < length; i++)\n\t\ti >= count && arr.push(self[i]);\n\treturn arr;\n};\n\n/**\n * Find items in Array\n * @param {Function(item, index) or String/Object} cb\n * @param {Object} value Optional.\n * @return {Array}\n */\nArray.prototype.where = function(cb, value) {\n\n\tvar self = this;\n\tvar selected = [];\n\tvar isFN = typeof(cb) === 'function';\n\tvar isV = value !== undefined;\n\n\tfor (var i = 0, length = self.length; i < length; i++) {\n\n\t\tif (isFN) {\n\t\t\tcb.call(self, self[i], i) && selected.push(self[i]);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (isV) {\n\t\t\tself[i] && self[i][cb] === value && selected.push(self[i]);\n\t\t\tcontinue;\n\t\t}\n\n\t\tself[i] === cb && selected.push(self[i]);\n\t}\n\n\treturn selected;\n};\n\n/**\n * Find item in Array\n * @param {Function(item, index) or String/Object} cb\n * @param {Object} value Optional.\n * @return {Array}\n */\nArray.prototype.findItem = Array.prototype.find = function(cb, value) {\n\tvar self = this;\n\tvar index = self.findIndex(cb, value);\n\tif (index === -1)\n\t\treturn null;\n\treturn self[index];\n};\n\nArray.prototype.findIndex = function(cb, value) {\n\n\tvar self = this;\n\tvar isFN = typeof(cb) === 'function';\n\tvar isV = value !== undefined;\n\n\tfor (var i = 0, length = self.length; i < length; i++) {\n\n\t\tif (isFN) {\n\t\t\tif (cb.call(self, self[i], i))\n\t\t\t\treturn i;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (isV) {\n\t\t\tif (self[i] && self[i][cb] === value)\n\t\t\t\treturn i;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (self[i] === cb)\n\t\t\treturn i;\n\t}\n\n\treturn -1;\n};\n\n/**\n * Remove items from Array\n * @param {Function(item, index) or Object} cb\n * @param {Object} value Optional.\n * @return {Array}\n */\nArray.prototype.remove = function(cb, value) {\n\n\tvar self = this;\n\tvar arr = [];\n\tvar isFN = typeof(cb) === 'function';\n\tvar isV = value !== undefined;\n\n\tfor (var i = 0, length = self.length; i < length; i++) {\n\n\t\tif (isFN) {\n\t\t\t!cb.call(self, self[i], i) && arr.push(self[i]);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (isV) {\n\t\t\tself[i] && self[i][cb] !== value && arr.push(self[i]);\n\t\t\tcontinue;\n\t\t}\n\n\t\tself[i] !== cb && arr.push(self[i]);\n\t}\n\treturn arr;\n};\n\nArray.prototype.wait = Array.prototype.waitFor = function(onItem, callback, thread) {\n\n\tvar self = this;\n\tvar init = false;\n\n\t// INIT\n\tif (!onItem.$index) {\n\t\tonItem.$pending = 0;\n\t\tonItem.$index = 0;\n\t\tinit = true;\n\t\tif (typeof(callback) === 'number') {\n\t\t\tvar tmp = thread;\n\t\t\tthread = callback;\n\t\t\tcallback = tmp;\n\t\t}\n\t}\n\n\tif (thread === undefined)\n\t\tthread = 1;\n\n\tvar item = thread === true ? self.shift() : self[onItem.$index];\n\tonItem.$index++;\n\n\tif (item === undefined) {\n\t\tif (onItem.$pending)\n\t\t\treturn self;\n\t\tcallback && callback();\n\t\tonItem.$index = 0;\n\t\treturn self;\n\t}\n\n\tonItem.$pending++;\n\tonItem.call(self, item, function() {\n\t\tsetImmediate(function() {\n\t\t\tonItem.$pending--;\n\t\t\tself.wait(onItem, callback, thread);\n\t\t});\n\t});\n\n\tif (!init || thread === true)\n\t\treturn self;\n\n\tfor (var i = 1; i < thread; i++)\n\t\tself.wait(onItem, callback, 0);\n\n\treturn self;\n};\n\n/**\n * Creates a function async list\n * @param {Function} callback Optional\n * @return {Array}\n */\nArray.prototype.async = function(thread, callback) {\n\n\tvar self = this;\n\tvar init = false;\n\n\tif (typeof(thread) === 'function') {\n\t\tcallback = thread;\n\t\tthread = 1;\n\t} else if (thread === undefined)\n\t\tthread = 1;\n\n\tif (self.$pending === undefined) {\n\t\tself.$pending = 0;\n\t\tinit = true;\n\t}\n\n\tvar item = self.shift();\n\tif (item === undefined) {\n\t\tif (self.$pending)\n\t\t\treturn self;\n\t\tself.$pending = undefined;\n\t\tcallback && callback();\n\t\treturn self;\n\t}\n\n\tfor (var i = 0; i < thread; i++) {\n\n\t\tif (i)\n\t\t\titem = self.shift();\n\n\t\tself.$pending++;\n\t\titem(function() {\n\t\t\tsetImmediate(function() {\n\t\t\t\tself.$pending--;\n\t\t\t\tself.async(1, callback);\n\t\t\t});\n\t\t});\n\t}\n\n\treturn self;\n};\n\nArray.prototype.randomize = function() {\n\tOBSOLETE('Array.randomize()', 'Use Array.random().');\n\treturn this.random();\n};\n\nArray.prototype.random = function() {\n\n\tvar self = this;\n\tvar random = (Math.floor(Math.random() * 100000000) * 10).toString();\n\tvar index = 0;\n\tvar old = 0;\n\n\tself.sort(function(a, b) {\n\n\t\tvar c = random[index++];\n\n\t\tif (c === undefined) {\n\t\t\tc = random[0];\n\t\t\tindex = 0;\n\t\t}\n\n\t\tif (old > c) {\n\t\t\told = c;\n\t\t\treturn -1;\n\t\t}\n\n\t\tif (old === c) {\n\t\t\told = c;\n\t\t\treturn 0;\n\t\t}\n\n\t\told = c;\n\t\treturn 1;\n\t});\n\n\treturn self;\n};\n\nArray.prototype.limit = function(max, fn, callback, index) {\n\n\tif (index === undefined)\n\t\tindex = 0;\n\n\tvar current = [];\n\tvar self = this;\n\tvar length = index + max;\n\n\tfor (var i = index; i < length; i++) {\n\t\tvar item = self[i];\n\n\t\tif (item !== undefined) {\n\t\t\tcurrent.push(item);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!current.length) {\n\t\t\tcallback && callback();\n\t\t\treturn self;\n\t\t}\n\n\t\tfn(current, () => callback && callback(), index, index + max);\n\t\treturn self;\n\t}\n\n\tif (!current.length) {\n\t\tcallback && callback();\n\t\treturn self;\n\t}\n\n\tfn(current, function() {\n\t\tif (length < self.length)\n\t\t\tself.limit(max, fn, callback, length);\n\t\telse\n\t\t\tcallback && callback();\n\t}, index, index + max);\n\n\treturn self;\n};\n\n/**\n * Get unique elements from Array\n * @return {[type]} [description]\n */\nArray.prototype.unique = function(property) {\n\n\tvar self = this;\n\tvar result = [];\n\tvar sublength = 0;\n\n\tfor (var i = 0, length = self.length; i < length; i++) {\n\t\tvar value = self[i];\n\n\t\tif (!property) {\n\t\t\tresult.indexOf(value) === -1 && result.push(value);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (sublength === 0) {\n\t\t\tresult.push(value);\n\t\t\tsublength++;\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar is = true;\n\t\tfor (var j = 0; j < sublength; j++) {\n\t\t\tif (result[j][property] === value[property]) {\n\t\t\t\tis = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (is) {\n\t\t\tresult.push(value);\n\t\t\tsublength++;\n\t\t}\n\t}\n\n\treturn result;\n};\n\nfunction AsyncTask(owner, name, fn, cb, waiting) {\n\tthis.isRunning = 0;\n\tthis.owner = owner;\n\tthis.name = name;\n\tthis.fn = fn;\n\tthis.cb = cb;\n\tthis.waiting = waiting;\n\tthis.interval = null;\n\tthis.isCanceled = false;\n}\n\nAsyncTask.prototype.run = function() {\n\tvar self = this;\n\ttry\n\t{\n\n\t\tif (self.isCanceled) {\n\t\t\tself.complete();\n\t\t\treturn self;\n\t\t}\n\n\t\tself.isRunning = 1;\n\t\tself.owner.tasksWaiting[self.name] = true;\n\t\tself.owner.emit('begin', self.name);\n\n\t\tvar timeout = self.owner.tasksTimeout[self.name];\n\t\tif (timeout > 0)\n\t\t\tself.interval = setTimeout(function() { self.timeout(); }, timeout);\n\n\t\tself.fn(function() {\n\t\t\tsetImmediate(() => self.complete());\n\t\t});\n\n\t} catch (ex) {\n\t\tself.owner.emit('error', self.name, ex);\n\t\tself.complete();\n\t}\n\treturn self;\n};\n\nAsyncTask.prototype.timeout = function(timeout) {\n\n\tvar self = this;\n\n\tif (timeout > 0) {\n\t\tclearTimeout(self.interval);\n\t\tsetTimeout(function() { self.timeout(); }, timeout);\n\t\treturn self;\n\t}\n\n\tif (timeout <= 0) {\n\t\tclearTimeout(self.interval);\n\t\tsetTimeout(function() { self.timeout(); }, timeout);\n\t\treturn self;\n\t}\n\n\tsetImmediate(() => self.cancel(true));\n\treturn self;\n};\n\nAsyncTask.prototype.cancel = function(isTimeout) {\n\tvar self = this;\n\n\tself.isCanceled = true;\n\n\tif (isTimeout)\n\t\tself.owner.emit('timeout', self.name);\n\telse\n\t\tself.owner.emit('cancel', self.name);\n\n\tself.fn = null;\n\tself.cb = null;\n\tself.complete();\n\treturn self;\n};\n\nAsyncTask.prototype.complete = function() {\n\n\tvar item = this;\n\tvar self = item.owner;\n\n\titem.isRunning = 2;\n\n\tdelete self.tasksPending[item.name];\n\tdelete self.tasksWaiting[item.name];\n\n\tif (!item.isCanceled) {\n\t\ttry\n\t\t{\n\t\t\tself.emit('end', item.name);\n\t\t\titem.cb && item.cb();\n\t\t} catch (ex) {\n\t\t\tself.emit('error', ex, item.name);\n\t\t}\n\t}\n\n\tsetImmediate(function() {\n\t\tself.reload();\n\t\tself.refresh();\n\t});\n\n\treturn self;\n};\n\nfunction Async(owner) {\n\n\tthis._max = 0;\n\tthis._count = 0;\n\tthis._isRunning = false;\n\tthis._isEnd = false;\n\n\tthis.owner = owner;\n\tthis.onComplete = [];\n\n\tthis.tasksPending = {};\n\tthis.tasksWaiting = {};\n\tthis.tasksAll = [];\n\tthis.tasksTimeout = {};\n\tthis.isCanceled = false;\n\n\tEvents.EventEmitter.call(this);\n}\n\nAsync.prototype = {\n\tget count() {\n\t\treturn this._count;\n\t},\n\n\tget percentage() {\n\t\tvar p = 100 - Math.floor((this._count * 100) / this._max);\n\t\treturn p ? p : 0;\n\t}\n};\n\nAsync.prototype.__proto__ = Object.create(Events.EventEmitter.prototype, {\n\tconstructor: {\n\t\tvalue: Async,\n\t\tenumberable: false\n\t}\n});\n\nAsync.prototype.reload = function() {\n\tvar self = this;\n\tself.tasksAll = Object.keys(self.tasksPending);\n\tself.emit('percentage', self.percentage);\n\treturn self;\n};\n\nAsync.prototype.cancel = function(name) {\n\n\tvar self = this;\n\n\tif (name === undefined) {\n\t\tself.isCanceled = true;\n\t\tfor (var i = 0; i < self._count; i++)\n\t\t\tself.cancel(self.tasksAll[i]);\n\t\treturn true;\n\t}\n\n\tvar task = self.tasksPending[name];\n\tif (!task)\n\t\treturn false;\n\n\tdelete self.tasksPending[name];\n\tdelete self.tasksWaiting[name];\n\n\ttask.cancel();\n\ttask = null;\n\tself.reload();\n\tself.refresh();\n\n\treturn true;\n};\n\nAsync.prototype.await = function(name, fn, cb) {\n\n\tvar self = this;\n\n\tif (self.isCanceled)\n\t\treturn false;\n\n\tif (typeof(name) === 'function') {\n\t\tcb = fn;\n\t\tfn = name;\n\t\tname = exports.GUID(6);\n\t}\n\n\tif (self.tasksPending[name])\n\t\treturn false;\n\n\tself.tasksPending[name] = new AsyncTask(self, name, fn, cb, null);\n\tself._max++;\n\tself.reload();\n\tself.refresh();\n\treturn true;\n};\n\nAsync.prototype.wait = function(name, waitingFor, fn, cb) {\n\n\tvar self = this;\n\n\tif (self.isCanceled)\n\t\treturn false;\n\n\tif (typeof(waitingFor) === 'function') {\n\t\tcb = fn;\n\t\tfn = waitingFor;\n\t\twaitingFor = null;\n\t}\n\n\tif (self.tasksPending[name])\n\t\treturn false;\n\n\tself.tasksPending[name] = new AsyncTask(self, name, fn, cb, waitingFor);\n\tself._max++;\n\tself.reload();\n\tself.refresh();\n\treturn true;\n};\n\nAsync.prototype.complete = function(fn) {\n\treturn this.run(fn);\n};\n\nAsync.prototype.run = function(fn) {\n\tthis._isRunning = true;\n\tfn && this.onComplete.push(fn);\n\tthis.refresh();\n\treturn this;\n};\n\nAsync.prototype.isRunning = function(name) {\n\tif (!name)\n\t\treturn this._isRunning;\n\tvar task = this.tasksPending[name];\n\treturn task ? task.isRunning === 1 : false;\n};\n\nAsync.prototype.isWaiting = function(name) {\n\tvar task = this.tasksPending[name];\n\treturn task ? task.isRunning === 0 : false;\n};\n\nAsync.prototype.isPending = function(name) {\n\treturn this.tasksPending[name] ? true : false;\n};\n\nAsync.prototype.timeout = function(name, timeout) {\n\tif (timeout)\n\t\tthis.tasksTimeout[name] = timeout;\n\telse\n\t\tthis.tasksTimeout[name] = undefined;\n\treturn this;\n};\n\nAsync.prototype.refresh = function(name) {\n\n\tvar self = this;\n\n\tif (!self._isRunning || self._isEnd)\n\t\treturn self;\n\n\tself._count = self.tasksAll.length;\n\tvar index = 0;\n\n\twhile (true) {\n\t\tvar name = self.tasksAll[index++];\n\t\tif (!name)\n\t\t\tbreak;\n\n\t\tvar task = self.tasksPending[name];\n\t\tif (!task)\n\t\t\tbreak;\n\n\t\tif (self.isCanceled || task.isCanceled) {\n\t\t\tdelete self.tasksPending[name];\n\t\t\tdelete self.tasksWaiting[name];\n\t\t\tself.tasksAll.splice(index, 1);\n\t\t\tself._count = self.tasksAll.length;\n\t\t\tindex--;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (task.isRunning !== 0 || (task.waiting && self.tasksPending[task.waiting]))\n\t\t\tcontinue;\n\n\t\ttask.run();\n\t}\n\n\tif (self._count === 0) {\n\t\tself._isRunning = false;\n\t\tself._isEnd = true;\n\t\tself.emit('complete');\n\t\tself.emit('percentage', 100);\n\t\tself._max = 0;\n\t\tvar complete = self.onComplete;\n\t\tvar length = complete.length;\n\t\tself.onComplete = [];\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\ttry\n\t\t\t{\n\t\t\t\tcomplete[i]();\n\t\t\t} catch (ex) {\n\t\t\t\tself.emit('error', ex);\n\t\t\t}\n\t\t}\n\t\tsetImmediate(() => self._isEnd = false);\n\t}\n\n\treturn self;\n};\n\nfunction FileList() {\n\tthis.pending = [];\n\tthis.pendingDirectory = [];\n\tthis.directory = [];\n\tthis.file = [];\n\tthis.onComplete = null;\n\tthis.onFilter = null;\n\tthis.advanced = false;\n}\n\nFileList.prototype.reset = function() {\n\tthis.file.length = 0;\n\tthis.directory.length = 0;\n\tthis.pendingDirectory.length = 0;\n\treturn this;\n};\n\nFileList.prototype.walk = function(directory) {\n\n\tvar self = this;\n\n\tif (directory instanceof Array) {\n\t\tvar length = directory.length;\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tself.pendingDirectory.push(directory[i]);\n\t\tself.next();\n\t\treturn;\n\t}\n\n\tFs.readdir(directory, function(err, arr) {\n\t\tif (err)\n\t\t\treturn self.next();\n\t\tvar length = arr.length;\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tself.pending.push(Path.join(directory, arr[i]));\n\t\tself.next();\n\t});\n};\n\nFileList.prototype.stat = function(path) {\n\tvar self = this;\n\n\tFs.stat(path, function(err, stats) {\n\n\t\tif (err)\n\t\t\treturn self.next();\n\n\t\tif (stats.isDirectory() && (!self.onFilter || self.onFilter(path, true))) {\n\t\t\tself.directory.push(path);\n\t\t\tself.pendingDirectory.push(path);\n\t\t\tself.next();\n\t\t\treturn;\n\t\t}\n\n\t\tif (!self.onFilter || self.onFilter(path, false))\n\t\t\tself.file.push(self.advanced ? { filename: path, stats: stats } : path);\n\n\t\tself.next();\n\t});\n};\n\nFileList.prototype.next = function() {\n\tvar self = this;\n\n\tif (self.pending.length) {\n\t\tvar item = self.pending.shift();\n\t\tself.stat(item);\n\t\treturn;\n\t}\n\n\tif (self.pendingDirectory.length) {\n\t\tvar directory = self.pendingDirectory.shift();\n\t\tself.walk(directory);\n\t\treturn;\n\t}\n\n\tself.onComplete(self.advanced ? self.file.filename : self.file, self.directory);\n};\n\nexports.Async = Async;\n\nexports.sync = function(fn, owner) {\n\treturn function() {\n\n\t\tvar args = [].slice.call(arguments);\n\t\tvar params;\n\t\tvar callback;\n\t\tvar executed = false;\n\t\tvar self = owner || this;\n\n\t\targs.push(function() {\n\t\t\tparams = arguments;\n\t\t\tif (!executed && callback) {\n\t\t\t\texecuted = true;\n\t\t\t\tcallback.apply(self, params);\n\t\t\t}\n\t\t});\n\n\t\tfn.apply(self, args);\n\n\t\treturn function(cb) {\n\t\t\tcallback = cb;\n\t\t\tif (!executed && params) {\n\t\t\t\texecuted = true;\n\t\t\t\tcallback.apply(self, params);\n\t\t\t}\n\t\t};\n\t};\n};\n\nexports.sync2 = function(fn, owner) {\n\treturn (function() {\n\n\t\tvar params;\n\t\tvar callback;\n\t\tvar executed = false;\n\t\tvar self = owner || this;\n\t\tvar args = [].slice.call(arguments);\n\n\t\targs.push(function() {\n\t\t\tparams = arguments;\n\t\t\tif (!executed && callback) {\n\t\t\t\texecuted = true;\n\t\t\t\tcallback.apply(self, params);\n\t\t\t}\n\t\t});\n\n\t\tfn.apply(self, args);\n\n\t\treturn function(cb) {\n\t\t\tcallback = cb;\n\t\t\tif (!executed && params) {\n\t\t\t\texecuted = true;\n\t\t\t\tcallback.apply(self, params);\n\t\t\t}\n\t\t};\n\t})();\n};\n\nexports.async = function(fn, isApply) {\n\tvar context = this;\n\treturn function(complete) {\n\n\t\tvar self = this;\n\t\tvar argv;\n\n\t\tif (arguments.length) {\n\n\t\t\tif (isApply) {\n\t\t\t\t// index.js/Subscribe.prototype.doExecute\n\t\t\t\targv = arguments[1];\n\t\t\t} else {\n\t\t\t\targv = [];\n\t\t\t\tfor (var i = 1; i < arguments.length; i++)\n\t\t\t\t\targv.push(arguments[i]);\n\t\t\t}\n\t\t} else\n\t\t\targv = new Array(0);\n\n\t\tvar generator = fn.apply(context, argv);\n\t\tnext(null);\n\n\t\tfunction next(err, result) {\n\n\t\t\tvar g, type;\n\n\t\t\ttry\n\t\t\t{\n\t\t\t\tvar can = err ? false : true;\n\t\t\t\tswitch (can) {\n\t\t\t\t\tcase true:\n\t\t\t\t\t\tg = generator.next(result);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase false:\n\t\t\t\t\t\tg = generator.throw(err);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t} catch (e) {\n\n\t\t\t\tif (!complete)\n\t\t\t\t\treturn;\n\n\t\t\t\ttype = typeof(complete);\n\n\t\t\t\tif (type === 'object' && complete.isController) {\n\t\t\t\t\tif (e instanceof ErrorBuilder)\n\t\t\t\t\t\tcomplete.content(e);\n\t\t\t\t\telse\n\t\t\t\t\t\tcomplete.view500(e);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ttype === 'function' && setImmediate(() => complete(e));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (g.done) {\n\t\t\t\ttypeof(complete) === 'function' && complete(null, g.value);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar promise = g.value instanceof Promise;\n\n\t\t\tif (typeof(g.value) !== 'function' && !promise) {\n\t\t\t\tnext.call(self, null, g.value);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry\n\t\t\t{\n\t\t\t\tif (promise) {\n\t\t\t\t\tg.value.then((value) => next.call(self, null, value));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tg.value.call(self, function() {\n\t\t\t\t\tnext.apply(self, arguments);\n\t\t\t\t});\n\n\t\t\t} catch (e) {\n\t\t\t\tsetImmediate(() => next.call(self, e));\n\t\t\t}\n\t\t}\n\n\t\treturn generator.value;\n\t};\n};\n\n// MIT\n// Written by Jozef Gula\nexports.getMessageLength = function(data, isLE) {\n\n\tvar length = data[1] & 0x7f;\n\n\tif (length === 126)\n\t\treturn data.length < 4 ? -1 : converBytesToInt64([data[3], data[2], 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], 0, isLE);\n\n\tif (length === 127)\n\t\treturn data.Length < 10 ? -1 : converBytesToInt64([data[9], data[8], data[7], data[6], data[5], data[4], data[3], data[2]], 0, isLE);\n\n\treturn length;\n};\n\n// MIT\n// Written by Jozef Gula\nfunction converBytesToInt64(data, startIndex, isLE) {\n\treturn isLE ? (data[startIndex] | (data[startIndex + 1] << 0x08) | (data[startIndex + 2] << 0x10) | (data[startIndex + 3] << 0x18) | (data[startIndex + 4] << 0x20) | (data[startIndex + 5] << 0x28) | (data[startIndex + 6] << 0x30) | (data[startIndex + 7] << 0x38)) : ((data[startIndex + 7] << 0x20) | (data[startIndex + 6] << 0x28) | (data[startIndex + 5] << 0x30) | (data[startIndex + 4] << 0x38) | (data[startIndex + 3]) | (data[startIndex + 2] << 0x08) | (data[startIndex + 1] << 0x10) | (data[startIndex] << 0x18));\n}\n\nexports.queuecache = {};\n\nfunction queue_next(name) {\n\n\tvar item = exports.queuecache[name];\n\tif (!item)\n\t\treturn;\n\n\titem.running--;\n\tif (item.running < 0)\n\t\titem.running = 0;\n\n\tif (!item.pending.length)\n\t\treturn;\n\n\tvar fn = item.pending.shift();\n\tif (!fn) {\n\t\titem.running = 0;\n\t\treturn;\n\t}\n\n\titem.running++;\n\t(function(name){\n\t\tsetImmediate(function() {\n\t\t\tfn(() => queue_next(name));\n\t\t});\n\t})(name);\n}\n\n/**\n * Queue list\n * @param {String} name\n * @param {Number} max Maximum stack.\n * @param {Function(next)} fn\n */\nexports.queue = function(name, max, fn) {\n\n\tif (!fn)\n\t\treturn false;\n\n\tif (!max) {\n\t\tfn(NOOP);\n\t\treturn true;\n\t}\n\n\tif (!exports.queuecache[name])\n\t\texports.queuecache[name] = { limit: max, running: 0, pending: [] };\n\n\tvar item = exports.queuecache[name];\n\tif (item.running >= item.limit) {\n\t\titem.pending.push(fn);\n\t\treturn false;\n\t}\n\n\titem.running++;\n\t(function(name){\n\t\tsetImmediate(function() {\n\t\t\tfn(() => queue_next(name));\n\t\t});\n\t})(name);\n\n\treturn true;\n};\n\nexports.minifyStyle = function(value) {\n\treturn require('./internal').compile_css(value);\n};\n\nexports.minifyScript = function(value) {\n\treturn require('./internal').compile_javascript(value);\n};\n\nexports.minifyHTML = function(value) {\n\treturn require('./internal').compile_html(value);\n};\n\nexports.restart = function() {\n\texports.queuecache = {};\n\tdnscache = {};\n};\n\nexports.parseTheme = function(value) {\n\tif (value[0] !== '=')\n\t\treturn '';\n\tvar index = value.indexOf('/', 2);\n\tif (index === -1)\n\t\treturn '';\n\tvalue = value.substring(1, index);\n\treturn value === '?' ? F.config['default-theme'] : value;\n};\n\nexports.set = function(obj, path, value) {\n\tvar cachekey = 'S+' + path;\n\n\tif (F.temporary.other[cachekey])\n\t\treturn F.temporary.other[cachekey](obj, value);\n\n\tvar arr = path.split('.');\n\tvar builder = [];\n\tvar p = '';\n\n\tfor (var i = 0, length = arr.length; i < length; i++) {\n\t\tp += (p !== '' ? '.' : '') + arr[i];\n\t\tvar type = arr[i] instanceof Array ? '[]' : '{}';\n\n\t\tif (i !== length - 1) {\n\t\t\tbuilder.push('if(typeof(w.' + p + ')!==\"object\"||w.' + p + '===null)w.' + p + '=' + type);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (type === '{}')\n\t\t\tbreak;\n\n\t\tp = p.substring(0, p.lastIndexOf('['));\n\t\tbuilder.push('if(!(w.' + p + ' instanceof Array))w.' + p + '=' + type);\n\t\tbreak;\n\t}\n\n\tvar fn = (new Function('w', 'a', 'b', builder.join(';') + ';w.' + path.replace(/\\'/, '\\'') + '=a;return a'));\n\tF.temporary.other[cachekey] = fn;\n\tfn(obj, value, path);\n};\n\nexports.get = function(obj, path) {\n\n\tvar cachekey = 'G=' + path;\n\n\tif (F.temporary.other[cachekey])\n\t\treturn F.temporary.other[cachekey](obj);\n\n\tvar arr = path.split('.');\n\tvar builder = [];\n\tvar p = '';\n\n\tfor (var i = 0, length = arr.length - 1; i < length; i++) {\n\t\tvar tmp = arr[i];\n\t\tvar index = tmp.lastIndexOf('[');\n\t\tif (index !== -1)\n\t\t\tbuilder.push('if(!w.' + (p ? p + '.' : '') + tmp.substring(0, index) + ')return');\n\t\tp += (p !== '' ? '.' : '') + arr[i];\n\t\tbuilder.push('if(!w.' + p + ')return');\n\t}\n\n\tvar fn = (new Function('w', builder.join(';') + ';return w.' + path.replace(/\\'/, '\\'')));\n\tF.temporary.other[cachekey] = fn;\n\treturn fn(obj);\n};\n\nglobal.Async = global.async = exports.async;\nglobal.sync = global.SYNCHRONIZE = exports.sync;\nglobal.sync2 = exports.sync2;\n\n// =============================================\n// SHELL SORT IMPLEMENTATION OF ALGORITHM\n// =============================================\n\nfunction _shellInsertionSort(list, length, gapSize, fn) {\n\tvar temp, i, j;\n\tfor (i = gapSize; i < length; i += gapSize ) {\n\t\tj = i;\n\t\twhile(j > 0 && fn(list[j - gapSize], list[j]) === 1) {\n\t\t\ttemp = list[j];\n\t\t\tlist[j] = list[j - gapSize];\n\t\t\tlist[j - gapSize] = temp;\n\t\t\tj -= gapSize;\n\t\t}\n\t}\n};\n\nfunction shellsort(arr, fn) {\n\tvar length = arr.length;\n\tvar gapSize = Math.floor(length / 2);\n\twhile(gapSize) {\n\t\t_shellInsertionSort(arr, length, gapSize, fn);\n\t\tgapSize = Math.floor(gapSize / 2);\n\t}\n\treturn arr;\n};\n\nfunction Chunker(name, max) {\n\tthis.name = name;\n\tthis.max = max || 50;\n\tthis.index = 0;\n\tthis.filename = 'chunker_{0}-'.format(name);\n\tthis.stack = [];\n\tthis.flushing = 0;\n\tthis.pages = 0;\n\tthis.count = 0;\n\tthis.filename = F.path.temp(this.filename);\n}\n\nChunker.prototype.append = Chunker.prototype.write = function(obj) {\n\tvar self = this;\n\n\tself.stack.push(obj);\n\n\tvar tmp = self.stack.length;\n\n\tif (tmp >= self.max) {\n\t\tself.flushing++;\n\t\tself.pages++;\n\t\tself.count += tmp;\n\t\tFs.writeFile(self.filename + (self.index++) + '.json', JSON.stringify(self.stack), () => self.flushing--);\n\t\tself.stack = [];\n\t}\n\n\treturn self;\n};\n\nChunker.prototype.end = function() {\n\tvar self = this;\n\tvar tmp = self.stack.length;\n\tif (tmp) {\n\t\tself.flushing++;\n\t\tself.pages++;\n\t\tself.count += tmp;\n\t\tFs.writeFile(self.filename + (self.index++) + '.json', JSON.stringify(self.stack), () => self.flushing--);\n\t\tself.stack = [];\n\t}\n\n\treturn self;\n};\n\nChunker.prototype.each = function(onItem, onEnd, indexer) {\n\n\tvar self = this;\n\n\tif (indexer === undefined)\n\t\tindexer = 0;\n\n\tif (indexer >= self.index)\n\t\treturn onEnd && onEnd();\n\n\tself.read(indexer++, function(err, items) {\n\t\tonItem(items, () => self.each(onItem, onEnd, indexer), indexer - 1);\n\t});\n\n\treturn self;\n};\n\nChunker.prototype.read = function(index, callback) {\n\tvar self = this;\n\n\tif (self.flushing) {\n\t\tself.flushing_timeout = setTimeout(() => self.read(index, callback), 300);\n\t\treturn;\n\t}\n\n\tFs.readFile(self.filename + index + '.json', function(err, data) {\n\t\tif (err)\n\t\t\tcallback(null, EMPTYARRAY);\n\t\telse\n\t\t\tcallback(null, data.toString('utf8').parseJSON(true));\n\t});\n\treturn self;\n};\n\nChunker.prototype.clear = function() {\n\tvar files = [];\n\tfor (var i = 0; i < this.index; i++)\n\t\tfiles.push(this.filename + i + '.json');\n\tfiles.wait((filename, next) => Fs.unlink(filename, next));\n\treturn this;\n};\n\nChunker.prototype.destroy = function() {\n\tthis.clear();\n\tthis.indexer = 0;\n\tthis.flushing = 0;\n\tclearTimeout(this.flushing_timeout);\n\tthis.stack = null;\n\treturn this;\n};\n\nexports.chunker = function(name, max) {\n\treturn new Chunker(name, max);\n};\n\nexports.ObjectToArray = function(obj) {\n\tif (obj == null)\n\t\treturn EMPTYARRAY;\n\tvar keys = Object.keys(obj);\n\tvar output = [];\n\tfor (var i = 0, length = keys.length; i < length; i++)\n\t\toutput.push({ key: keys[i], value: obj[keys[i]]});\n\treturn output;\n};\n\nif (NODEVERSION > 699) {\n\texports.createBufferSize = (size) => Buffer.alloc(size || 0);\n\texports.createBuffer = (val, type) => Buffer.from(val || '', type);\n} else {\n\texports.createBufferSize = (size) => new Buffer(size || 0);\n\texports.createBuffer = (val, type) => new Buffer(val || '', type);\n}\n\n!global.F && require('./index');","/home/travis/build/npmtest/node-npmtest-total.js/node_modules/total.js/mail.js":"// Copyright 2012-2017 (c) Peter Širka <petersirka@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/**\n * @module FrameworkMail\n * @version 2.4.0\n */\n\n'use strict'\n\nconst Net = require('net');\nconst Tls = require('tls');\nconst Events = require('events');\nconst Fs = require('fs');\n\nconst CRLF = '\\r\\n';\nconst REG_ESMTP = /\\besmtp\\b/i;\nconst REG_STATE = /\\d+/;\nconst EMPTYARRAY = [];\nconst REG_WINLINE = /\\r\\n/g;\nconst REG_NEWLINE = /\\n/g;\n\nvar INDEXSENDER = 0;\nvar INDEXATTACHMENT = 0;\n\nif (!global.framework_utils)\n\tglobal.framework_utils = require('./utils');\n\n/**\n * Mailer\n * @class\n * @property {Boolean} debug Debug mode (true/false).\n */\nfunction Mailer() {\n\tthis.debug = false;\n\tthis.Message = Message;\n\tthis.Mail = Message;\n\tthis.connections = {};\n}\n\nMailer.prototype.__proto__ = Object.create(Events.EventEmitter.prototype, {\n\tconstructor: {\n\t\tvalue: Mailer,\n\t\tenumberable: false\n\t}\n});\n\n/**\n * Create Mail Message\n * @param {String} subject\n * @param {String} body\n * @return {MailMessage}\n */\nMailer.prototype.create = function(subject, body) {\n\treturn new Message(subject, body);\n};\n\n/**\n * Message send callback\n * @callback ResolveMxCallback\n * @param {Error} err Error handling.\n * @param {Socket} socket Net socket.\n */\n\n/**\n * Mail Message\n * @param {String} subject\n * @param {String} body\n * @property {String} subject\n * @property {String} body\n */\nfunction Message(subject, body) {\n\tthis.subject = subject || '';\n\tthis.body = body || '';\n\tthis.files;\n\tthis.addressTo = [];\n\tthis.addressReply;\n\tthis.addressCC;\n\tthis.addressBCC;\n\tthis.addressFrom = { name: '', address: '' };\n\tthis.closed = false;\n\tthis.tls = false;\n\tthis.$callback;\n\t// Supports (but it's hidden):\n\t// this.headers;\n\t// this.$unsubscribe;\n}\n\nMessage.prototype.unsubscribe = function(url) {\n\tvar tmp = url.substring(0, 6);\n\tthis.$unsubscribe = tmp === 'http:/' || tmp === 'https:' ? '<' + url + '>' : '<mailto:' + url + '>';\n\treturn this;\n};\n\nMessage.prototype.callback = function(fn) {\n\tthis.$callback = fn;\n\treturn this;\n}\n\nMessage.prototype.sender = function(address, name) {\n\treturn this.from(address, name);\n};\n\nMessage.prototype.from = function(address, name) {\n\n\tif (address[address.length - 1] === '>') {\n\t\tvar index = address.indexOf('<');\n\t\tname = address.substring(0, index - 1);\n\t\taddress = address.substring(index + 1, address.length - 1);\n\t}\n\n\tthis.addressFrom.name = name || '';\n\tthis.addressFrom.address = address;\n\treturn this;\n};\n\nMessage.prototype.to = function(address, name, clear) {\n\n\tif (typeof(name) === 'boolean') {\n\t\tclear = name;\n\t\tname = undefined;\n\t}\n\n\tif (address[address.length - 1] === '>') {\n\t\tvar index = address.indexOf('<');\n\t\tname = address.substring(0, index - 1);\n\t\taddress = address.substring(index + 1, address.length - 1);\n\t}\n\n\tif (clear)\n\t\tthis.addressTo = [];\n\n\tif (name)\n\t\tthis.addressTo.push({ email: address, name: name });\n\telse\n\t\tthis.addressTo.push(address);\n\n\treturn this;\n};\n\nMessage.prototype.cc = function(address, name, clear) {\n\n\tif (typeof(name) === 'boolean') {\n\t\tclear = name;\n\t\tname = undefined;\n\t}\n\n\tif (address[address.length - 1] === '>') {\n\t\tvar index = address.indexOf('<');\n\t\tname = address.substring(0, index - 1);\n\t\taddress = address.substring(index + 1, address.length - 1);\n\t}\n\n\tif (clear || !this.addressCC)\n\t\tthis.addressCC = [];\n\n\tif (name)\n\t\tthis.addressCC.push({ email: address, name: name });\n\telse\n\t\tthis.addressCC.push(address);\n\n\treturn this;\n};\n\nMessage.prototype.bcc = function(address, clear) {\n\tif (clear || !this.addressBCC)\n\t\tthis.addressBCC = [];\n\tthis.addressBCC.push(address);\n\treturn this;\n};\n\nMessage.prototype.reply = function(address, clear) {\n\tif (clear || !this.addressReply)\n\t\tthis.addressReply = [];\n\tthis.addressReply.push(address);\n\treturn this;\n};\n\nMessage.prototype.attachment = function(filename, name) {\n\tif (!name)\n\t\tname = framework_utils.getName(filename);\n\tvar extension = framework_utils.getExtension(name);\n\tif (!this.files)\n\t\tthis.files = [];\n\tthis.files.push({ name: name, filename: filename, contentType: framework_utils.getContentType(extension), extension: extension });\n\treturn this;\n};\n\n/**\n * Clears a timeout for sending emails (if the email is sent through the F.onMail)\n * @return {Message}\n */\nMessage.prototype.manually = function() {\n\tthis.$sending && clearTimeout(this.$sending);\n\treturn this;\n};\n\n/**\n * Adds an inline attachment.\n * Inline attachments are exactly like normal attachments except that they are represented with the 'Content-ID' (cid)\n * which can be referenced in the email's html body. For example an inline attachments (image) with a contentId of 'AB435BH'\n * can be used inside the html body as \"<img src='cid:AB435BH'>\". An enabled web client then can render and show the embedded image.\n *\n * @param {String} filename Filename with extension (e.g. '/local/path/123.jpg')\n * @param {String} name the optional filename (e.g. '123.jpg')\n * @param {String} contentId the Content-ID (e.g. 'AB435BH'), must be unique across the email\n * @returns {Message}\n */\nMessage.prototype.attachmentInline = function(filename, name, contentId) {\n\tif (!name)\n\t\tname = framework_utils.getName(filename);\n\tif (!this.files)\n\t\tthis.files = [];\n\tvar extension = framework_utils.getExtension(name);\n\tthis.files.push({ name: name, filename: filename, contentType: framework_utils.getContentType(extension), disposition: 'inline', contentId: contentId, extension: extension });\n\treturn this;\n};\n\n/**\n * Send e-mail\n * @param {String} smtp SMTP server / hostname.\n * @param {Object} options Options (optional).\n * @param {Function(err)} fnCallback\n * @return {Message}\n */\nMessage.prototype.send = function(smtp, options, callback) {\n\tmailer.send(smtp, options, this, callback);\n\treturn this;\n};\n\nMailer.prototype.switchToTLS = function(obj, options) {\n\n\tvar self = this;\n\n\tobj.tls = true;\n\tobj.socket.removeAllListeners();\n\n\tvar opt = framework_utils.copy(options.tls, { socket: obj.socket, host: obj.socket.$host, ciphers: 'SSLv3' });\n\tobj.socket2 = Tls.connect(opt, () => self._send(obj, options, true));\n\n\tobj.socket2.on('error', function(err) {\n\n\t\tmailer.destroy(obj);\n\t\tself.closed = true;\n\t\tself.callback && self.callback(err);\n\t\tself.callback = null;\n\n\t\tif (obj.try || err.stack.indexOf('ECONNRESET') !== -1)\n\t\t\treturn;\n\n\t\ttry {\n\t\t\tmailer.emit('error', err, obj);\n\t\t} catch(e) {\n\t\t\tF.error(err, 'FrameworkMail');\n\t\t}\n\t});\n\n\tobj.socket2.on('clientError', function(err) {\n\t\tmailer.destroy(obj);\n\t\tself.callback && self.callback(err);\n\t\tself.callback = null;\n\n\t\tif (obj.try)\n\t\t\treturn;\n\n\t\ttry {\n\t\t\tmailer.emit('error', err, obj);\n\t\t} catch(e) {\n\t\t\tF.error(err, 'FrameworkMail');\n\t\t}\n\t});\n\n\tobj.socket2.on('connect', () => !options.secure && self._send(obj, options));\n};\n\nMailer.prototype.destroy = function(obj) {\n\n\tif (obj.destroyed)\n\t\treturn this;\n\n\tobj.destroyed = true;\n\tobj.closed = true;\n\n\tif (obj.socket) {\n\t\tobj.socket.removeAllListeners();\n\t\tobj.socket.end();\n\t\tobj.socket.destroy();\n\t\tobj.socket = null;\n\t}\n\n\tif (obj.socket2) {\n\t\tobj.socket2.removeAllListeners();\n\t\tobj.socket2.end();\n\t\tobj.socket2.destroy();\n\t\tobj.socket2 = null;\n\t}\n\n\tdelete this.connections[obj.id];\n\treturn this;\n};\n\n/**\n * Internal: Write attachment into the current socket\n * @param  {Function} write  Write function.\n * @param  {String} boundary Boundary.\n * @param  {Socket} socket   Current socket.\n */\nMailer.prototype._writeattachment = function(obj) {\n\n\tvar attachment = obj.files ? obj.files.shift() : false;\n\tif (!attachment) {\n\t\tmailer._writeline(obj, '--' + obj.boundary + '--', '', '.');\n\t\treturn this;\n\t}\n\n\tvar name = attachment.name;\n\tvar stream = Fs.createReadStream(attachment.filename, { encoding: 'base64' });\n\tvar message = [];\n\tvar extension = attachment.extension;\n\tvar isCalendar = extension === 'ics';\n\n\tmessage.push('--' + obj.boundary);\n\n\tif (!isCalendar) {\n\t\tif (attachment.contentId) {\n\t\t\tmessage.push('Content-Disposition: inline; filename=\"' + name + '\"');\n\t\t\tmessage.push('Content-ID: <' + attachment.contentId + '>');\n\t\t} else\n\t\t\tmessage.push('Content-Disposition: attachment; filename=\"' + name + '\"');\n\t}\n\n\tmessage.push('Content-Type: ' + extension + ';' + (isCalendar ? ' charset=\"utf-8\"; method=REQUEST' : ''));\n\tmessage.push('Content-Transfer-Encoding: base64');\n\tmessage.push(CRLF);\n\tmailer._writeline(obj, message.join(CRLF));\n\n\tstream.on('data', function(buf) {\n\n\t\tvar length = buf.length;\n\t\tvar count = 0;\n\t\tvar beg = 0;\n\n\t\twhile (count < length) {\n\n\t\t\tcount += 68;\n\t\t\tif (count > length)\n\t\t\t\tcount = length;\n\n\t\t\tmailer._writeline(obj, buf.slice(beg, count).toString('base64'));\n\t\t\tbeg = count;\n\t\t}\n\t});\n\n\tCLEANUP(stream, function() {\n\t\tmailer._writeline(obj, CRLF);\n\t\tmailer._writeattachment(obj);\n\t});\n\n\treturn this;\n};\n\nMailer.prototype.try = function(smtp, options, callback) {\n\treturn this.send(smtp, options, undefined, callback);\n};\n\nMailer.prototype.send2 = function(messages, callback) {\n\n\tvar opt = F.temporary['mail-settings'];\n\n\tif (!opt) {\n\t\tvar config = F.config['mail.smtp.options'];\n\t\tif (config) {\n\t\t\tif (typeof(config) === 'object')\n\t\t\t\topt = config;\n\t\t\telse\n\t\t\t\topt = config.toString().parseJSON();\n\t\t}\n\n\t\tif (!opt)\n\t\t\topt = {};\n\n\t\tF.temporary['mail-settings'] = opt;\n\t}\n\n\treturn this.send(F.config['mail.smtp'], opt, messages, callback);\n};\n\nMailer.prototype.send = function(smtp, options, messages, callback) {\n\n\tif (options instanceof Array) {\n\t\tcallback = messages;\n\t\tmessages = options;\n\t\toptions = {};\n\t} else if (typeof(options) === 'function') {\n\t\tcallback = options;\n\t\toptions = {};\n\t}\n\n\tvar self = this;\n\tvar id = 'abcdefghijkl' + (INDEXSENDER++);\n\n\tself.connections[id] = {};\n\tvar obj = self.connections[id];\n\n\tobj.id = id;\n\tobj.try = messages === undefined;\n\tobj.messages = obj.try ? EMPTYARRAY : messages instanceof Array ? messages : [messages];\n\tobj.callback = callback;\n\tobj.closed = false;\n\tobj.message = null;\n\tobj.files = null;\n\tobj.count = 0;\n\tobj.socket;\n\tobj.tls = false;\n\tobj.date = global.F ? global.F.datetime : new Date();\n\n\tsmtp = smtp || null;\n\n\tif (options && options.secure && !options.port)\n\t\toptions.port = 465;\n\n\toptions = framework_utils.copy(options, { secure: false, port: 25, user: '', password: '', timeout: 10000, tls: null });\n\n\tif (options.secure) {\n\t\tvar internal = framework_utils.copy(options);\n\t\tinternal.host = smtp;\n\t\tobj.socket = Tls.connect(internal, () => mailer._send(obj, options));\n\t} else\n\t\tobj.socket = Net.createConnection(options.port, smtp);\n\n\tobj.socket.$host = smtp;\n\tobj.host = smtp.substring(smtp.lastIndexOf('.', smtp.lastIndexOf('.') - 1) + 1);\n\tobj.socket.on('error', function(err) {\n\n\t\tmailer.destroy(obj);\n\t\tobj.callback && obj.callback(err);\n\t\tobj.callback = null;\n\n\t\tif (obj.try || err.stack.indexOf('ECONNRESET') !== -1)\n\t\t\treturn;\n\n\t\ttry {\n\t\t\tmailer.emit('error', err, obj);\n\t\t} catch(e) {\n\t\t\tF.error(err, 'FrameworkMail');\n\t\t}\n\t});\n\n\tobj.socket.on('clientError', function(err) {\n\n\t\tmailer.destroy(obj);\n\t\tobj.callback && obj.callback(err);\n\t\tobj.callback = null;\n\n\t\tif (obj.try)\n\t\t\treturn;\n\n\t\ttry {\n\t\t\tmailer.emit('error', err, obj);\n\t\t} catch(e) {\n\t\t\tF.error(err, 'FrameworkMail');\n\t\t}\n\t});\n\n\tobj.socket.on('connect', () => !options.secure && mailer._send(obj, options));\n\treturn self;\n};\n\nMailer.prototype._writemessage = function(obj, buffer) {\n\n\tvar self = this;\n\tvar msg = obj.messages.shift();\n\tvar message = [];\n\n\n\tif (global.F)\n\t\tglobal.F.stats.other.mail++;\n\n\tobj.boundary = '--totaljs' + obj.date.getTime() + obj.count;\n\tobj.files = msg.files;\n\tobj.count++;\n\n\tbuffer.push('MAIL FROM: <' + msg.addressFrom.address + '>');\n\tmessage.push('Message-ID: <total' + (INDEXATTACHMENT++) + '@WIN-t' + (INDEXATTACHMENT) + '>');\n\tmessage.push('MIME-Version: 1.0');\n\tmessage.push('From: ' + (msg.addressFrom.name ? unicode_encode(msg.addressFrom.name) + ' <' + msg.addressFrom.address + '>' : msg.addressFrom.address));\n\n\tvar length;\n\n\tif (msg.headers) {\n\t\tvar headers = Object.keys(msg.headers);\n\t\tfor (var i = 0, length = headers.length; i < length; i++)\n\t\t\tmessage.push(headers[i] + ': ' + msg.headers[headers[i]]);\n\t}\n\n\tlength = msg.addressTo.length;\n\n\tvar builder = '';\n\tvar mail;\n\tvar item;\n\n\tif (length) {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\titem = msg.addressTo[i];\n\t\t\tif (item instanceof Object)\n\t\t\t\tmail = '<' + item.email + '>';\n\t\t\telse\n\t\t\t\tmail = '<' + item + '>';\n\t\t\tbuffer.push('RCPT TO: ' + mail);\n\t\t\tbuilder += (builder ? ', ' : '') + (item instanceof Object ? unicode_encode(item.name) + ' ' : '') + mail;\n\t\t}\n\t\tmessage.push('To: ' + builder);\n\t\tbuilder = '';\n\t}\n\n\tif (msg.addressCC) {\n\t\tlength = msg.addressCC.length;\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\titem = msg.addressCC[i];\n\t\t\tif (item instanceof Object)\n\t\t\t\tmail = '<' + item.email  + '>';\n\t\t\telse\n\t\t\t\tmail = '<' + item + '>';\n\t\t\tbuffer.push('RCPT TO: ' + mail);\n\t\t\tbuilder += (builder ? ', ' : '') + (item instanceof Object ? unicode_encode(item.name) + ' ' : '') + mail;\n\t\t}\n\t\tmessage.push('Cc: ' + builder);\n\t\tbuilder = '';\n\t}\n\n\tif (msg.addressBCC) {\n\t\tlength = msg.addressBCC.length;\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tbuffer.push('RCPT TO: <' + msg.addressBCC[i] + '>');\n\t}\n\n\tbuffer.push('DATA');\n\tbuffer.push('');\n\n\tmessage.push('Date: ' + obj.date.toUTCString());\n\tmessage.push('Subject: ' + unicode_encode(msg.subject));\n\tmsg.$unsubscribe && message.push('List-Unsubscribe: ' + msg.$unsubscribe);\n\n\tif (msg.addressReply) {\n\t\tlength = msg.addressReply.length;\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tbuilder += (builder !== '' ? ', ' : '') + '<' + msg.addressReply[i] + '>';\n\t\tmessage.push('Reply-To: ' + builder);\n\t\tbuilder = '';\n\t}\n\n\tmessage.push('Content-Type: multipart/mixed; boundary=' + obj.boundary);\n\tmessage.push('');\n\tmessage.push('--' + obj.boundary);\n\tmessage.push('Content-Type: ' + (msg.body.indexOf('<') !== -1 && msg.body.lastIndexOf('>') !== -1 ? 'text/html' : 'text/plain') + '; charset=utf-8');\n\tmessage.push('Content-Transfer-Encoding: base64');\n\tmessage.push('');\n\tmessage.push(prepareBASE64(framework_utils.createBuffer(msg.body.replace(REG_WINLINE, '\\n').replace(REG_NEWLINE, CRLF)).toString('base64')));\n\n\tobj.message = message.join(CRLF);\n\tobj.messagecallback = msg.$callback;\n\n\tmessage = null;\n\treturn self;\n};\n\nMailer.prototype._writeline = function(obj) {\n\n\tif (obj.closed)\n\t\treturn false;\n\n\tvar socket = obj.socket2 ? obj.socket2 : obj.socket;\n\n\tfor (var i = 1; i < arguments.length; i++) {\n\t\tvar line = arguments[i];\n\t\tif (line) {\n\t\t\tmailer.debug && console.log('SEND', line);\n\t\t\tsocket.write(line + CRLF);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nMailer.prototype._send = function(obj, options, autosend) {\n\n\tvar self = this;\n\tvar buffer = [];\n\tvar isAuthenticated = false;\n\tvar isAuthorization = false;\n\tvar authType = '';\n\tvar command = '';\n\tvar auth = [];\n\tvar response = '';\n\tvar socket = obj.socket2 ? obj.socket2 : obj.socket;\n\tvar host = obj.host;\n\n\tvar isAttach = !options.tls || (obj.tls && options.tls);\n\n\tisAttach && mailer.emit('send', obj);\n\tsocket.setEncoding('utf8');\n\tsocket.setTimeout(options.timeout || 8000, function() {\n\n\t\tvar err = new Error(framework_utils.httpStatus(408));\n\n\t\tmailer.destroy(obj);\n\t\tobj.callback && obj.callback(err);\n\t\tobj.callback = null;\n\n\t\tif (obj.try)\n\t\t\treturn;\n\n\t\ttry {\n\t\t\tmailer.emit('error', err, obj);\n\t\t} catch(e) {\n\t\t\tF.error(err, 'FrameworkMail');\n\t\t}\n\t});\n\n\tsocket.on('end', function() {\n\t\tmailer.destroy(obj);\n\t\tobj.callback && obj.callback();\n\t\tobj.callback = null;\n\t});\n\n\tsocket.on('data', function(data) {\n\n\t\tif (obj.closed)\n\t\t\treturn;\n\n\t\tdata = data.toString('utf8');\n\n\t\tif (!data.endsWith(CRLF)) {\n\t\t\tresponse += data;\n\t\t\treturn;\n\t\t}\n\n\t\tvar res = (response + data).split(CRLF);\n\n\t\tif (response)\n\t\t\tresponse = '';\n\n\t\tfor (var i = 0, length = res.length; i < length; i++) {\n\t\t\tvar line = res[i];\n\t\t\tline && socket && socket.emit('line', line);\n\t\t}\n\t});\n\n\tsocket.on('line', function(line) {\n\n\t\tline = line.toUpperCase();\n\t\tmailer.debug && console.log('<---', line);\n\n\t\tvar code = +line.match(REG_STATE)[0];\n\n\t\tif (code === 250 && !isAuthorization) {\n\t\t\tif ((line.indexOf('AUTH LOGIN PLAIN') !== -1 || line.indexOf('AUTH PLAIN LOGIN') !== -1) || (options.user && options.password)) {\n\t\t\t\tauthType = 'plain';\n\t\t\t\tisAuthorization = true;\n\t\t\t\tif (line.indexOf('XOAUTH') === -1) {\n\t\t\t\t\tauth.push('AUTH LOGIN');\n\t\t\t\t\tauth.push(framework_utils.createBuffer(options.user).toString('base64'));\n\t\t\t\t\tauth.push(framework_utils.createBuffer(options.password).toString('base64'));\n\t\t\t\t} else\n\t\t\t\t\tauth.push('AUTH PLAIN ' + framework_utils.createBuffer('\\0'+ options.user + '\\0' + options.password).toString('base64'));\n\t\t\t}\n\t\t}\n\n\t\t// help\n\t\tif (line.substring(3, 4) === '-')\n\t\t\treturn;\n\n\t\tif (!isAuthenticated && isAuthorization) {\n\t\t\tisAuthenticated = true;\n\t\t\tcode = 334;\n\t\t}\n\n\t\tswitch (code) {\n\t\t\tcase 220:\n\n\t\t\t\tif (obj.isTLS) {\n\t\t\t\t\tmailer.switchToTLS(obj, options);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcommand = obj.isTLS || (options.user && options.password) || REG_ESMTP.test(line) ? 'EHLO' : 'HELO';\n\t\t\t\tmailer._writeline(obj, command + ' ' + host);\n\t\t\t\tbreak;\n\n\t\t\tcase 250: // OPERATION\n\t\t\tcase 251: // FORWARD\n\t\t\tcase 235: // VERIFY\n\t\t\tcase 999: // total.js again\n\n\t\t\t\tobj.messagecallback && obj.messagecallback();\n\t\t\t\tobj.messagecallback = null;\n\t\t\t\tmailer._writeline(obj, buffer.shift());\n\n\t\t\t\tif (buffer.length)\n\t\t\t\t\treturn;\n\n\t\t\t\t// NEW MESSAGE\n\t\t\t\tif (obj.messages.length) {\n\t\t\t\t\tmailer._writemessage(obj, buffer);\n\t\t\t\t\tmailer._writeline(obj, buffer.shift());\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// end\n\t\t\t\tmailer._writeline(obj, 'QUIT');\n\t\t\t\treturn;\n\n\t\t\tcase 221: // BYE\n\t\t\t\tmailer.destroy(obj);\n\t\t\t\tobj.callback && obj.callback(null, obj.try ? true : obj.count);\n\t\t\t\tobj.callback = null;\n\t\t\t\treturn;\n\n\t\t\tcase 334: // LOGIN\n\n\t\t\t\tif (!self.tls && !obj.isTLS && options.tls) {\n\t\t\t\t\tobj.isTLS = true;\n\t\t\t\t\tmailer._writeline(obj, 'STARTTLS');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar value = auth.shift();\n\t\t\t\tif (!value) {\n\n\t\t\t\t\tvar err = new Error('Forbidden.');\n\n\t\t\t\t\tmailer.destroy(obj);\n\t\t\t\t\tobj.callback && obj.callback(err);\n\t\t\t\t\tobj.callback = null;\n\n\t\t\t\t\tif (obj.try)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tmailer.emit('error', err, obj);\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\tF.error(err, 'FrameworkMail');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tmailer._writeline(obj, value);\n\t\t\t\treturn;\n\n\t\t\tcase 354:\n\t\t\t\tmailer._writeline(obj, obj.message);\n\t\t\t\tmailer._writeattachment(obj);\n\t\t\t\tobj.message = null;\n\t\t\t\treturn;\n\n\t\t\tdefault:\n\n\t\t\t\tif (code < 400)\n\t\t\t\t\treturn;\n\n\t\t\t\tvar err = new Error(line);\n\n\t\t\t\tif (!obj.try) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tmailer.emit('error', err, obj);\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\tF.error(err, 'FrameworkMail');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tobj.messagecallback && obj.messagecallback(err);\n\t\t\t\tobj.messagecallback = null;\n\n\t\t\t\tif (obj.message) {\n\t\t\t\t\t// a problem\n\t\t\t\t\tbuffer = [];\n\t\t\t\t\tobj.count--;\n\t\t\t\t\tsocket.emit('line', '999 TRY NEXT MESSAGE');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tmailer.destroy(obj);\n\t\t\t\tobj.callback && obj.callback(err);\n\t\t\t\tobj.callback = null;\n\t\t\t\treturn;\n\t\t}\n\t});\n\n\tautosend && self._writeline(obj, 'EHLO ' + host);\n};\n\nMailer.prototype.restart = function() {\n\tvar self = this;\n\tself.removeAllListeners();\n\tself.debug = false;\n\tINDEXSENDER = 0;\n\tINDEXATTACHMENT = 0;\n};\n\n// Split Base64 to lines with 68 characters\nfunction prepareBASE64(value) {\n\n\tvar index = 0;\n\tvar output = '';\n\tvar length = value.length;\n\n\twhile (index < length) {\n\t\tvar max = index + 68;\n\t\tif (max > length)\n\t\t\tmax = length;\n\t\toutput += value.substring(index, max) + CRLF;\n\t\tindex = max;\n\t}\n\n\treturn output;\n}\n\nfunction unicode_encode(val) {\n\treturn val ? '=?utf-8?B?' + framework_utils.createBuffer(val.toString()).toString('base64') + '?=' : '';\n}\n\n// ======================================================\n// EXPORTS\n// ======================================================\n\nvar mailer = new Mailer();\nmodule.exports = mailer;","/home/travis/build/npmtest/node-npmtest-total.js/node_modules/total.js/image.js":"// Copyright 2012-2017 (c) Peter Širka <petersirka@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/**\n * @module FrameworkImage\n * @version 2.4.0\n */\n\n'use strict';\n\nconst sof = { 0xc0: true, 0xc1: true, 0xc2: true, 0xc3: true, 0xc5: true, 0xc6: true, 0xc7: true, 0xc9: true, 0xca: true, 0xcb: true, 0xcd: true, 0xce: true, 0xcf: true };\nconst child = require('child_process');\nconst exec = child.exec;\nconst spawn = child.spawn;\nconst Fs = require('fs');\nconst REGEXP_SVG = /(width=\\\"\\d+\\\")+|(height=\\\"\\d+\\\")+/g;\nconst REGEXP_PATH = /\\//g;\nconst REGEXP_ESCAPE = /\\$\\(.*?\\)|\\'/g;\n\nvar CACHE = {};\nvar middlewares = {};\n\nif (!global.framework_utils)\n\tglobal.framework_utils = require('./utils');\n\nfunction u16(buf, o) {\n\treturn buf[o] << 8 | buf[o + 1];\n}\n\nfunction u32(buf, o) {\n\treturn buf[o] << 24 | buf[o + 1] << 16 | buf[o + 2] << 8 | buf[o + 3];\n}\n\nexports.measureGIF = function(buffer) {\n\treturn { width: buffer[6], height: buffer[8] };\n};\n\n// MIT\n// Written by TJ Holowaychuk\n// visionmedia\nexports.measureJPG = function(buffer) {\n\n\tvar len = buffer.length;\n\tvar o = 0;\n\n\tvar jpeg = 0xff == buffer[0] && 0xd8 == buffer[1];\n\tif (!jpeg)\n\t\treturn;\n\n\to += 2;\n\n\twhile (o < len) {\n\n\t\twhile (0xff != buffer[o]) o++;\n\t\twhile (0xff == buffer[o]) o++;\n\n\t\tif (!sof[buffer[o]]) {\n\t\t\to += u16(buffer, ++o);\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar w = u16(buffer, o + 6);\n\t\tvar h = u16(buffer, o + 4);\n\n\t\treturn { width: w, height: h };\n\t}\n\n\treturn null;\n};\n\n// MIT\n// Written by TJ Holowaychuk\n// visionmedia\nexports.measurePNG = function(buffer) {\n\treturn { width: u32(buffer, 16), height: u32(buffer, 16 + 4) };\n};\n\nexports.measureSVG = function(buffer) {\n\n\tvar match = buffer.toString('utf8').match(REGEXP_SVG);\n\tif (!match)\n\t\treturn;\n\n\tvar width = 0;\n\tvar height = 0;\n\n\tfor (var i = 0, length = match.length; i < length; i++) {\n\t\tvar value = match[i];\n\n\t\tif (width > 0 && height > 0)\n\t\t\tbreak;\n\n\t\tif (!width && value.startsWith('width=\"'))\n\t\t\twidth = value.parseInt2();\n\n\t\tif (!height && value.startsWith('height=\"'))\n\t\t\theight = value.parseInt2();\n\t}\n\n\treturn { width: width, height: height };\n};\n\nfunction Image(filename, useImageMagick, width, height) {\n\tvar type = typeof(filename);\n\tthis.width = width;\n\tthis.height = height;\n\tthis.builder = [];\n\tthis.filename = type === 'string' ? filename : null;\n\tthis.currentStream = type === 'object' ? filename : null;\n\tthis.isIM = useImageMagick == null ? F.config['default-image-converter'] === 'im' : useImageMagick;\n\tthis.outputType = type === 'string' ? framework_utils.getExtension(filename) : 'jpg';\n}\n\nImage.prototype.clear = function() {\n\tvar self = this;\n\tself.builder = [];\n\treturn self;\n};\n\nImage.prototype.measure = function(callback) {\n\n\tvar self = this;\n\tvar index = self.filename.lastIndexOf('.');\n\n\tif (!self.filename) {\n\t\tcallback(new Error('Measure does not support stream.'));\n\t\treturn;\n\t}\n\n\tif (index === -1) {\n\t\tcallback(new Error('This type of file is not supported.'));\n\t\treturn;\n\t}\n\n\tvar extension = self.filename.substring(index).toLowerCase();\n\tvar stream = require('fs').createReadStream(self.filename, { start: 0, end: extension === '.jpg' ? 40000 : 24 });\n\n\tstream.on('data', function(buffer) {\n\n\t\tswitch (extension) {\n\t\t\tcase '.jpg':\n\t\t\t\tcallback(null, exports.measureJPG(buffer));\n\t\t\t\treturn;\n\t\t\tcase '.gif':\n\t\t\t\tcallback(null, exports.measureGIF(buffer));\n\t\t\t\treturn;\n\t\t\tcase '.png':\n\t\t\t\tcallback(null, exports.measurePNG(buffer));\n\t\t\t\treturn;\n\t\t}\n\n\t\tcallback(new Error('This type of file is not supported.'));\n\t});\n\n\tstream.on('error', callback);\n\treturn self;\n};\n\nImage.prototype.$$measure = function() {\n\tvar self = this;\n\treturn function(callback) {\n\t\tself.measure(callback);\n\t};\n};\n\n/**\n * Execute commands\n * @param {String} filename\n * @param {Function(err, filename)} callback Optional.\n * @param {Function(stream)} writer A custom stream writer, optional.\n * @return {Image}\n */\nImage.prototype.save = function(filename, callback, writer) {\n\n\tvar self = this;\n\n\tif (typeof(filename) === 'function') {\n\t\tcallback = filename;\n\t\tfilename = null;\n\t}\n\n\t!self.builder.length && self.minify();\n\tfilename = filename || self.filename || '';\n\n\tvar command = self.cmd(self.filename ? self.filename : '-', filename);\n\tif (F.isWindows)\n\t\tcommand = command.replace(REGEXP_PATH, '\\\\');\n\n\tvar cmd = exec(command, function(err, stdout, stderr) {\n\n \t\t// clean up\n\t\tcmd.kill();\n\t\tcmd = null;\n\n\t\tself.clear();\n\n\t\tif (!callback)\n\t\t\treturn;\n\n\t\tif (err) {\n\t\t\tcallback(err, false);\n\t\t\treturn;\n\t\t}\n\n\t\tvar middleware = middlewares[self.outputType];\n\t\tif (!middleware)\n\t\t\treturn callback(null, true);\n\n\t\tvar reader = Fs.createReadStream(filename);\n\t\tvar writer = Fs.createWriteStream(filename + '_');\n\n\t\treader.pipe(middleware()).pipe(writer);\n\t\twriter.on('finish', () => Fs.rename(filename + '_', filename, () => callback(null, true)));\n\t});\n\n\tif (self.currentStream) {\n\t\tif (self.currentStream instanceof Buffer)\n\t\t\tcmd.stdin.end(self.currentStream);\n\t\telse\n\t\t\tself.currentStream.pipe(cmd.stdin);\n\t}\n\n\tCLEANUP(cmd.stdin);\n\twriter && writer(cmd.stdin);\n\n\treturn self;\n};\n\nImage.prototype.$$save = function(filename, writer) {\n\tvar self = this;\n\treturn function(callback) {\n\t\tself.save(filename, callback, writer);\n\t};\n};\n\nImage.prototype.pipe = function(stream, type, options) {\n\n\tvar self = this;\n\n\tif (typeof(type) === 'object') {\n\t\toptions = type;\n\t\ttype = null;\n\t}\n\n\t!self.builder.length && self.minify();\n\n\tif (!type)\n\t\ttype = self.outputType;\n\n\tvar cmd = spawn(self.isIM ? 'convert' : 'gm', self.arg(self.filename ? wrap(self.filename) : '-', (type ? type + ':' : '') + '-'));\n\n\tcmd.stderr.on('data', stream.emit.bind(stream, 'error'));\n\tcmd.stdout.on('data', stream.emit.bind(stream, 'data'));\n\tcmd.stdout.on('end', stream.emit.bind(stream, 'end'));\n\tcmd.on('error', stream.emit.bind(stream, 'error'));\n\n\tvar middleware = middlewares[type];\n\tif (middleware)\n\t\tcmd.stdout.pipe(middleware()).pipe(stream, options);\n\telse\n\t\tcmd.stdout.pipe(stream, options);\n\n\tif (self.currentStream) {\n\t\tif (self.currentStream instanceof Buffer)\n\t\t\tcmd.stdin.end(self.currentStream);\n\t\telse\n\t\t\tself.currentStream.pipe(cmd.stdin);\n\t}\n\n\treturn self;\n};\n\n/**\n * Create a stream\n * @param {String} type File type (png, jpg, gif)\n * @param {Function(stream)} writer A custom stream writer.\n * @return {ReadStream}\n */\nImage.prototype.stream = function(type, writer) {\n\n\tvar self = this;\n\n\t!self.builder.length && self.minify();\n\n\tif (!type)\n\t\ttype = self.outputType;\n\n\tvar cmd = spawn(self.isIM ? 'convert' : 'gm', self.arg(self.filename ? wrap(self.filename) : '-', (type ? type + ':' : '') + '-'));\n\n\tif (self.currentStream) {\n\t\tif (self.currentStream instanceof Buffer)\n\t\t\tcmd.stdin.end(self.currentStream);\n\t\telse\n\t\t\tself.currentStream.pipe(cmd.stdin);\n\t}\n\n\twriter && writer(cmd.stdin);\n\tvar middleware = middlewares[type];\n\treturn middleware ? cmd.stdout.pipe(middleware()) : cmd.stdout;\n};\n\nImage.prototype.cmd = function(filenameFrom, filenameTo) {\n\n\tvar self = this;\n\tvar cmd = '';\n\n\tself.builder.sort((a, b) => a.priority > b.priority ? 1 : -1);\n\n\tvar length = self.builder.length;\n\tfor (var i = 0; i < length; i++)\n\t\tcmd += (cmd ? ' ' : '') + self.builder[i].cmd;\n\n\treturn (self.isIM ? 'convert' : 'gm -convert') + wrap(filenameFrom, true) + ' ' + cmd + wrap(filenameTo, true);\n};\n\nImage.prototype.arg = function(first, last) {\n\n\tvar self = this;\n\tvar arr = [];\n\n\t!self.isIM && arr.push('-convert');\n\tfirst && arr.push(first);\n\tself.builder.sort((a, b) => a.priority > b.priority ? 1 : -1);\n\n\tvar length = self.builder.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar o = self.builder[i];\n\t\tvar index = o.cmd.indexOf(' ');\n\t\tif (index === -1)\n\t\t\tarr.push(o.cmd);\n\t\telse {\n\t\t\tarr.push(o.cmd.substring(0, index));\n\t\t\tarr.push(o.cmd.substring(index + 1).replace(/\\\"/g, ''));\n\t\t}\n\t}\n\n\tlast && arr.push(last);\n\treturn arr;\n};\n\nImage.prototype.identify = function(callback) {\n\tvar self = this;\n\n\texec((self.isIM ? 'identify' : 'gm identify') + wrap(self.filename, true), function(err, stdout, stderr) {\n\n\t\tif (err) {\n\t\t\tcallback(err, null);\n\t\t\treturn;\n\t\t}\n\n\t\tvar arr = stdout.split(' ');\n\t\tvar size = arr[2].split('x');\n\t\tvar obj = { type: arr[1], width: framework_utils.parseInt(size[0]), height: framework_utils.parseInt(size[1]) };\n\t\tcallback(null, obj);\n\t});\n\n\treturn self;\n};\n\nImage.prototype.$$identify = function() {\n\tvar self = this;\n\treturn function(callback) {\n\t\tself.identify(callback);\n\t};\n};\n\nImage.prototype.push = function(key, value, priority, encode) {\n\tvar self = this;\n\tvar cmd = key;\n\n\tif (value != null) {\n\t\tif (encode && typeof(value) === 'string')\n\t\t\tcmd += ' \"' + value.replace(REGEXP_ESCAPE, '') + '\"';\n\t\telse\n\t\t\tcmd += ' ' + value;\n\t}\n\n\tvar obj = CACHE[cmd];\n\tif (obj) {\n\t\tobj.priority = priority;\n\t\tself.builder.push(obj);\n\t} else {\n\t\tCACHE[cmd] = { cmd: cmd, priority: priority };\n\t\tself.builder.push(CACHE[cmd]);\n\t}\n\n\treturn self;\n};\n\nImage.prototype.output = function(type) {\n\tvar self = this;\n\tif (type[0] === '.')\n\t\ttype = type.substring(1);\n\tself.outputType = type;\n\treturn self;\n};\n\nImage.prototype.resize = function(w, h, options) {\n\toptions = options || '';\n\n\tvar self = this;\n\tvar size = '';\n\n\tif (w && h)\n\t\tsize = w + 'x' + h;\n\telse if (w && !h)\n\t\tsize = w + 'x';\n\telse if (!w && h)\n\t\tsize = 'x' + h;\n\n\treturn self.push('-resize', size + options, 1, true);\n};\n\nImage.prototype.thumbnail = function(w, h, options) {\n\toptions = options || '';\n\n\tvar self = this;\n\tvar size = '';\n\n\tif (w && h)\n\t\tsize = w + 'x' + h;\n\telse if (w && !h)\n\t\tsize = w;\n\telse if (!w && h)\n\t\tsize = 'x' + h;\n\n\treturn self.push('-thumbnail', size + options, 1, true);\n};\n\nImage.prototype.geometry = function(w, h, options) {\n\toptions = options || '';\n\n\tvar self = this;\n\tvar size = '';\n\n\tif (w && h)\n\t\tsize = w + 'x' + h;\n\telse if (w && !h)\n\t\tsize = w;\n\telse if (!w && h)\n\t\tsize = 'x' + h;\n\n\treturn self.push('-geometry', size + options, 1, true);\n};\n\n\nImage.prototype.filter = function(type) {\n\treturn this.push('-filter', type, 1, true);\n};\n\nImage.prototype.trim = function() {\n\treturn this.push('-trim +repage', 1);\n};\n\nImage.prototype.extent = function(w, h) {\n\n\tvar self = this;\n\tvar size = '';\n\n\tif (w && h)\n\t\tsize = w + 'x' + h;\n\telse if (w && !h)\n\t\tsize = w;\n\telse if (!w && h)\n\t\tsize = 'x' + h;\n\n\treturn self.push('-extent', size, 4, true);\n};\n\n/**\n * Resize picture to miniature (full picture)\n * @param {Number} w\n * @param {Number} h\n * @param {String} color Optional, background color.\n * @param {String} filter Optional, resize filter (default: Box)\n * @return {Image}\n */\nImage.prototype.miniature = function(w, h, color, filter) {\n\treturn this.filter(filter || 'Box').thumbnail(w, h).background(color ? color : 'white').align('center').extent(w, h);\n};\n\n/**\n * Resize picture to center\n * @param {Number} w\n * @param {Number} h\n * @param {String} color Optional, background color.\n * @return {Image}\n */\nImage.prototype.resizeCenter = function(w, h, color) {\n\treturn this.resize(w, h, '^').background(color ? color : 'white').align('center').crop(w, h);\n};\n\n/**\n * Resize picture to align\n * @param {Number} w\n * @param {Number} h\n * @param {String} align (top, center, bottom)\n * @param {String} color Optional, background color.\n * @return {Image}\n */\nImage.prototype.resizeAlign = function(w, h, align, color) {\n\treturn this.resize(w, h, '^').background(color ? color : 'white').align(align || 'center').crop(w, h);\n};\n\nImage.prototype.scale = function(w, h, options) {\n\toptions = options || '';\n\n\tvar self = this;\n\tvar size = '';\n\n\tif (w && h)\n\t\tsize = w + 'x' + h;\n\telse if (w && !h)\n\t\tsize = w;\n\telse if (!w && h)\n\t\tsize = 'x' + h;\n\n\treturn self.push('-scale', size + options, 1, true);\n};\n\nImage.prototype.crop = function(w, h, x, y) {\n\treturn this.push('-crop', w + 'x' + h + '+' + (x || 0) + '+' + (y || 0), 4, true);\n};\n\nImage.prototype.quality = function(percentage) {\n\treturn this.push('-quality', percentage || 80, 5, true);\n};\n\nImage.prototype.align = function(type) {\n\n\tvar output;\n\n\tswitch (type) {\n\t\tcase 'left top':\n\t\tcase 'top left':\n\t\t\toutput = 'NorthWest';\n\t\t\tbreak;\n\t\tcase 'left bottom':\n\t\tcase 'bottom left':\n\t\t\toutput = 'SouthWest';\n\t\t\tbreak;\n\t\tcase 'right top':\n\t\tcase 'top right':\n\t\t\toutput = 'NorthEast';\n\t\t\tbreak;\n\t\tcase 'right bottom':\n\t\tcase 'bottom right':\n\t\t\toutput = 'SouthEast';\n\t\t\tbreak;\n\t\tcase 'left center':\n\t\tcase 'center left':\n\t\tcase 'left':\n\t\t\toutput = 'West';\n\t\t\tbreak;\n\t\tcase 'right center':\n\t\tcase 'center right':\n\t\tcase 'right':\n\t\t\toutput = 'East';\n\t\t\tbreak;\n\t\tcase 'bottom center':\n\t\tcase 'center bottom':\n\t\tcase 'bottom':\n\t\t\toutput = 'South';\n\t\t\tbreak;\n\t\tcase 'top center':\n\t\tcase 'center top':\n\t\tcase 'top':\n\t\t\toutput = 'North';\n\t\t\tbreak;\n\t\tcase 'center center':\n\t\tcase 'center':\n\t\tcase 'middle':\n\t\t\toutput = 'Center';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\toutput = type;\n\t\t\tbreak;\n\t}\n\n\toutput && this.push('-gravity', output, 3, true);\n\treturn this;\n};\n\nImage.prototype.gravity = function(type) {\n\treturn this.align(type);\n};\n\nImage.prototype.blur = function(radius) {\n\treturn this.push('-blur', radius, 10, true);\n};\n\nImage.prototype.normalize = function() {\n\treturn this.push('-normalize', null, 10);\n};\n\nImage.prototype.rotate = function(deg) {\n\treturn this.push('-rotate', deg || 0, 8, true);\n};\n\nImage.prototype.flip = function() {\n\treturn this.push('-flip', null, 10);\n};\n\nImage.prototype.flop = function() {\n\treturn this.push('-flop', null, 10);\n};\n\nImage.prototype.minify = function() {\n\treturn this.push('+profile', '*', null, 10, true);\n};\n\nImage.prototype.grayscale = function() {\n\treturn this.push('-colorspace', 'Gray', 10, true);\n};\n\nImage.prototype.bitdepth = function(value) {\n\treturn this.push('-depth', value, 10, true);\n};\n\nImage.prototype.colors = function(value) {\n\treturn this.push('-colors', value, 10, true);\n};\n\nImage.prototype.background = function(color) {\n\treturn this.push('-background', color, 2, true).push('-extent 0x0', null, 2);\n};\n\nImage.prototype.fill = function(color) {\n\treturn this.push('-fill', color, 2, true);\n};\n\nImage.prototype.sepia = function() {\n\treturn this.push('-modulate', '115,0,100', 4).push('-colorize', '7,21,50', 5);\n};\n\nImage.prototype.watermark = function(filename, x, y, w, h) {\n\treturn this.push('-draw', 'image over {1},{2} {3},{4} \\'{0}\\''.format(filename, x || 0, y || 0, w || 0, h || 0), 6, true);\n};\n\nImage.prototype.make = function(fn) {\n\tfn.call(this, this);\n\treturn this;\n};\n\nImage.prototype.command = function(key, value, priority, esc) {\n\treturn this.push(key, value, priority || 10, esc);\n};\n\nfunction wrap(command, empty) {\n\treturn (empty ? ' ' : '') + command.replace(REGEXP_ESCAPE, '');\n}\n\nexports.Image = Image;\nexports.Picture = Image;\n\nexports.init = function(filename, imageMagick, width, height) {\n\treturn new Image(filename, imageMagick, width, height);\n};\n\nexports.load = function(filename, imageMagick, width, height) {\n\treturn new Image(filename, imageMagick, width, height);\n};\n\nexports.middleware = function(type, fn) {\n\tif (type[0] === '.')\n\t\ttype = type.substring(1);\n\tmiddlewares[type] = fn;\n};\n\nexports.restart = function() {\n\tmiddlewares = {};\n};\n\n// Clears cache with commands\nexports.clear = function() {\n\tCACHE = {};\n};\n\nglobal.Image = exports;","/home/travis/build/npmtest/node-npmtest-total.js/node_modules/total.js/nosql.js":"// Copyright 2012-2017 (c) Peter Širka <petersirka@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/**\n * @module NoSQL\n * @version 2.4.0\n */\n\n'use strict';\n\nconst Fs = require('fs');\nconst Path = require('path');\nconst Events = require('events');\n\nif (!global.framework_utils)\n\tglobal.framework_utils = require('./utils');\n\nif (!global.framework_image)\n\tglobal.framework_image = require('./image');\n\nif (!global.framework_nosql)\n\tglobal.framework_nosql = exports;\n\nif (!global.framework_builders)\n\tglobal.framework_builders = require('./builders');\n\nconst EXTENSION = '.nosql';\nconst EXTENSION_BINARY = '.nosql-binary';\nconst EXTENSION_TMP = '.nosql-tmp';\nconst EXTENSION_META = '.meta';\nconst BINARY_HEADER_LENGTH = 2000;\nconst NEWLINE = '\\n';\nconst EMPTYARRAY = [];\nconst REG_CLEAN = /^[\\s]+|[\\s]+$/g;\nconst INMEMORY = {};\n\nObject.freeze(EMPTYARRAY);\n\nfunction Database(name, filename) {\n\tthis.filename = filename + EXTENSION;\n\tthis.filenameTemp = filename + EXTENSION_TMP;\n\tthis.filenameMeta = filename + EXTENSION_META;\n\tthis.directory = Path.dirname(filename);\n\tthis.filenameBackup = framework_utils.join(this.directory, name + '_backup' + EXTENSION);\n\tthis.name = name;\n\tthis.pending_update = [];\n\tthis.pending_append = [];\n\tthis.pending_reader = [];\n\tthis.pending_reader_view = [];\n\tthis.pending_remove = [];\n\tthis.views = {};\n\tthis.step = 0;\n\tthis.pending_drops = false;\n\tthis.pending_views = false;\n\tthis.binary = new Binary(this, this.directory + '/' + this.name + '-binary/');\n\tthis.counter = new Counter(this);\n\tthis.inmemory = {};\n\tthis.inmemorylastusage;\n\tthis.metadata;\n\tthis.$meta();\n\tthis.$timeoutmeta;\n}\n\nDatabase.prototype.__proto__ = Object.create(Events.EventEmitter.prototype, {\n\tconstructor: {\n\t\tvalue: Database,\n\t\tenumberable: false\n\t}\n});\n\nexports.load = function(name, filename) {\n\treturn new Database(name, filename);\n};\n\nexports.memory = exports.inmemory = function(name, view) {\n\tif (view)\n\t\tname += '#' + view;\n\treturn INMEMORY[name] = true;\n};\n\nDatabase.prototype.meta = function(name, value) {\n\tvar self = this;\n\tif (value === undefined)\n\t\treturn self.metadata ? self.metadata[name] : undefined;\n\tif (!self.metadata)\n\t\tself.metadata = {};\n\tself.metadata[name] = value;\n\tclearTimeout(self.timeoutmeta);\n\tself.timeoutmeta = setTimeout(() => self.$meta(true), 500);\n\treturn self;\n};\n\nDatabase.prototype.insert = function(doc, unique) {\n\tvar self = this;\n\tvar builder;\n\n\tif (unique) {\n\t\tbuilder = self.one();\n\t\tvar callback;\n\n\t\tbuilder.callback(function(err, d) {\n\t\t\tif (d)\n\t\t\t\tcallback && callback(null, 0);\n\t\t\telse\n\t\t\t\tself.insert(doc).callback(callback);\n\t\t});\n\n\t\tbuilder.callback = function(fn) {\n\t\t\tcallback = fn;\n\t\t\treturn builder;\n\t\t};\n\n\t\treturn builder;\n\t}\n\n\tbuilder = new DatabaseBuilder2();\n\tvar json = framework_builders.isSchema(doc) ? doc.$clean() : doc;\n\tself.pending_append.push({ doc: JSON.stringify(json), builder: builder });\n\tsetImmediate(() => self.next(1));\n\tself.emit('insert', json);\n\treturn builder;\n};\n\nDatabase.prototype.upsert = function(doc) {\n\treturn this.insert(doc, true);\n};\n\nDatabase.prototype.update = function(doc, insert) {\n\tvar self = this;\n\tvar builder = new DatabaseBuilder();\n\tself.pending_update.push({ builder: builder, doc: framework_builders.isSchema(doc) ? doc.$clean() : doc, count: 0, insert: insert });\n\tsetImmediate(() => self.next(2));\n\treturn builder;\n};\n\nDatabase.prototype.modify = function(doc, insert) {\n\tvar self = this;\n\tvar builder = new DatabaseBuilder();\n\tvar data = framework_builders.isSchema(doc) ? doc.$clean() : doc;\n\tvar keys = Object.keys(data);\n\n\tif (!keys.length)\n\t\treturn builder;\n\n\tself.pending_update.push({ builder: builder, doc: data, count: 0, keys: keys, insert: insert });\n\tsetImmediate(() => self.next(2));\n\treturn builder;\n};\n\nDatabase.prototype.backup = function(filename, remove) {\n\n\tif (typeof(filename) === 'boolean') {\n\t\tremove = filename;\n\t\tfilename = '';\n\t}\n\n\tvar self = this;\n\tif (remove)\n\t\treturn self.remove(filename || '');\n\n\tvar builder = new DatabaseBuilder2();\n\tvar stream = Fs.createReadStream(self.filename);\n\n\tstream.pipe(Fs.createWriteStream(filename || self.filenameBackup));\n\n\tstream.on('error', function(err) {\n\t\tbuilder.$callback && builder.$callback(errorhandling(err, builder));\n\t\tbuilder.$callback = null;\n\t});\n\n\tstream.on('end', function() {\n\t\tbuilder.$callback && builder.$callback(errorhandling(null, builder, true), true);\n\t\tbuilder.$callback = null;\n\t});\n\n\treturn builder;\n};\n\nDatabase.prototype.drop = function() {\n\tvar self = this;\n\tself.pending_drops = true;\n\tsetImmediate(() => self.next(7));\n\treturn self;\n};\n\nDatabase.prototype.free = function() {\n\tvar self = this;\n\tself.removeAllListeners();\n\tdelete framework.databases[self.name];\n\treturn self;\n};\n\nDatabase.prototype.release = function() {\n\tvar self = this;\n\tself.inmemory = {};\n\tself.inmemorylastusage = undefined;\n\treturn self;\n};\n\nDatabase.prototype.clear = Database.prototype.remove = function(filename) {\n\tvar self = this;\n\tvar builder = new DatabaseBuilder();\n\tvar backup = filename === undefined ? undefined : filename || self.filenameBackup;\n\n\tif (backup)\n\t\tbackup = new Backuper(backup);\n\n\tself.pending_remove.push({ builder: builder, count: 0, backup: backup });\n\tsetImmediate(() => self.next(3));\n\treturn builder;\n};\n\nDatabase.prototype.find = function(view) {\n\tvar self = this;\n\tvar builder = new DatabaseBuilder();\n\n\tif (view) {\n\t\tself.pending_reader_view.push({ builder: builder, count: 0, counter: 0, view: view });\n\t\tsetImmediate(() => self.next(6));\n\t} else {\n\t\tself.pending_reader.push({ builder: builder, count: 0, counter: 0, view: view });\n\t\tsetImmediate(() => self.next(4));\n\t}\n\n\treturn builder;\n};\n\nDatabase.prototype.scalar = function(type, field, view) {\n\treturn this.find(view).scalar(type, field);\n};\n\nDatabase.prototype.count = function(view) {\n\tvar self = this;\n\tvar builder = new DatabaseBuilder();\n\n\tif (view) {\n\t\tself.pending_reader_view.push({ builder: builder, count: 0, view: view, type: 1 });\n\t\tsetImmediate(() => self.next(6));\n\t} else {\n\t\tself.pending_reader.push({ builder: builder, count: 0, view: view, type: 1 });\n\t\tsetImmediate(() => self.next(4));\n\t}\n\n\treturn builder;\n};\n\nDatabase.prototype.one = function(view) {\n\tvar self = this;\n\tvar builder = new DatabaseBuilder();\n\tbuilder.first();\n\n\tif (view) {\n\t\tself.pending_reader_view.push({ builder: builder, count: 0, view: view });\n\t\tsetImmediate(() => self.next(6));\n\t} else {\n\t\tself.pending_reader.push({ builder: builder, count: 0, view: view });\n\t\tsetImmediate(() => self.next(4));\n\t}\n\n\treturn builder;\n};\n\nDatabase.prototype.top = function(max, view) {\n\tvar self = this;\n\tvar builder = new DatabaseBuilder();\n\tbuilder.take(max);\n\n\tif (view) {\n\t\tself.pending_reader_view.push({ builder: builder, count: 0, counter: 0, view: view });\n\t\tsetImmediate(() => self.next(6));\n\t} else {\n\t\tself.pending_reader.push({ builder: builder, count: 0, counter: 0, view: view });\n\t\tsetImmediate(() => self.next(4));\n\t}\n\n\treturn builder;\n};\n\nDatabase.prototype.view = function(name) {\n\tvar builder = new DatabaseBuilder();\n\tthis.views[name] = {};\n\tthis.views[name] = builder;\n\tthis.views[name].$filename = this.filename.replace(/\\.nosql/, '#' + name + '.nosql');\n\treturn builder;\n};\n\nDatabase.prototype.next = function(type) {\n\tvar self = this;\n\n\tif (type && self.step)\n\t\treturn self;\n\n\tif (self.step !== 6 && self.pending_reader_view.length) {\n\t\tself.$readerview();\n\t\treturn self;\n\t}\n\n\tif (self.step !== 4 && self.pending_reader.length) {\n\t\tself.$reader();\n\t\treturn self;\n\t}\n\n\tif (self.step !== 1 && self.pending_append.length) {\n\t\tif (INMEMORY[self.name])\n\t\t\tself.$append_inmemory();\n\t\telse\n\t\t\tself.$append();\n\t\treturn self;\n\t}\n\n\tif (self.step !== 2 && self.pending_update.length) {\n\t\tif (INMEMORY[self.name])\n\t\t\tself.$update_inmemory();\n\t\telse\n\t\t\tself.$update();\n\t\treturn self;\n\t}\n\n\tif (self.step !== 3 && self.pending_remove.length) {\n\t\tif (INMEMORY[self.name])\n\t\t\tself.$remove_inmemory();\n\t\telse\n\t\t\tself.$remove();\n\t\treturn self;\n\t}\n\n\tif (self.step !== 5 && self.pending_views) {\n\t\tif (INMEMORY[self.name])\n\t\t\tself.$views_inmemory();\n\t\telse\n\t\t\tself.$views();\n\t\treturn self;\n\t}\n\n\tif (self.step !== 7 && self.pending_drops) {\n\t\tself.$drop();\n\t\treturn self;\n\t}\n\n\tif (self.step !== type) {\n\t\tself.step = 0;\n\t\tsetImmediate(() => self.next(0));\n\t}\n\n\treturn self;\n};\n\nDatabase.prototype.refresh = function() {\n\tvar self = this;\n\tif (!self.views)\n\t\treturn self;\n\tself.pending_views = true;\n\tsetImmediate(() => self.next(5));\n\treturn self;\n};\n\n// ======================================================================\n// FILE OPERATIONS\n// ======================================================================\n\n// InMemory saving\nDatabase.prototype.$save = function(view) {\n\tvar self = this;\n\tsetTimeout2('nosql.' + self.name + '.' + view, function() {\n\t\tvar data = self.inmemory[view] || EMPTYARRAY;\n\t\tvar builder = [];\n\t\tfor (var i = 0, length = data.length; i < length; i++)\n\t\t\tbuilder.push(JSON.stringify(data[i]));\n\n\t\tvar filename = self.filename;\n\t\tif (view !== '#')\n\t\t\tfilename = filename.replace(/\\.nosql/, '#' + view + '.nosql');\n\n\t\tFs.writeFile(filename, builder.join(NEWLINE) + NEWLINE, NOOP);\n\t}, 50);\n\treturn self;\n};\n\nDatabase.prototype.$inmemory = function(view, callback) {\n\tvar self = this;\n\n\t// Last usage\n\tself.inmemorylastusage = global.framework ? global.framework.datetime : undefined;\n\n\tif (self.inmemory[view])\n\t\treturn callback();\n\n\tvar filename = self.filename;\n\tif (view !== '#')\n\t\tfilename = filename.replace(/\\.nosql/, '#' + view + '.nosql');\n\n\tself.inmemory[view] = [];\n\n\tFs.readFile(filename, function(err, data) {\n\t\tif (err)\n\t\t\treturn callback();\n\t\tvar arr = data.toString('utf8').split('\\n');\n\t\tfor (var i = 0, length = arr.length; i < length; i++) {\n\t\t\tvar item = arr[i];\n\t\t\tif (!item)\n\t\t\t\tcontinue;\n\t\t\ttry {\n\t\t\t\titem = JSON.parse(item.trim(), jsonparser);\n\t\t\t\titem && self.inmemory[view].push(item);\n\t\t\t} catch (e) {};\n\t\t}\n\n\t\tcallback();\n\t});\n\n\treturn self;\n};\n\nDatabase.prototype.$meta = function(write) {\n\n\tvar self = this;\n\n\tif (write) {\n\t\tFs.writeFile(self.filenameMeta, JSON.stringify(self.metadata), NOOP);\n\t\treturn self;\n\t}\n\n\ttry {\n\t\tself.metadata = JSON.parse(Fs.readFileSync(self.filenameMeta).toString('utf8'), jsonparser);\n\t} catch (err) {}\n\n\treturn self;\n};\n\nDatabase.prototype.$append = function() {\n\tvar self = this;\n\tself.step = 1;\n\n\tif (!self.pending_append.length) {\n\t\tself.next(0);\n\t\treturn self;\n\t}\n\n\tself.pending_append.splice(0).limit(20, function(items, next) {\n\t\tvar json = [];\n\n\t\tfor (var i = 0, length = items.length; i < length; i++)\n\t\t\tjson.push(items[i].doc);\n\n\t\tFs.appendFile(self.filename, json.join(NEWLINE) + NEWLINE, function(err) {\n\t\t\tfor (var i = 0, length = items.length; i < length; i++) {\n\t\t\t\tvar callback = items[i].builder.$callback;\n\t\t\t\tcallback && callback(err, 1);\n\t\t\t}\n\t\t\tnext();\n\t\t});\n\n\t}, function() {\n\t\tsetImmediate(function() {\n\t\t\tself.next(0);\n\t\t\tsetImmediate(() => self.refresh());\n\t\t});\n\t});\n\n\treturn self;\n};\n\nDatabase.prototype.$append_inmemory = function() {\n\tvar self = this;\n\tself.step = 1;\n\n\tif (!self.pending_append.length) {\n\t\tself.next(0);\n\t\treturn self;\n\t}\n\n\tvar items = self.pending_append.splice(0);\n\n\treturn self.$inmemory('#', function() {\n\n\t\tfor (var i = 0, length = items.length; i < length; i++) {\n\t\t\tself.inmemory['#'].push(JSON.parse(items[i].doc, jsonparser));\n\t\t\tvar callback = items[i].builder.$callback;\n\t\t\tcallback && callback(null, 1);\n\t\t}\n\n\t\tself.$save('#');\n\n\t\tsetImmediate(function() {\n\t\t\tself.next(0);\n\t\t\tsetImmediate(() => self.refresh());\n\t\t});\n\t});\n};\n\nDatabase.prototype.$update = function() {\n\n\tvar self = this;\n\tself.step = 2;\n\n\tif (!self.pending_update.length) {\n\t\tself.next(0);\n\t\treturn self;\n\t}\n\n\tvar reader = Fs.createReadStream(self.filename);\n\tvar writer = Fs.createWriteStream(self.filenameTemp);\n\n\tvar filter = self.pending_update.splice(0);\n\tvar length = filter.length;\n\tvar change = false;\n\n\treader.on('data', framework_utils.streamer(NEWLINE, function(value, index) {\n\t\tvar doc = JSON.parse(value.trim());\n\t\tfor (var i = 0; i < length; i++) {\n\n\t\t\tvar item = filter[i];\n\t\t\tvar builder = item.builder;\n\t\t\tvar output = builder.compare(doc, index);\n\n\t\t\tif (output) {\n\t\t\t\tif (item.keys) {\n\t\t\t\t\tfor (var j = 0, jl = item.keys.length; j < jl; j++) {\n\t\t\t\t\t\tvar val = item.doc[item.keys[j]];\n\t\t\t\t\t\tif (val === undefined)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\tif (typeof(val) === 'function')\n\t\t\t\t\t\t\tdoc[item.keys[j]] = val(doc[item.keys[j]], doc);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tdoc[item.keys[j]] = val;\n\t\t\t\t\t}\n\t\t\t\t} else\n\t\t\t\t\tdoc = typeof(item.doc) === 'function' ? item.doc(doc) : item.doc;\n\t\t\t\tself.emit(item.keys ? 'modify' : 'update', doc);\n\t\t\t\titem.count++;\n\t\t\t\tchange = true;\n\t\t\t}\n\t\t}\n\n\t\twriter.write(JSON.stringify(doc) + NEWLINE);\n\t}));\n\n\tCLEANUP(writer, function() {\n\t\tFs.rename(self.filenameTemp, self.filename, function(err) {\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar item = filter[i];\n\t\t\t\tif (item.insert && !item.count)\n\t\t\t\t\tself.insert(item.insert).$callback = item.builder.$callback;\n\t\t\t\telse\n\t\t\t\t\titem.builder.$callback && item.builder.$callback(errorhandling(err, item.builder, item.count), item.count);\n\t\t\t}\n\n\t\t\tsetImmediate(function() {\n\t\t\t\tself.next(0);\n\t\t\t\tchange && setImmediate(() => self.refresh());\n\t\t\t});\n\t\t});\n\t});\n\n\tCLEANUP(reader, () => writer.end());\n\treturn self;\n};\n\nDatabase.prototype.$update_inmemory = function() {\n\n\tvar self = this;\n\tself.step = 2;\n\n\tif (!self.pending_update.length) {\n\t\tself.next(0);\n\t\treturn self;\n\t}\n\n\tvar filter = self.pending_update.splice(0);\n\tvar length = filter.length;\n\tvar change = false;\n\n\treturn self.$inmemory('#', function() {\n\n\t\tvar data = self.inmemory['#'];\n\n\t\tfor (var j = 0, jl = data.length; j < jl; j++) {\n\t\t\tvar doc = data[j];\n\t\t\tfor (var i = 0; i < length; i++) {\n\n\t\t\t\tvar item = filter[i];\n\t\t\t\tvar builder = item.builder;\n\t\t\t\tvar output = builder.compare(doc, j);\n\n\t\t\t\tif (output) {\n\t\t\t\t\tif (item.keys) {\n\t\t\t\t\t\tfor (var j = 0, jl = item.keys.length; j < jl; j++) {\n\t\t\t\t\t\t\tvar val = item.doc[item.keys[j]];\n\t\t\t\t\t\t\tif (val === undefined)\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\tif (typeof(val) === 'function')\n\t\t\t\t\t\t\t\tdoc[item.keys[j]] = val(doc[item.keys[j]], doc);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tdoc[item.keys[j]] = val;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else\n\t\t\t\t\t\tdoc = typeof(item.doc) === 'function' ? item.doc(doc) : item.doc;\n\n\t\t\t\t\tself.emit(item.keys ? 'modify' : 'update', doc);\n\t\t\t\t\titem.count++;\n\t\t\t\t\tchange = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tself.$save('#');\n\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar item = filter[i];\n\t\t\tif (item.insert && !item.count)\n\t\t\t\tself.insert(item.insert).$callback = item.builder.$callback;\n\t\t\telse {\n\t\t\t\titem.count && self.emit(item.keys ? 'modify' : 'update', item.doc);\n\t\t\t\titem.builder.$callback && item.builder.$callback(errorhandling(null, item.builder, item.count), item.count);\n\t\t\t}\n\t\t}\n\n\t\tsetImmediate(function() {\n\t\t\tself.next(0);\n\t\t\tchange && setImmediate(() => self.refresh());\n\t\t});\n\t});\n};\n\nDatabase.prototype.$reader = function() {\n\n\tvar self = this;\n\tself.step = 4;\n\n\tif (!self.pending_reader.length) {\n\t\tself.next(0);\n\t\treturn self;\n\t}\n\n\tvar list = self.pending_reader.splice(0);\n\tif (INMEMORY[self.name])\n\t\tself.$reader2_inmemory('#', list, () => self.next(0));\n\telse\n\t\tself.$reader2(self.filename, list, () => self.next(0));\n\n\treturn self;\n};\n\nDatabase.prototype.$readerview = function() {\n\n\tvar self = this;\n\tself.step = 6;\n\n\tif (!self.pending_reader_view.length) {\n\t\tself.next(0);\n\t\treturn self;\n\t}\n\n\tvar group = {};\n\tvar skip = true;\n\n\tfor (var i = 0, length = self.pending_reader_view.length; i < length; i++) {\n\t\tvar item = self.pending_reader_view[i];\n\t\tvar name = INMEMORY[self.name] || INMEMORY[self.name + '#' + item.view] ? item.view : self.views[item.view].$filename;\n\n\t\tskip = false;\n\n\t\tif (group[name])\n\t\t\tgroup[name].push(item);\n\t\telse\n\t\t\tgroup[name] = [item];\n\t}\n\n\tself.pending_reader_view = [];\n\n\tif (skip) {\n\t\tself.next(0);\n\t\treturn self;\n\t}\n\n\tObject.keys(group).wait(function(item, next) {\n\t\tif (INMEMORY[self.name] || INMEMORY[self.name + '#' + item])\n\t\t\tself.$reader2_inmemory(item, group[item], next);\n\t\telse\n\t\t\tself.$reader2(item, group[item], next);\n\t}, () => self.next(0), 5);\n\n\treturn self;\n};\n\nDatabase.prototype.$reader2 = function(filename, items, callback) {\n\n\tvar self = this;\n\tvar reader = Fs.createReadStream(filename);\n\tvar filter = items;\n\tvar length = filter.length;\n\n\treader.on('data', framework_utils.streamer(NEWLINE, function(value, index) {\n\t\tvar json = JSON.parse(value.trim(), jsonparser);\n\t\tvar val;\n\t\tfor (var i = 0; i < length; i++) {\n\n\t\t\tvar item = filter[i];\n\t\t\tvar builder = item.builder;\n\t\t\tvar output = builder.compare(json, index);\n\n\t\t\tif (!output)\n\t\t\t\tcontinue;\n\n\t\t\titem.count++;\n\n\t\t\tif (!builder.$sort && ((builder.$skip && builder.$skip >= item.count) || (builder.$take && builder.$take <= item.counter)))\n\t\t\t\tcontinue;\n\n\t\t\titem.counter++;\n\n\t\t\tif (item.type)\n\t\t\t\tcontinue;\n\n\t\t\tswitch (builder.$scalar) {\n\t\t\t\tcase 'count':\n\t\t\t\t\titem.scalar = item.scalar ? item.scalar + 1 : 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'sum':\n\t\t\t\t\tval = json[builder.$scalarfield] || 0;\n\t\t\t\t\titem.scalar = item.scalar ? item.scalar + val : val;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'min':\n\t\t\t\t\tval = json[builder.$scalarfield] || 0;\n\t\t\t\t\titem.scalar = item.scalar ? Math.min(item.scalar, val) : val;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'max':\n\t\t\t\t\tval = json[builder.$scalarfield] || 0;\n\t\t\t\t\titem.scalar = item.scalar ? Math.max(item.scalar, val) : val;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'avg':\n\t\t\t\t\tval = json[builder.$scalarfield] || 0;\n\t\t\t\t\titem.scalar = item.scalar ? item.scalar + val : val;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'group':\n\t\t\t\t\tval = json[builder.$scalarfield];\n\t\t\t\t\tif (!item.scalar)\n\t\t\t\t\t\titem.scalar = {};\n\t\t\t\t\tif (item.scalar[val])\n\t\t\t\t\t\titem.scalar[val]++;\n\t\t\t\t\telse\n\t\t\t\t\t\titem.scalar[val] = 1;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (item.response)\n\t\t\t\t\t\titem.response.push(output);\n\t\t\t\t\telse\n\t\t\t\t\t\titem.response = [output];\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}));\n\n\tCLEANUP(reader, function() {\n\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar item = filter[i];\n\t\t\tvar builder = item.builder;\n\t\t\tvar output;\n\n\t\t\tif (builder.$scalar || !builder.$sort) {\n\n\t\t\t\tif (builder.$scalar)\n\t\t\t\t\toutput = builder.$scalar === 'avg' ? item.scalar / item.counter : item.scalar;\n\t\t\t\telse if (builder.$first)\n\t\t\t\t\toutput = item.response ? item.response[0] : undefined;\n\t\t\t\telse\n\t\t\t\t\toutput = item.response || EMPTYARRAY;\n\n\t\t\t\tbuilder.$callback2(errorhandling(null, builder, output), item.type === 1 ? item.count : output, item.count);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (item.count) {\n\t\t\t\tif (builder.$sort.name)\n\t\t\t\t\titem.response.quicksort(builder.$sort.name, builder.$sort.asc);\n\t\t\t\telse if (builder.$sort === EMPTYOBJECT)\n\t\t\t\t\titem.response.random();\n\t\t\t\telse\n\t\t\t\t\titem.response.sort(builder.$sort);\n\n\t\t\t\tif (builder.$skip && builder.$take)\n\t\t\t\t\titem.response = item.response.splice(builder.$skip, builder.$take);\n\t\t\t\telse if (builder.$skip)\n\t\t\t\t\titem.response = item.response.splice(builder.$skip);\n\t\t\t\telse if (builder.$take)\n\t\t\t\t\titem.response = item.response.splice(0, builder.$take);\n\t\t\t}\n\n\t\t\tif (builder.$first)\n\t\t\t\toutput = item.response ? item.response[0] : undefined;\n\t\t\telse\n\t\t\t\toutput = item.response || EMPTYARRAY;\n\n\t\t\tbuilder.$callback2(errorhandling(null, builder, output), item.type === 1 ? item.count : output, item.count);\n\t\t\tbuilder.done();\n\t\t}\n\n\t\tcallback();\n\t});\n\n\treturn self;\n};\n\nDatabase.prototype.$reader2_inmemory = function(name, items, callback) {\n\n\tvar self = this;\n\tvar filter = items;\n\tvar length = filter.length;\n\n\treturn self.$inmemory(name, function() {\n\n\t\tvar data = self.inmemory[name];\n\t\tvar val;\n\n\t\tfor (var j = 0, jl = data.length; j < jl; j++) {\n\t\t\tvar json = data[j];\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar item = filter[i];\n\t\t\t\tvar builder = item.builder;\n\t\t\t\tvar output = builder.compare(U.clone(json), j);\n\t\t\t\tif (!output)\n\t\t\t\t\tcontinue;\n\n\t\t\t\titem.count++;\n\n\t\t\t\tif (!builder.$sort && ((builder.$skip && builder.$skip >= item.count) || (builder.$take && builder.$take <= item.counter)))\n\t\t\t\t\tcontinue;\n\n\t\t\t\titem.counter++;\n\n\t\t\t\tif (item.type)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tswitch (builder.$scalar) {\n\t\t\t\t\tcase 'count':\n\t\t\t\t\t\titem.scalar = item.scalar ? item.scalar + 1 : 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'sum':\n\t\t\t\t\t\tval = json[builder.$scalarfield] || 0;\n\t\t\t\t\t\titem.scalar = item.scalar ? item.scalar + val : val;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'min':\n\t\t\t\t\t\tval = json[builder.$scalarfield] || 0;\n\t\t\t\t\t\titem.scalar = item.scalar ? Math.min(item.scalar, val) : val;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'max':\n\t\t\t\t\t\tval = json[builder.$scalarfield] || 0;\n\t\t\t\t\t\titem.scalar = item.scalar ? Math.max(item.scalar, val) : val;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'avg':\n\t\t\t\t\t\tval = json[builder.$scalarfield] || 0;\n\t\t\t\t\t\titem.scalar = item.scalar ? item.scalar + val : 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'group':\n\t\t\t\t\t\tval = json[builder.$scalarfield];\n\t\t\t\t\t\tif (!item.scalar)\n\t\t\t\t\t\t\titem.scalar = {};\n\t\t\t\t\t\tif (item.scalar[val])\n\t\t\t\t\t\t\titem.scalar[val]++;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\titem.scalar[val] = 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif (item.response)\n\t\t\t\t\t\t\titem.response.push(output);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\titem.response = [output];\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar item = filter[i];\n\t\t\tvar builder = item.builder;\n\t\t\tvar output;\n\n\t\t\tif (builder.$scalar || !builder.$sort) {\n\n\t\t\t\tif (builder.$scalar)\n\t\t\t\t\toutput = builder.$scalar === 'avg' ? item.scalar / item.counter : item.scalar;\n\t\t\t\telse if (builder.$first)\n\t\t\t\t\toutput = item.response ? item.response[0] : undefined;\n\t\t\t\telse\n\t\t\t\t\toutput = item.response || EMPTYARRAY;\n\n\t\t\t\tbuilder.$callback2(errorhandling(null, builder, output), item.type === 1 ? item.count : output, item.count);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (item.count) {\n\t\t\t\tif (builder.$sort.name)\n\t\t\t\t\titem.response.quicksort(builder.$sort.name, builder.$sort.asc);\n\t\t\t\telse if (builder.$sort === EMPTYOBJECT)\n\t\t\t\t\titem.response.random();\n\t\t\t\telse\n\t\t\t\t\titem.response.sort(builder.$sort);\n\n\t\t\t\tif (builder.$skip && builder.$take)\n\t\t\t\t\titem.response = item.response.splice(builder.$skip, builder.$take);\n\t\t\t\telse if (builder.$skip)\n\t\t\t\t\titem.response = item.response.splice(builder.$skip);\n\t\t\t\telse if (builder.$take)\n\t\t\t\t\titem.response = item.response.splice(0, builder.$take);\n\t\t\t}\n\n\t\t\tif (builder.$first)\n\t\t\t\toutput = item.response ? item.response[0] : undefined;\n\t\t\telse\n\t\t\t\toutput = item.response || EMPTYARRAY;\n\n\t\t\tbuilder.$callback2(errorhandling(null, builder, output), item.type === 1 ? item.count : output, item.count);\n\t\t\tbuilder.done();\n\t\t}\n\n\t\tcallback();\n\t});\n};\n\nDatabase.prototype.$views = function() {\n\n\tvar self = this;\n\tself.step = 5;\n\n\tif (!self.pending_views) {\n\t\tself.next(0);\n\t\treturn self;\n\t}\n\n\tself.pending_views = false;\n\n\tvar views = Object.keys(self.views);\n\tvar length = views.length;\n\n\tif (!length) {\n\t\tself.next(0);\n\t\treturn self;\n\t}\n\n\tvar response = [];\n\n\tfor (var i = 0; i < length; i++)\n\t\tresponse.push({ response: [], name: views[i], builder: self.views[views[i]], count: 0, counter: 0 });\n\n\tvar reader = Fs.createReadStream(self.filename);\n\n\treader.on('data', framework_utils.streamer(NEWLINE, function(value, index) {\n\t\tvar json = JSON.parse(value.trim());\n\t\tfor (var j = 0; j < length; j++) {\n\t\t\tvar item = self.views[views[j]];\n\t\t\tvar output = item.compare(json, index);\n\n\t\t\tif (!output)\n\t\t\t\tcontinue;\n\n\t\t\tresponse[j].count++;\n\n\t\t\tif (!item.$sort && ((item.$skip && item.$skip >= response[j].count) || (item.$take && item.$take < response[j].counter)))\n\t\t\t\tcontinue;\n\n\t\t\tresponse[j].counter++;\n\t\t\t!item.type && response[j].response.push(output);\n\t\t}\n\t}));\n\n\tCLEANUP(reader, function() {\n\t\tresponse.wait(function(item, next) {\n\n\t\t\tvar builder = item.builder;\n\n\t\t\tif (builder.$sort) {\n\t\t\t\tif (builder.$sort.name)\n\t\t\t\t\titem.response.quicksort(builder.$sort.name, builder.$sort.asc);\n\t\t\t\telse if (builder.$sort === EMPTYOBJECT)\n\t\t\t\t\titem.response.random();\n\t\t\t\telse\n\t\t\t\t\titem.response.sort(builder.$sort);\n\t\t\t\tif (builder.$skip && builder.$take)\n\t\t\t\t\titem.response = item.response.splice(builder.$skip, builder.$take);\n\t\t\t\telse if (builder.$skip)\n\t\t\t\t\titem.response = item.response.splice(builder.$skip);\n\t\t\t\telse if (builder.$take)\n\t\t\t\t\titem.response = item.response.splice(0, builder.$take);\n\t\t\t}\n\n\t\t\tvar filename = builder.$filename;\n\t\t\tFs.unlink(filename, function() {\n\t\t\t\titem.response.limit(20, function(items, next) {\n\t\t\t\t\tvar builder = [];\n\t\t\t\t\tfor (var i = 0, length = items.length; i < length; i++)\n\t\t\t\t\t\tbuilder.push(JSON.stringify(items[i]));\n\t\t\t\t\tFs.appendFile(filename, builder.join(NEWLINE) + NEWLINE, next);\n\t\t\t\t}, function() {\n\t\t\t\t\t// clears in-memory\n\t\t\t\t\tself.inmemory[item.name] = undefined;\n\t\t\t\t\tnext();\n\t\t\t\t});\n\t\t\t});\n\t\t}, () => self.next(0), 5);\n\t});\n\n\treturn self;\n};\n\nDatabase.prototype.$views_inmemory = function() {\n\n\tvar self = this;\n\tself.step = 5;\n\n\tif (!self.pending_views) {\n\t\tself.next(0);\n\t\treturn self;\n\t}\n\n\tself.pending_views = false;\n\n\tvar views = Object.keys(self.views);\n\tvar length = views.length;\n\n\tif (!length) {\n\t\tself.next(0);\n\t\treturn self;\n\t}\n\n\tvar response = [];\n\n\tfor (var i = 0; i < length; i++)\n\t\tresponse.push({ response: [], name: views[i], builder: self.views[views[i]], count: 0, counter: 0 });\n\n\treturn self.$inmemory('#', function() {\n\t\tvar data = self.inmemory['#'];\n\n\t\tfor (var j = 0, jl = data.length; j < jl; j++) {\n\t\t\tvar json = data[j];\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar item = self.views[views[i]];\n\t\t\t\tvar output = item.compare(json, j);\n\t\t\t\tif (!output)\n\t\t\t\t\tcontinue;\n\t\t\t\tresponse[i].count++;\n\t\t\t\tif (!item.$sort && ((item.$skip && item.$skip >= response[i].count) || (item.$take && item.$take < response[i].counter)))\n\t\t\t\t\tcontinue;\n\t\t\t\tresponse[i].counter++;\n\t\t\t\t!item.type && response[i].response.push(output);\n\t\t\t}\n\t\t}\n\n\t\tfor (var j = 0, jl = response.length; j < jl; j++) {\n\n\t\t\tvar item = response[j];\n\t\t\tvar builder = item.builder;\n\n\t\t\tif (builder.$sort) {\n\t\t\t\tif (builder.$sort.name)\n\t\t\t\t\titem.response.quicksort(builder.$sort.name, builder.$sort.asc);\n\t\t\t\telse if (builder.$sort === EMPTYOBJECT)\n\t\t\t\t\titem.response.random();\n\t\t\t\telse\n\t\t\t\t\titem.response.sort(builder.$sort);\n\t\t\t\tif (builder.$skip && builder.$take)\n\t\t\t\t\titem.response = item.response.splice(builder.$skip, builder.$take);\n\t\t\t\telse if (builder.$skip)\n\t\t\t\t\titem.response = item.response.splice(builder.$skip);\n\t\t\t\telse if (builder.$take)\n\t\t\t\t\titem.response = item.response.splice(0, builder.$take);\n\t\t\t}\n\n\t\t\tself.inmemory[item.name] = item.response;\n\t\t\tself.$save(item.name);\n\t\t}\n\n\t\tself.next(0);\n\t});\n};\n\nDatabase.prototype.$remove = function() {\n\n\tvar self = this;\n\tself.step = 3;\n\n\tif (!self.pending_remove.length) {\n\t\tself.next(0);\n\t\treturn self;\n\t}\n\n\tvar reader = Fs.createReadStream(self.filename);\n\tvar writer = Fs.createWriteStream(self.filenameTemp);\n\n\tvar filter = self.pending_remove.splice(0);\n\tvar length = filter.length;\n\tvar change = false;\n\n\treader.on('data', framework_utils.streamer(NEWLINE, function(value, index) {\n\n\t\tvar json = JSON.parse(value.trim());\n\t\tvar removed = false;\n\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar item = filter[i];\n\t\t\tvar builder = item.builder;\n\t\t\tif (builder.compare(json, index)) {\n\t\t\t\tremoved = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (removed) {\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar item = filter[i];\n\t\t\t\titem.backup && item.backup.write(value);\n\t\t\t\titem.count++;\n\t\t\t}\n\t\t\tself.emit('remove', json);\n\t\t\tchange = true;\n\t\t} else\n\t\t\twriter.write(value);\n\t}));\n\n\tCLEANUP(writer, function() {\n\t\tFs.rename(self.filenameTemp, self.filename, function(err) {\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar item = filter[i];\n\t\t\t\titem.builder.$callback && item.builder.$callback(errorhandling(null, item.builder, item.count), item.count);\n\t\t\t}\n\n\t\t\tsetImmediate(function() {\n\t\t\t\tself.next(0);\n\t\t\t\tchange && setImmediate(() => self.refresh());\n\t\t\t});\n\t\t});\n\t});\n\n\tCLEANUP(reader, () => writer.end());\n\treturn self;\n};\n\nDatabase.prototype.$remove_inmemory = function() {\n\n\tvar self = this;\n\tself.step = 3;\n\n\tif (!self.pending_remove.length) {\n\t\tself.next(0);\n\t\treturn self;\n\t}\n\n\tvar filter = self.pending_remove.splice(0);\n\tvar length = filter.length;\n\tvar change = false;\n\n\treturn self.$inmemory('#', function() {\n\n\t\tvar data = self.inmemory['#'];\n\t\tvar arr = [];\n\n\t\tfor (var j = 0, jl = data.length; j < jl; j++) {\n\t\t\tvar json = data[j];\n\t\t\tvar removed = false;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar item = filter[i];\n\t\t\t\tvar builder = item.builder;\n\t\t\t\tif (builder.compare(json, j)) {\n\t\t\t\t\tremoved = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (removed) {\n\t\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\t\tvar item = filter[i];\n\t\t\t\t\titem.backup && item.backup.write(JSON.stringify(json));\n\t\t\t\t\titem.count++;\n\t\t\t\t}\n\t\t\t\tchange = true;\n\t\t\t\tself.emit('remove', json);\n\t\t\t} else\n\t\t\t\tarr.push(json);\n\t\t}\n\n\t\tif (change) {\n\t\t\tself.inmemory['#'] = arr;\n\t\t\tself.$save('#');\n\t\t}\n\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar item = filter[i];\n\t\t\titem.builder.$callback && item.builder.$callback(errorhandling(null, item.builder, item.count), item.count);\n\t\t}\n\n\t\tself.next(0);\n\t\tchange && setImmediate(() => self.refresh());\n\t});\n};\n\nDatabase.prototype.$drop = function() {\n\tvar self = this;\n\tself.step = 7;\n\n\tif (!self.pending_drops) {\n\t\tself.next(0);\n\t\treturn self;\n\t}\n\n\tself.pending_drops = false;\n\tvar remove = [self.filename, self.filenameTemp];\n\tObject.keys(self.views).forEach(key => remove.push(self.views[key].$filename));\n\n\ttry {\n\t\tFs.readdirSync(self.binary.directory).forEach(function(filename) {\n\t\t\tfilename.startsWith(self.name + '#') && filename.endsWith(EXTENSION_BINARY) && remove.push(framework_utils.join(self.binary.directory, filename));\n\t\t});\n\t} catch (e) {}\n\n\tremove.wait((filename, next) => Fs.unlink(filename, next), function() {\n\t\tself.next(0);\n\t\tself.free();\n\t}, 5);\n\n\tObject.keys(self.inmemory).forEach(function(key) {\n\t\tself.inmemory[key] = undefined;\n\t});\n\n\treturn self;\n};\n\nfunction DatabaseBuilder2() {\n\tthis.$callback = NOOP;\n}\n\nDatabaseBuilder2.prototype.callback = function(fn, emptyerror) {\n\n\tif (typeof(fn) === 'string') {\n\t\tvar tmp = emptyerror;\n\t\temptyerror = fn;\n\t\tfn = tmp;\n\t}\n\n\tthis.$callback = fn;\n\tthis.$callback_emptyerror = emptyerror;\n\treturn this;\n};\n\nfunction DatabaseBuilder() {\n\tthis.$take = 0;\n\tthis.$skip = 0;\n\tthis.$filter = [];\n\tthis.$sort;\n\tthis.$first = false;\n\tthis.$scope = 0;\n\tthis.$fields;\n\tthis.$join;\n\tthis.$joincount;\n\tthis.$callback = NOOP;\n\tthis.$scalar;\n\tthis.$scalarfield;\n}\n\nDatabaseBuilder.prototype.$callback2 = function(err, response, count) {\n\tvar self = this;\n\n\tif (err || !self.$join)\n\t\treturn self.$callback(err, response, count);\n\n\tif (self.$joincount) {\n\t\tsetImmediate(() => self.$callback2(err, response, count));\n\t\treturn self;\n\t}\n\n\tvar keys = Object.keys(self.$join);\n\tvar jl = keys.length;\n\n\tif (response instanceof Array) {\n\t\tfor (var i = 0, length = response.length; i < length; i++) {\n\t\t\tvar item = response[i];\n\t\t\tfor (var j = 0; j < jl; j++) {\n\t\t\t\tvar join = self.$join[keys[j]];\n\t\t\t\titem[join.field] = join.scalar ? scalar(join.items, join.scalar, join.scalarfield, join.a, join.b != null ? item[join.b] : undefined) : join.first ? findItem(join.items, join.a, item[join.b], join.scalar, join.scalarfield) : findItems(join.items, join.a, item[join.b]);\n\t\t\t}\n\t\t}\n\t} else if (response) {\n\t\tfor (var j = 0; j < jl; j++) {\n\t\t\tvar join = self.$join[keys[j]];\n\t\t\tresponse[join.field] = join.scalar ? scalar(join.items, join.scalar, join.scalarfield, join.a, join.b != null ? response[join.b] : undefined) : join.first ? findItem(join.items, join.a, response[join.b], join.scalar, join.scalarfield) : findItems(join.items, join.a, response[join.b]);\n\t\t}\n\t}\n\n\tself.$callback(err, response, count);\n\treturn self;\n};\n\nfunction scalar(items, type, field, where, value) {\n\n\tif (type === 'count' && !where)\n\t\treturn items.length;\n\n\tvar val = type !== 'min' && type !== 'max' ? type === 'group' ? {} : 0 : null;\n\tvar count = 0;\n\n\tfor (var i = 0, length = items.length; i < length; i++) {\n\t\tvar item = items[i];\n\n\t\tif (where && item[where] !== value)\n\t\t\tcontinue;\n\n\t\tswitch (type) {\n\t\t\tcase 'count':\n\t\t\t\tval++;\n\t\t\t\tbreak;\n\t\t\tcase 'sum':\n\t\t\t\tval += item[field] || 0;\n\t\t\t\tbreak;\n\t\t\tcase 'avg':\n\t\t\t\tval += item[field] || 0;\n\t\t\t\tcount++;\n\t\t\t\tbreak;\n\t\t\tcase 'min':\n\t\t\t\tval = val === null ? item[field] : Math.min(val, item[field]);\n\t\t\t\tbreak;\n\t\t\tcase 'group':\n\t\t\t\tif (val[item[field]])\n\t\t\t\t\tval[item[field]]++;\n\t\t\t\telse\n\t\t\t\t\tval[item[field]] = 1;\n\t\t\t\tbreak;\n\t\t\tcase 'max':\n\t\t\t\tval = val === null ? item[field] : Math.max(val, item[field]);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (type === 'avg')\n\t\tval = val / count;\n\n\treturn val || 0;\n}\n\nfunction findItem(items, field, value) {\n\tfor (var i = 0, length = items.length; i < length; i++) {\n\t\tif (items[i][field] === value)\n\t\t\treturn items[i];\n\t}\n}\n\nfunction findItems(items, field, value) {\n\tvar arr = [];\n\tfor (var i = 0, length = items.length; i < length; i++) {\n\t\tif (items[i][field] === value)\n\t\t\tarr.push(items[i]);\n\t}\n\treturn arr;\n}\n\nDatabaseBuilder.prototype.join = function(field, name, view) {\n\tvar self = this;\n\n\tif (!self.$join) {\n\t\tself.$join = {};\n\t\tself.$joincount = 0;\n\t}\n\n\tvar key = name + '.' + (view || '');\n\tif (self.$join[key])\n\t\treturn join;\n\n\tself.$join[key] = {};\n\tself.$join[key].field = field;\n\tself.$join[key].pending = true;\n\tself.$joincount++;\n\n\tvar join = NOSQL(name).find(view);\n\n\tjoin.where = function(a, b) {\n\t\tself.$join[key].a = a;\n\t\tself.$join[key].b = b;\n\t\treturn join;\n\t};\n\n\tjoin.scalar = function(type, field) {\n\t\tself.$join[key].scalar = type;\n\t\tself.$join[key].scalarfield = field;\n\t\treturn join;\n\t};\n\n\tjoin.first = function() {\n\t\tself.$join[key].first = true;\n\t\treturn join;\n\t};\n\n\tjoin.callback(function(err, docs) {\n\t\tself.$join[key].pending = false;\n\t\tself.$join[key].items = docs;\n\t\tself.$joincount--;\n\t});\n\n\tsetImmediate(function() {\n\t\tjoin.$fields && join.fields(self.$join[key].b);\n\t\tjoin.$fields && self.$join[key].scalarfield && join.fields(self.$join[key].scalarfield);\n\t});\n\n\treturn join;\n};\n\nDatabaseBuilder.prototype.first = function() {\n\tthis.$first = true;\n\treturn this.take(1);\n};\n\nDatabaseBuilder.prototype.make = function(fn) {\n\tfn.call(this, this);\n\treturn this;\n};\n\nDatabaseBuilder.prototype.compare = function(doc, index) {\n\n\tvar can = true;\n\tvar wasor = false;\n\n\tfor (var i = 0, length = this.$filter.length; i < length; i++) {\n\t\tvar filter = this.$filter[i];\n\n\t\tif (wasor && filter.scope)\n\t\t\tcontinue;\n\n\t\tvar res = filter.filter(doc, i, filter);\n\n\t\tif (res === true) {\n\t\t\tcan = true;\n\t\t\tif (filter.scope)\n\t\t\t\twasor = true;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (filter.scope) {\n\t\t\tcan = false;\n\t\t\tcontinue;\n\t\t}\n\n\t\treturn;\n\t}\n\n\tif (!can)\n\t\treturn;\n\n\tif (this.$prepare)\n\t\treturn this.$prepare(doc, index);\n\n\tif (!this.$fields)\n\t\treturn doc;\n\n\tvar obj = {};\n\n\tfor (var i = 0, length = this.$fields.length; i < length; i++) {\n\t\tvar prop = this.$fields[i];\n\t\tobj[prop] = doc[prop];\n\t}\n\n\treturn obj;\n};\n\nDatabaseBuilder.prototype.filter = function(fn) {\n\tthis.$filter.push({ scope: this.$scope, filter: fn });\n\treturn this;\n};\n\nDatabaseBuilder.prototype.scalar = function(type, name) {\n\tthis.$scalar = type;\n\tthis.$scalarfield = name;\n\treturn this;\n};\n\nDatabaseBuilder.prototype.where = function(name, operator, value) {\n\n\tvar fn;\n\n\tif (value === undefined) {\n\t\tvalue = operator;\n\t\toperator = '=';\n\t}\n\n\tvar date = framework_utils.isDate(value);\n\n\tswitch (operator) {\n\t\tcase '=':\n\t\t\tfn = date ? compare_eq_date : compare_eq;\n\t\t\tbreak;\n\t\tcase '<':\n\t\t\tfn = date ? compare_gt_date : compare_gt;\n\t\t\tbreak;\n\t\tcase '<=':\n\t\t\tfn = date ? compare_eqgt_date : compare_eqgt;\n\t\t\tbreak;\n\t\tcase '>':\n\t\t\tfn = date ? compare_lt_date : compare_lt;\n\t\t\tbreak;\n\t\tcase '>=':\n\t\t\tfn = date ? compare_eqlt_date : compare_eqlt;\n\t\t\tbreak;\n\t\tcase '<>':\n\t\tcase '!=':\n\t\t\tfn = date ? compare_not_date : compare_not;\n\t\t\tbreak;\n\t}\n\n\tthis.$filter.push({ scope: this.$scope, filter: fn, name: name, value: value });\n\treturn this;\n};\n\nDatabaseBuilder.prototype.month = function(name, operator, value) {\n\n\tvar fn;\n\n\tif (value === undefined) {\n\t\tvalue = operator;\n\t\toperator = '=';\n\t}\n\n\tswitch (operator) {\n\t\tcase '=':\n\t\t\tfn = compare_eq_dtmonth;\n\t\t\tbreak;\n\t\tcase '<':\n\t\t\tfn = compare_gt_dtmonth;\n\t\t\tbreak;\n\t\tcase '<=':\n\t\t\tfn = compare_eqgt_dtmonth;\n\t\t\tbreak;\n\t\tcase '>':\n\t\t\tfn = compare_lt_dtmonth;\n\t\t\tbreak;\n\t\tcase '>=':\n\t\t\tfn = compare_eqlt_dtmonth;\n\t\t\tbreak;\n\t\tcase '<>':\n\t\tcase '!=':\n\t\t\tfn = compare_not_dtmonth;\n\t\t\tbreak;\n\t}\n\n\tthis.$filter.push({ scope: this.$scope, filter: fn, name: name, value: value });\n\treturn this;\n};\n\nDatabaseBuilder.prototype.day = function(name, operator, value) {\n\n\tvar fn;\n\n\tif (value === undefined) {\n\t\tvalue = operator;\n\t\toperator = '=';\n\t}\n\n\tswitch (operator) {\n\t\tcase '=':\n\t\t\tfn = compare_eq_dtday;\n\t\t\tbreak;\n\t\tcase '<':\n\t\t\tfn = compare_gt_dtday;\n\t\t\tbreak;\n\t\tcase '<=':\n\t\t\tfn = compare_eqgt_dtday;\n\t\t\tbreak;\n\t\tcase '>':\n\t\t\tfn = compare_lt_dtday;\n\t\t\tbreak;\n\t\tcase '>=':\n\t\t\tfn = compare_eqlt_dtday;\n\t\t\tbreak;\n\t\tcase '<>':\n\t\tcase '!=':\n\t\t\tfn = compare_not_dtday;\n\t\t\tbreak;\n\t}\n\n\tthis.$filter.push({ scope: this.$scope, filter: fn, name: name, value: value });\n\treturn this;\n};\n\nDatabaseBuilder.prototype.year = function(name, operator, value) {\n\n\tvar fn;\n\n\tif (value === undefined) {\n\t\tvalue = operator;\n\t\toperator = '=';\n\t}\n\n\tswitch (operator) {\n\t\tcase '=':\n\t\t\tfn = compare_eq_dtyear;\n\t\t\tbreak;\n\t\tcase '<':\n\t\t\tfn = compare_gt_dtyear;\n\t\t\tbreak;\n\t\tcase '<=':\n\t\t\tfn = compare_eqgt_dtyear;\n\t\t\tbreak;\n\t\tcase '>':\n\t\t\tfn = compare_lt_dtyear;\n\t\t\tbreak;\n\t\tcase '>=':\n\t\t\tfn = compare_eqlt_dtyear;\n\t\t\tbreak;\n\t\tcase '<>':\n\t\tcase '!=':\n\t\t\tfn = compare_not_dtyear;\n\t\t\tbreak;\n\t}\n\n\tthis.$filter.push({ scope: this.$scope, filter: fn, name: name, value: value });\n\treturn this;\n};\n\nDatabaseBuilder.prototype.like = DatabaseBuilder.prototype.search = function(name, value, where) {\n\n\tvar fn;\n\n\tif (!where)\n\t\twhere = '*';\n\n\tswitch (where) {\n\t\tcase 'beg':\n\t\t\tfn = compare_likebeg;\n\t\t\tbreak;\n\t\tcase 'end':\n\t\t\tfn = compare_likeend;\n\t\t\tbreak;\n\t\tcase '*':\n\t\t\tfn = compare_like;\n\t\t\tif (value instanceof Array) {\n\t\t\t\tfor (var i = 0, length = value.length; i < length; i++)\n\t\t\t\t\tvalue[i] = value[i].toLowerCase();\n\t\t\t} else\n\t\t\t\tvalue = value.toLowerCase();\n\t\t\tbreak;\n\t}\n\n\tthis.$filter.push({ scope: this.$scope, name: name, filter: fn, value: value });\n\treturn this;\n};\n\nDatabaseBuilder.prototype.take = function(count) {\n\tthis.$take = count;\n\treturn this;\n};\n\nDatabaseBuilder.prototype.limit = function(count) {\n\tthis.$take = count;\n\treturn this;\n};\n\nDatabaseBuilder.prototype.page = function(page, limit) {\n\tthis.skip(page * limit)\n\treturn this.take(limit);\n};\n\nDatabaseBuilder.prototype.skip = function(count) {\n\tthis.$skip = count;\n\treturn this;\n};\n\nDatabaseBuilder.prototype.callback = function(fn, emptyerror) {\n\n\tif (typeof(fn) === 'string') {\n\t\tvar tmp = emptyerror;\n\t\temptyerror = fn;\n\t\tfn = tmp;\n\t}\n\n\tthis.$callback = fn;\n\tthis.$callback_emptyerror = emptyerror;\n\treturn this;\n};\n\nDatabaseBuilder.prototype.random = function() {\n\tthis.$sort = EMPTYOBJECT;\n\treturn this;\n};\n\nDatabaseBuilder.prototype.sort = function(name, desc) {\n\n\tif (typeof(name) === 'function') {\n\t\tthis.$sort = name;\n\t\treturn this;\n\t}\n\n\tthis.$sort = { name: name, asc: desc ? false : true };\n\treturn this;\n};\n\nDatabaseBuilder.prototype.in = function(name, value) {\n\tif (!(value instanceof Array))\n\t\tvalue = [value];\n\tthis.$filter.push({ scope: this.$scope, name: name, filter: compare_in, value: value });\n\treturn this;\n};\n\nDatabaseBuilder.prototype.notin = function(name, value) {\n\tif (!(value instanceof Array))\n\t\tvalue = [value];\n\tthis.$filter.push({ scope: this.$scope, name: name, filter: compare_notin, value: value });\n\treturn this;\n};\n\nDatabaseBuilder.prototype.between = function(name, a, b) {\n\tthis.$filter.push({ scope: this.$scope, name: name, filter: compare_between, a: a, b: b });\n\treturn this;\n};\n\nDatabaseBuilder.prototype.or = function() {\n\tthis.$scope = 1;\n\treturn this;\n};\n\nDatabaseBuilder.prototype.end = function() {\n\tthis.$scope = 0;\n\treturn this;\n};\n\nDatabaseBuilder.prototype.and = function() {\n\tthis.$scope = 0;\n\treturn this;\n};\n\nDatabaseBuilder.prototype.done = function() {\n\tthis.$filter = null;\n\tthis.$sort = null;\n\treturn this;\n};\n\nDatabaseBuilder.prototype.cache = function(key, expire) {\n\t// this.$cache_key = '$nosql_' + key;\n\t// this.$cache_expire = expire;\n\tOBSOLETE('DatabaseBuilder.cache()', 'NoSQL database supports in-memory mode.');\n\treturn this;\n};\n\nDatabaseBuilder.prototype.fields = function() {\n\tif (!this.$fields)\n\t\tthis.$fields = [];\n\tfor (var i = 0, length = arguments.length; i < length; i++)\n\t\tthis.$fields.push(arguments[i]);\n\treturn this;\n}\n\nDatabaseBuilder.prototype.prepare = function(fn) {\n\tthis.$prepare = fn;\n\treturn this;\n};\n\nfunction Counter(db) {\n\tthis.TIMEOUT = 30000;\n\tthis.db = db;\n\tthis.cache;\n\tthis.timeout;\n\tthis.type = 0; // 1 === saving, 2 === reading\n}\n\nCounter.prototype.__proto__ = Object.create(Events.EventEmitter.prototype, {\n\tconstructor: {\n\t\tvalue: Counter,\n\t\tenumberable: false\n\t}\n});\n\nCounter.prototype.inc = Counter.prototype.hit = function(id, count) {\n\n\tvar self = this;\n\n\tif (id instanceof Array) {\n\t\tid.forEach(n => self.hit(n, count));\n\t\treturn self;\n\t}\n\n\tif (!self.cache)\n\t\tself.cache = {};\n\n\tif (self.cache[id])\n\t\tself.cache[id] += count || 1;\n\telse\n\t\tself.cache[id] = count || 1;\n\n\tif (!self.timeout)\n\t\tself.timeout = setTimeout(() => self.save(), self.TIMEOUT);\n\n\tself.emit('hit', id, count || 1);\n\treturn self;\n};\n\nCounter.prototype.remove = function(id) {\n\tvar self = this;\n\n\tif (!self.cache)\n\t\tself.cache = {};\n\n\tif (id instanceof Array)\n\t\tid.forEach(n => self.cache[n] = null);\n\telse\n\t\tself.cache[id] = null;\n\n\tif (!self.timeout)\n\t\tself.timeout = setTimeout(() => self.save(), self.TIMEOUT);\n\n\tself.emit('remove', id);\n\treturn self;\n};\n\nCounter.prototype.count = function(id, callback) {\n\n\tif (typeof(id) === 'function') {\n\t\tcallback = id;\n\t\tid = null;\n\t}\n\n\treturn this.read(id, 0, callback);\n};\n\nCounter.prototype.yearly = function(id, callback) {\n\n\tif (typeof(id) === 'function') {\n\t\tcallback = id;\n\t\tid = null;\n\t}\n\n\treturn this.read(id, 1, callback);\n};\n\nCounter.prototype.monthly = function(id, callback) {\n\n\tif (typeof(id) === 'function') {\n\t\tcallback = id;\n\t\tid = null;\n\t}\n\n\treturn this.read(id, 2, callback);\n};\n\nCounter.prototype.read = function(id, type, callback) {\n\n\tvar self = this;\n\n\tif (self.type) {\n\t\tsetTimeout(() => self.read(id, type, callback), 200);\n\t\treturn self;\n\t}\n\n\t// 0 == type: summarize\n\t// 1 == type: full\n\n\tvar filename = self.db.filename + '-counter';\n\tvar reader = Fs.createReadStream(filename);\n\tvar keys = {};\n\tvar single = false;\n\tvar all = id ? false : true;\n\tvar output = all && !type ? 0 : {};\n\n\tif (typeof(id) === 'string') {\n\t\tid = [id];\n\t\tsingle = true;\n\t}\n\n\tid instanceof Array && id.forEach(id => keys[id] = true);\n\tself.type = 2;\n\n\treader.on('error', function() {\n\t\tself.type = 0;\n\t\tcallback(null, single ? (type ? output : 0) : (all ? EMPTYARRAY : output));\n\t});\n\n\treader.on('data', framework_utils.streamer(NEWLINE, function(value, index) {\n\t\tvar index = value.indexOf('=');\n\t\tvar key = value.substring(0, index);\n\t\tif (all || id === true || keys[key])\n\t\t\tswitch (type) {\n\t\t\t\tcase 0:\n\t\t\t\t\tif (all)\n\t\t\t\t\t\toutput += +value.substring(index + 1, value.indexOf(';'));\n\t\t\t\t\telse\n\t\t\t\t\t\toutput[key] = +value.substring(index + 1, value.indexOf(';'));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tif (all)\n\t\t\t\t\t\tcounter_parse_years_all(output, value);\n\t\t\t\t\telse\n\t\t\t\t\t\toutput[key] = counter_parse_years(value);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tif (all)\n\t\t\t\t\t\tcounter_parse_months_all(output, value);\n\t\t\t\t\telse\n\t\t\t\t\t\toutput[key] = counter_parse_months(value);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t}));\n\n\treader.on('end', function() {\n\t\tself.type = 0;\n\n\t\t// Array conversation\n\t\tif (all && type) {\n\t\t\tvar tmp = [];\n\t\t\tif (type === 2)\n\t\t\t\tObject.keys(output).forEach(key => tmp.push({ id: key, year: +key.substring(0, 4), month: +key.substring(4, 6), value: output[key] }));\n\t\t\telse\n\t\t\t\tObject.keys(output).forEach(key => tmp.push({ year: +key, value: output[key] }));\n\t\t\toutput = tmp;\n\t\t}\n\n\t\tcallback(null, single ? (type ? output[id[0]] || EMPTYOBJECT : output[id[0]] || 0) : output);\n\t});\n\n\treturn self;\n};\n\nCounter.prototype.stats = function(top, year, month, callback) {\n\n\tvar self = this;\n\n\tif (self.type) {\n\t\tsetTimeout(() => self.stats(top, year, month, callback), 200);\n\t\treturn self;\n\t}\n\n\tif (typeof(month) == 'function') {\n\t\tcallback = month;\n\t\tmonth = null;\n\t} else if (typeof(year) === 'function') {\n\t\tcallback = year;\n\t\tyear = month = null;\n\t}\n\n\tvar filename = self.db.filename + '-counter';\n\tvar reader = Fs.createReadStream(filename);\n\tvar date;\n\tvar output = [];\n\n\tself.type = 3;\n\n\tif (year != null) {\n\t\tdate = year.toString();\n\t\tif (month != null) {\n\t\t\tdate += month.padLeft(2, '0');\n\t\t\tdate = new RegExp(';' + date + '=\\\\d+', 'g');\n\t\t} else\n\t\t\tdate = new RegExp(';' + date + '\\\\d+=\\\\d+', 'g');\n\t}\n\n\treader.on('error', function() {\n\t\tself.type = 0;\n\t\tcallback && callback(null, output);\n\t});\n\n\treader.on('data', framework_utils.streamer(NEWLINE, function(value, index) {\n\t\tvar index = value.indexOf('=');\n\t\tvar count;\n\t\tif (date) {\n\t\t\tvar matches = value.match(date);\n\t\t\tif (!matches)\n\t\t\t\treturn;\n\t\t\tcount = counter_parse_stats(matches);\n\t\t} else\n\t\t\tcount = +value.substring(index + 1, value.indexOf(';', index));\n\t\tcounter_parse_stats_avg(output, top, value.substring(0, index), count);\n\t}));\n\n\treader.on('end', function() {\n\t\tself.type = 0;\n\t\tcallback && callback(null, output);\n\t});\n\n\treturn self;\n};\n\nfunction counter_parse_stats_avg(group, top, key, count) {\n\n\tif (group.length < top) {\n\t\tgroup.push({ id: key, count: count });\n\t\tgroup.length === top && group.sort((a, b) => a.count > b.count ? -1 : a.count === b.count ? 0 : 1);\n\t\treturn;\n\t}\n\n\tfor (var i = 0, length = group.length; i < length; i++) {\n\t\tvar item = group[i];\n\t\tif (item.count > count)\n\t\t\tcontinue;\n\n\t\tfor (var j = length - 1; j > i; j--) {\n\t\t\tgroup[j].id = group[j - 1].id;\n\t\t\tgroup[j].count = group[j - 1].count;\n\t\t}\n\n\t\titem.id = key;\n\t\titem.count = count;\n\t\treturn;\n\t}\n}\n\nfunction counter_parse_stats(matches) {\n\n\tvar value = 0;\n\n\tfor (var i = 0, length = matches.length; i < length; i++) {\n\t\tvar item = matches[i];\n\t\tvar val = +item.substring(item.indexOf('=', 5) + 1);\n\t\tif (val > 0)\n\t\t\tvalue += val;\n\t}\n\n\treturn value;\n}\n\nfunction counter_parse_years(value) {\n\n\tvar arr = value.trim().split(';');\n\tvar tmp = {};\n\tvar output = [];\n\n\tfor (var i = 1, length = arr.length; i < length; i++) {\n\t\tvar val = +arr[i].substring(7);\n\t\tvar key = arr[i].substring(0, 4);\n\t\ttmp[key] = val;\n\t}\n\n\tvar keys = Object.keys(tmp);\n\tfor (var i = 0, length = keys.length; i < length; i++)\n\t \toutput.push({ year: +keys[i], value: tmp[keys[i]] });\n\n\treturn output;\n}\n\nfunction counter_parse_months(value) {\n\n\tvar arr = value.trim().split(';');\n\tvar tmp = [];\n\n\tfor (var i = 1, length = arr.length; i < length; i++) {\n\t\tvar val = +arr[i].substring(7);\n\t\tvar key = arr[i].substring(0, 6);\n\t\ttmp.push({ id: key, year: +arr[i].substring(0, 4), month: +arr[i].substring(4, 6), value: val });\n\t}\n\n\treturn tmp;\n}\n\nfunction counter_parse_years_all(output, value) {\n\tvar arr = value.trim().split(';');\n\tfor (var i = 1, length = arr.length; i < length; i++) {\n\t\tvar val = +arr[i].substring(7);\n\t\tvar key = arr[i].substring(0, 4);\n\t\tif (output[key])\n\t\t\toutput[key] += val;\n\t\telse\n\t\t\toutput[key] = val;\n\t}\n}\n\nfunction counter_parse_months_all(output, value) {\n\tvar arr = value.trim().split(';');\n\tfor (var i = 1, length = arr.length; i < length; i++) {\n\t\tvar val = +arr[i].substring(7);\n\t\tvar key = arr[i].substring(0, 6);\n\t\tif (output[key])\n\t\t\toutput[key] += val;\n\t\telse\n\t\t\toutput[key] = val;\n\t}\n}\n\nCounter.prototype.save = function() {\n\tvar self = this;\n\n\tif (self.type) {\n\t\tsetTimeout(() => self.save(), 200);\n\t\treturn self;\n\t}\n\n\tvar filename = self.db.filename + '-counter';\n\tvar reader = Fs.createReadStream(filename);\n\tvar writer = Fs.createWriteStream(filename + '-tmp');\n\tvar dt = F.datetime.format('yyyyMM') + '=';\n\tvar cache = self.cache;\n\n\tself.cache = null;\n\tself.type = 1;\n\n\tvar flush = function() {\n\t\tvar keys = Object.keys(cache);\n\t\tfor (var i = 0, length = keys.length; i < length; i++) {\n\t\t\tvar item = cache[keys[i]];\n\t\t\titem && writer.write(keys[i] + '=' + item + ';' + dt + item + NEWLINE);\n\t\t}\n\t\twriter.end();\n\t};\n\n\treader.on('data', framework_utils.streamer(NEWLINE, function(value, index) {\n\n\t\tvar id = value.substring(0, value.indexOf('='));\n\n\t\tif (!cache[id]) {\n\t\t\tcache[id] !== null && writer.write(value);\n\t\t\treturn;\n\t\t}\n\n\t\t// 0 === id=COUNT\n\t\t// N === yyyyMM=COUNT\n\t\tvar hits = cache[id];\n\t\tvar arr = value.trim().split(';');\n\t\tvar is = false;\n\t\tvar index = arr[0].indexOf('=');\n\n\t\t// Update summarize\n\t\tarr[0] = arr[0].substring(0, index + 1) + (+arr[0].substring(index + 1) + hits);\n\n\t\tfor (var i = 1, length = arr.length; i < length; i++) {\n\n\t\t\tvar item = arr[i];\n\t\t\tvar curr = item.substring(0, 7);\n\n\t\t\tif (curr === dt) {\n\t\t\t\tis = true;\n\t\t\t\tarr[i] = curr + (+item.substring(7) + hits);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tcache[id] = undefined;\n\n\t\t!is && arr.push(dt + hits);\n\t\twriter.write(arr.join(';') + NEWLINE);\n\t}));\n\n\treader.on('error', flush);\n\treader.on('end', flush);\n\n\tCLEANUP(writer, function() {\n\t\tFs.rename(filename + '-tmp', filename, function(err) {\n\t\t\tclearTimeout(self.timeout);\n\t\t\tself.timeout = 0;\n\t\t\tself.type = 0;\n\t\t});\n\t});\n\n\treturn self;\n};\n\nCounter.prototype.clear = function(callback) {\n\tvar self = this;\n\n\tif (self.type) {\n\t\tsetTimeout(() => self.clear(callback), 200);\n\t\treturn self;\n\t}\n\n\tself.type = 3;\n\n\tFs.unlink(self.db.filename + '-counter', function() {\n\t\tself.type = 0;\n\t\tself.emit('clear');\n\t\tcallback && callback();\n\t});\n\n\treturn self;\n};\n\nfunction Binary(db, directory) {\n\tthis.db = db;\n\tthis.directory = directory;\n\tthis.exists = false;\n}\n\nBinary.prototype.__proto__ = Object.create(Events.EventEmitter.prototype, {\n\tconstructor: {\n\t\tvalue: Binary,\n\t\tenumberable: false\n\t}\n});\n\nBinary.prototype.insert = function(name, buffer, callback) {\n\n\tvar self = this;\n\tvar type = framework_utils.getContentType(framework_utils.getExtension(name));\n\tvar isfn = typeof(buffer) === 'function';\n\n\tif (isfn || !buffer) {\n\n\t\tif (isfn) {\n\t\t\tcallback = buffer;\n\t\t\tbuffer = undefined;\n\t\t}\n\n\t\tvar reader = Fs.createReadStream(name);\n\t\tCLEANUP(reader);\n\t\treturn self.insert_stream(null, framework_utils.getName(name), type, reader, callback);\n\t}\n\n\tif (typeof(buffer) === 'string')\n\t\tbuffer = framework_utils.createBuffer(buffer, 'base64');\n\telse if (buffer.resume)\n\t\treturn self.insert_stream(null, name, type, buffer, callback);\n\n\tvar size = buffer.length;\n\tvar dimension;\n\tvar ext = framework_utils.getExtension(name);\n\n\tself.check();\n\n\tswitch (ext) {\n\t\tcase 'gif':\n\t\t\tdimension = framework_image.measureGIF(buffer);\n\t\t\tbreak;\n\t\tcase 'png':\n\t\t\tdimension = framework_image.measurePNG(buffer);\n\t\t\tbreak;\n\t\tcase 'jpg':\n\t\tcase 'jpeg':\n\t\t\tdimension = framework_image.measureJPG(buffer);\n\t\t\tbreak;\n\t\tcase 'svg':\n\t\t\tdimension = framework_image.measureSVG(buffer);\n\t\t\tbreak;\n\t}\n\n\tif (!dimension)\n\t\tdimension = { width: 0, height: 0 };\n\n\tvar h = { name: name, size: size, type: type, width: dimension.width, height: dimension.height, created: F.created };\n\tvar header = framework_utils.createBufferSize(BINARY_HEADER_LENGTH);\n\theader.fill(' ');\n\theader.write(JSON.stringify(h));\n\n\tvar id = framework.datetime.format('yyMMddHHmm') + 'T' + framework_utils.GUID(5);\n\tvar key = self.db.name + '#' + id;\n\tvar stream = Fs.createWriteStream(Path.join(self.directory, key + EXTENSION_BINARY));\n\n\tstream.write(header, 'binary');\n\tstream.end(buffer);\n\tCLEANUP(stream);\n\tcallback && callback(null, id, h);\n\tself.emit('insert', id, h);\n\treturn id;\n};\n\nBinary.prototype.insert_stream = function(id, name, type, stream, callback) {\n\n\tvar self = this;\n\tself.check();\n\n\tvar h = { name: name, size: 0, type: type, width: 0, height: 0 };\n\tvar header = framework_utils.createBufferSize(BINARY_HEADER_LENGTH);\n\theader.fill(' ');\n\theader.write(JSON.stringify(h));\n\n\tif (!id)\n\t\tid = framework.datetime.format('yyMMddHHmm') + 'T' + framework_utils.GUID(5);\n\n\tvar key = self.db.name + '#' + id;\n\tvar writer = Fs.createWriteStream(framework_utils.join(self.directory, key + EXTENSION_BINARY));\n\n\twriter.write(header, 'binary');\n\tstream.pipe(writer);\n\tCLEANUP(writer);\n\tcallback && callback(null, id, h);\n\tself.emit('insert', id, h);\n\treturn id;\n};\n\nBinary.prototype.update = function(id, name, buffer, callback) {\n\n\tvar type = framework_utils.getContentType(framework_utils.getExtension(name));\n\tvar isfn = typeof(buffer) === 'function';\n\tif (isfn || !buffer) {\n\n\t\tif (isfn) {\n\t\t\tcallback = buffer;\n\t\t\tbuffer = undefined;\n\t\t}\n\n\t\tvar reader = Fs.createReadStream(name);\n\t\tCLEANUP(reader);\n\t\treturn self.insert_stream(id, framework_utils.getName(name), type, reader, callback);\n\t}\n\n\tif (typeof(buffer) === 'string')\n\t\tbuffer = framework_utils.createBuffer(buffer, 'base64');\n\n\tif (buffer.resume)\n\t\treturn this.insert_stream(id, name, type, buffer, callback);\n\n\tvar self = this;\n\tvar size = buffer.length;\n\tvar dimension;\n\tvar ext = framework_utils.getExtension(name);\n\n\tself.check();\n\n\tswitch (ext) {\n\t\tcase 'gif':\n\t\t\tdimension = framework_image.measureGIF(buffer);\n\t\t\tbreak;\n\t\tcase 'png':\n\t\t\tdimension = framework_image.measurePNG(buffer);\n\t\t\tbreak;\n\t\tcase 'jpg':\n\t\tcase 'jpeg':\n\t\t\tdimension = framework_image.measureJPG(buffer);\n\t\t\tbreak;\n\t\tcase 'svg':\n\t\t\tdimension = framework_image.measureSVG(buffer);\n\t\t\tbreak;\n\t}\n\n\tif (!dimension)\n\t\tdimension = { width: 0, height: 0 };\n\n\tvar h = { name: name, size: size, type: type, width: dimension.width, height: dimension.height, created: F.datetime };\n\tvar header = framework_utils.createBufferSize(BINARY_HEADER_LENGTH);\n\tvar key = self.db.name + '#' + id;\n\n\theader.fill(' ');\n\theader.write(JSON.stringify(h));\n\n\tvar stream = Fs.createWriteStream(framework_utils.join(self.directory, key + EXTENSION_BINARY));\n\tstream.write(header, 'binary');\n\tstream.end(buffer);\n\tCLEANUP(stream);\n\tcallback && callback(null, id, h);\n\tself.emit('insert', id, h);\n\treturn id;\n};\n\nBinary.prototype.read = function(id, callback) {\n\n\tvar self = this;\n\n\tself.check();\n\n\tif (id.indexOf('#') === -1)\n\t\tid = self.db.name + '#' + id;\n\n\tvar filename = framework_utils.join(self.directory, id + EXTENSION_BINARY);\n\tvar stream = Fs.createReadStream(filename, { start: 0, end: BINARY_HEADER_LENGTH - 1, encoding: 'binary' });\n\n\tstream.on('error', err => callback(err));\n\tstream.on('data', function(buffer) {\n\t\tvar json = framework_utils.createBuffer(buffer, 'binary').toString('utf8').replace(REG_CLEAN, '');\n\t\tstream = Fs.createReadStream(filename, { start: BINARY_HEADER_LENGTH });\n\t\tcallback(null, stream, JSON.parse(json));\n\t});\n\n\treturn self;\n};\n\nBinary.prototype.remove = function(id, callback) {\n\n\tvar self = this;\n\tvar key = id;\n\n\tself.check();\n\n\tif (key.indexOf('#') === -1)\n\t\tkey = self.db.name + '#' + key;\n\n\tvar filename = framework_utils.join(self.directory, key + EXTENSION_BINARY);\n\tFs.unlink(filename, (err) => callback && callback(null, err ? false : true));\n\tself.emit('remove', id);\n\treturn self;\n};\n\nBinary.prototype.check = function() {\n\n\tvar self = this;\n\tif (self.exists)\n\t\treturn self;\n\n\tself.exists = true;\n\n\ttry {\n\t\tFs.mkdirSync(self.directory);\n\t} catch (err) {};\n\n\treturn self;\n};\n\nBinary.prototype.clear = function(callback) {\n\tvar self = this;\n\n\tFs.readdir(self.directory, function(err, response) {\n\n\t\tif (err)\n\t\t\treturn callback(err);\n\n\t\tvar pending = [];\n\t\tvar key = self.db.name + '#';\n\t\tvar l = key.length;\n\t\tvar target = framework_utils.join(self.directory);\n\n\t\tfor (var i = 0, length = response.length; i < length; i++)\n\t\t\tresponse[i].substring(0, l) === key && pending.push(target + '/' + response[i]);\n\n\t\tself.emit('clear', pending.length);\n\t\tframework.unlink(pending, callback);\n\t});\n\n\treturn self;\n};\n\nBinary.prototype.all = function(callback) {\n\tvar self = this;\n\n\tself.check();\n\n\tFs.readdir(self.directory, function(err, response) {\n\n\t\tif (err)\n\t\t\treturn callback(err, EMPTYARRAY);\n\n\t\tvar pending = [];\n\t\tvar key = self.db.name + '#';\n\t\tvar l = key.length;\n\n\t\tfor (var i = 0, length = response.length; i < length; i++)\n\t\t\tresponse[i].substring(0, l) === key && pending.push(response[i]);\n\n\t\tvar target = framework_utils.join(self.directory);\n\t\tvar output = [];\n\t\tvar le = EXTENSION_BINARY.length;\n\n\t\tpending.wait(function(item, next) {\n\n\t\t\tvar stream = Fs.createReadStream(target + '/' + item, { start: 0, end: BINARY_HEADER_LENGTH - 1, encoding: 'binary' });\n\n\t\t\tstream.on('data', function(buffer) {\n\t\t\t\tvar json = framework_utils.createBuffer(buffer, 'binary').toString('utf8').replace(REG_CLEAN, '').parseJSON(true);\n\t\t\t\tif (json) {\n\t\t\t\t\tjson.id = item.substring(l, item.length - le);\n\t\t\t\t\toutput.push(json);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tCLEANUP(stream, next);\n\t\t}, () => callback(null, output), 2);\n\t});\n\n\treturn self;\n};\n\nfunction Backuper(filename) {\n\tthis.filename = filename;\n\tthis.items = [];\n\tthis.is = false;\n\tthis.callback;\n}\n\nBackuper.prototype.write = function(value) {\n\tthis.items.push(value);\n\tthis.flush();\n\treturn this;\n};\n\nBackuper.prototype.flush = function() {\n\tvar self = this;\n\tif (self.is)\n\t\treturn self;\n\n\tif (!self.items.length)\n\t\treturn self;\n\n\tvar value = self.items.join('');\n\tself.is = true;\n\n\tFs.appendFile(self.filename, value, function() {\n\t\tself.is = false;\n\t\tself.flush();\n\t});\n\n\tself.items = [];\n\treturn self;\n};\n\n// ======================================================\n// Helper functions\n// ======================================================\n\nfunction compare_eq(doc, index, item) {\n\treturn item.value === doc[item.name];\n}\n\nfunction compare_lt(doc, index, item) {\n\treturn item.value < doc[item.name];\n}\n\nfunction compare_gt(doc, index, item) {\n\treturn item.value > doc[item.name];\n}\n\nfunction compare_eqlt(doc, index, item) {\n\treturn item.value <= doc[item.name];\n}\n\nfunction compare_eqgt(doc, index, item) {\n\treturn item.value >= doc[item.name];\n}\n\nfunction compare_not(doc, index, item) {\n\treturn item.value !== doc[item.name];\n}\n\nfunction compare_eq_date(doc, index, item) {\n\tvar val = doc[item.name]\n\treturn val ? item.value === (val instanceof Date ? val : new Date(val)) : false;\n}\n\nfunction compare_lt_date(doc, index, item) {\n\tvar val = doc[item.name];\n\treturn val ? item.value < (val instanceof Date ? val : new Date(val)) : false;\n}\n\nfunction compare_gt_date(doc, index, item) {\n\tvar val = doc[item.name];\n\treturn val ? item.value > (val instanceof Date ? val : new Date(val)) : false;\n}\n\nfunction compare_eqlt_date(doc, index, item) {\n\tvar val = doc[item.name];\n\treturn val ? item.value <= (val instanceof Date ? val : new Date(val)) : false;\n}\n\nfunction compare_eqgt_date(doc, index, item) {\n\tvar val = doc[item.name];\n\treturn val ? item.value >= (val instanceof Date ? val : new Date(val)) : false;\n}\n\nfunction compare_not_date(doc, index, item) {\n\tvar val = doc[item.name];\n\treturn val ? item.value !== (val instanceof Date ? val : new Date(val)) : false;\n}\n\nfunction compare_likebeg(doc, index, item) {\n\tvar val = doc[item.name];\n\treturn val ? val.startsWith(item.value) : false;\n}\n\nfunction compare_likeend(doc, index, item) {\n\tvar val = doc[item.name];\n\treturn val ? val.endsWith(item.value) : false;\n}\n\nfunction compare_like(doc, index, item) {\n\tvar val = doc[item.name];\n\n\tif (!val || !val.toLowerCase)\n\t\treturn false;\n\n\tif (item.value instanceof Array) {\n\t\tfor (var i = 0, length = item.value.length; i < length; i++) {\n\t\t\tif (val.toLowerCase().indexOf(item.value[i]) !== -1)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\treturn val.toLowerCase().indexOf(item.value) !== -1;\n}\n\nfunction compare_between(doc, index, item) {\n\tvar val = doc[item.name];\n\treturn val >= item.a && val <= item.b;\n}\n\nfunction compare_in(doc, index, item) {\n\tvar val = doc[item.name];\n\tif (val instanceof Array) {\n\t\tfor (var i = 0, length = val.length; i < length; i++) {\n\t\t\tif (item.value.indexOf(val[i]) !== -1)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\treturn item.value.indexOf(val) !== -1;\n}\n\nfunction compare_notin(doc, index, item) {\n\tvar val = doc[item.name];\n\tif (val instanceof Array) {\n\t\tfor (var i = 0, length = val.length; i < length; i++) {\n\t\t\tif (item.value.indexOf(val[i]) !== -1)\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\treturn item.value.indexOf(val) === -1;\n}\n\nfunction compare_datetype(type, eqtype, val, doc) {\n\n\tif (!doc)\n\t\treturn false;\n\telse if (!doc.getTime) {\n\t\tdoc = new Date(doc);\n\t\tif (isNaN(doc))\n\t\t\treturn false;\n\t}\n\n\tswitch (type) {\n\t\tcase 'month':\n\t\t\tdoc = doc.getMonth() + 1;\n\t\t\tbreak;\n\t\tcase 'day':\n\t\t\tdoc = doc.getDate();\n\t\t\tbreak;\n\t\tcase 'year':\n\t\t\tdoc = doc.getFullYear();\n\t\t\tbreak;\n\t}\n\n\treturn eqtype === '=' ? val === doc : eqtype === '>' ? val > doc : eqtype === '<' ? val < doc : eqtype === '>=' ? val >= doc : eqtype === '<=' ? val <= doc : val !== doc;\n};\n\nfunction compare_eq_dtmonth(doc, index, item) {\n\treturn compare_datetype('month', '=', item.value, doc[item.name]);\n}\n\nfunction compare_lt_dtmonth(doc, index, item) {\n\treturn compare_datetype('month', '<', item.value, doc[item.name]);\n}\n\nfunction compare_gt_dtmonth(doc, index, item) {\n\treturn compare_datetype('month', '>', item.value, doc[item.name]);\n}\n\nfunction compare_eqlt_dtmonth(doc, index, item) {\n\treturn compare_datetype('month', '<=', item.value, doc[item.name]);\n}\n\nfunction compare_eqgt_dtmonth(doc, index, item) {\n\treturn compare_datetype('month', '>=', item.value, doc[item.name]);\n}\n\nfunction compare_not_dtmonth(doc, index, item) {\n\treturn compare_datetype('month', '!=', item.value, doc[item.name]);\n}\n\nfunction compare_eq_dtyear(doc, index, item) {\n\treturn compare_datetype('year', '=', item.value, doc[item.name]);\n}\n\nfunction compare_lt_dtyear(doc, index, item) {\n\treturn compare_datetype('year', '<', item.value, doc[item.name]);\n}\n\nfunction compare_gt_dtyear(doc, index, item) {\n\treturn compare_datetype('year', '>', item.value, doc[item.name]);\n}\n\nfunction compare_eqlt_dtyear(doc, index, item) {\n\treturn compare_datetype('year', '<=', item.value, doc[item.name]);\n}\n\nfunction compare_eqgt_dtyear(doc, index, item) {\n\treturn compare_datetype('year', '>=', item.value, doc[item.name]);\n}\n\nfunction compare_not_dtyear(doc, index, item) {\n\treturn compare_datetype('year', '!=', item.value, doc[item.name]);\n}\n\nfunction compare_eq_dtday(doc, index, item) {\n\treturn compare_datetype('day', '=', item.value, doc[item.name]);\n}\n\nfunction compare_lt_dtday(doc, index, item) {\n\treturn compare_datetype('day', '<', item.value, doc[item.name]);\n}\n\nfunction compare_gt_dtday(doc, index, item) {\n\treturn compare_datetype('day', '>', item.value, doc[item.name]);\n}\n\nfunction compare_eqlt_dtday(doc, index, item) {\n\treturn compare_datetype('day', '<=', item.value, doc[item.name]);\n}\n\nfunction compare_eqgt_dtday(doc, index, item) {\n\treturn compare_datetype('day', '>=', item.value, doc[item.name]);\n}\n\nfunction compare_not_dtday(doc, index, item) {\n\treturn compare_datetype('day', '!=', item.value, doc[item.name]);\n}\n\nfunction errorhandling(err, builder, response) {\n\tif (err)\n\t\treturn err;\n\tvar is = response instanceof Array;\n\tif (!response || (is && !response.length))\n\t\treturn builder.$callback_emptyerror ? new ErrorBuilder().push(builder.$callback_emptyerror) : null;\n\treturn null;\n}\n\nfunction jsonparser(key, value) {\n\treturn typeof(value) === 'string' && value.isJSONDate() ? new Date(value) : value;\n}"}